<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>DevExpress.Utils.v23.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Accessibility">
      <summary>
        <para>Contains classes that supply accessibility information for DevExpress UI elements.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Accessibility.DXAccessible">
      <summary>
        <para>The class that exposes the static QueryAccessibleInfo event used to supply accessibility information for DevExpress UI elements dynamically.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfo">
      <summary>
        <para>Allows you to supply accessibility information to DevExpress UI elements dynamically.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs">
      <summary>
        <para>Contains data for the <see cref="E:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfo"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.AccessibleObject">
      <summary>
        <para>Gets the <see cref="T:System.Windows.Forms.AccessibleObject">System.Windows.Forms.AccessibleObject</see> that allows you to return the standard accessibility information about the currently processed UI element.</para>
      </summary>
      <value>The accessibility object.</value>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.DefaultAction">
      <summary>
        <para>Gets or sets a string that describes the UI element’s default action.</para>
      </summary>
      <value>The string that describes the UI element’s default action.</value>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.Description">
      <summary>
        <para>Gets or sets a string that describes the visual appearance of the currently processed UI element.</para>
      </summary>
      <value>The string that describes the object’s visual appearance.</value>
    </member>
    <member name="M:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.GetDXAccessible``1">
      <summary>
        <para>Returns a BaseAccessible object (or its descendant) that stores additional accessibility information about the currently processed UI element.</para>
      </summary>
      <typeparam name="DXAccessible">The BaseAccessible class descendant.</typeparam>
      <returns>The object that stores additional accessibility information about the currently processed UI element.</returns>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.Name">
      <summary>
        <para>Gets or sets the name of the Accessible Object associated with a UI element.</para>
      </summary>
      <value>The name of the Accessible Object associated with a UI element.</value>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.Owner">
      <summary>
        <para>Gets the <see cref="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.Owner">QueryAccessibleInfoEventArgs.Owner</see> control’s child object that contains the currently processed UI element.</para>
      </summary>
      <value>The control’s child object that contains the currently processed UI element.</value>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.OwnerControl">
      <summary>
        <para>Gets the control that contains the currently processed UI element.</para>
      </summary>
      <value>The control that contains the currently processed UI element.</value>
    </member>
    <member name="P:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.Role">
      <summary>
        <para>Gets or sets the accessible role of the currently processed UI element.</para>
      </summary>
      <value>The accessible role of the currently processed UI element.</value>
    </member>
    <member name="M:DevExpress.Accessibility.DXAccessible.QueryAccessibleInfoEventArgs.ToString">
      <summary>
        <para>Returns a string representing the current object.</para>
      </summary>
      <returns>A String value that represents the current object.</returns>
    </member>
    <member name="N:DevExpress.DocumentView">
      <summary>
        <para>Contains classes that provide basic functionality to documents published using the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/> control.</para>
      </summary>
    </member>
    <member name="N:DevExpress.DocumentView.Controls">
      <summary>
        <para>Contains classes that provide basic functionality to the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/> control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DocumentView.Controls.DocumentViewerBase">
      <summary>
        <para>The base for classes that provide the <see href="https://docs.devexpress.com/WindowsForms/7341/controls-and-libraries/printing-exporting/concepts/print-preview">Print Preview</see> functionality in Windows Forms applications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DocumentView.Controls.DocumentViewerBase"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.AutoZoom">
      <summary>
        <para>Specifies whether or not the auto-zoom mode is enabled for the print preview.</para>
      </summary>
      <value>true if the auto-zoom mode is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackColor">
      <summary>
        <para>Specifies the background color of a <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the background color of the Document Viewer.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImage">
      <summary>
        <para>This property is overridden and never used. To customize the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>‘s background image, use custom <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">skins</see>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImageChanged">
      <summary>
        <para>Hides the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged"/> event of the base class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImageLayout">
      <summary>
        <para>This property is overridden and never used. To customize the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>‘s background image and its layout, use custom <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">skins</see>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImageLayoutChanged">
      <summary>
        <para>Hides the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged"/> event of the base class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BorderStyle">
      <summary>
        <para>Specifies the border style of the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>One of the <see cref="T:System.Windows.Forms.BorderStyle"/> enumeration values, representing the border style.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Continuous">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.DesignMode">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Document">
      <summary>
        <para>Specifies the document assigned to the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.DocumentView.IDocument"/> interface. (Typically, this is a <see cref="T:DevExpress.XtraPrinting.Document"/> object.)</value>
    </member>
    <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.DocumentChanged">
      <summary>
        <para>Occurs when a <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/> receives a document change notification.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.DocumentIsCreating">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.DocumentIsEmpty">
      <summary>
        <para>Specifies whether or not the current document is empty.</para>
      </summary>
      <value>true if the document is empty; otherwise false.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.EnableSmoothScrolling">
      <summary>
        <para>Specifies whether to enable smooth scrolling in the Document Viewer control.</para>
      </summary>
      <value>True, to enable smooth scrolling in the Document Viewer control; otherwise, False. The Default value is equivalent to False.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ForeColor">
      <summary>
        <para>Specifies the foreground color of the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the foreground color of the Document Viewer.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.HandTool">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.IsMetric">
      <summary>
        <para>Gets or sets a value indicating whether or not to use the metric system for measurements in the print preview.</para>
      </summary>
      <value>true, to use the metric system for measurements made in the document’s preview; otherwise, false. The default value is set to the System.Globalization.RegionInfo.CurrentRegion.IsMetric property value.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Margins">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageColumns">
      <summary>
        <para>Gets the maximum number of columns for multi-page reports displayed within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>An integer value, specifying the maximum number of columns in a multi-page report.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageRows">
      <summary>
        <para>Gets the maximum number of rows for a multi-page report displayed within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>An integer value, specifying the maximum number of rows in a multi-page report.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxZoom">
      <summary>
        <para>Gets the maximum zoom factor of a report page within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value, specifying the maximum zoom factor of a report page within the Document Viewer.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MinZoom">
      <summary>
        <para>Gets the minimum zoom factor of a report page within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value, specifying the minimum zoom factor of a report page within the Document Viewer.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PageBorderColor">
      <summary>
        <para>Specifies the color used to draw borders around all pages in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the color of page borders.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PageBorderVisibility">
      <summary>
        <para>Specifies whether or not borders should be painted around all and selected document pages in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.DocumentView.PageBorderVisibility"/> enumeration value, that specifies the visibility of page borders.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PageBorderWidth">
      <summary>
        <para>Specifies the width of the borders around all pages in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>An integer value, specifying the width of the page borders.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PopupForm">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ResetBackColor">
      <summary>
        <para>Sets the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackColor">DocumentViewerBase.BackColor</see> property to <see cref="F:System.Drawing.Color.Empty"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ResetForeColor">
      <summary>
        <para>Sets the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ForeColor">DocumentViewerBase.ForeColor</see> property to <see cref="F:System.Drawing.Color.Empty"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ScrollPageDown">
      <summary>
        <para>Scrolls one page down.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ScrollPageUp">
      <summary>
        <para>Scrolls one page up.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPage">
      <summary>
        <para>Obtains the currently selected report page.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.DocumentView.IPage"/> interface, corresponding to the currently selected report page. (Typically, this is a <see cref="T:DevExpress.XtraPrinting.Page"/> object.)</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageBorderColor">
      <summary>
        <para>Specifies the color of borders around the currently selected page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the border color of the selected page.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageBorderWidth">
      <summary>
        <para>Specifies the width of the borders around the currently selected page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>An integer value, specifying the width of the selected page’s borders.</value>
    </member>
    <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageChanged">
      <summary>
        <para>Occurs when the selected page within the print preview is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageIndex">
      <summary>
        <para>Specifies the index of a currently selected page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>An integer value, specifying the index of the currently selected page.</value>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectFirstPage">
      <summary>
        <para>Moves selection to the first page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectLastPage">
      <summary>
        <para>Moves selection to the last page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectNextPage">
      <summary>
        <para>Moves selection to the next page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectPrevPage">
      <summary>
        <para>Moves selection to the previous page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetCursor(System.Windows.Forms.Cursor)">
      <summary>
        <para>Sets the cursor kind to be used within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <param name="cursor">A <see cref="T:System.Windows.Forms.Cursor"/> object, specifying the cursor kind.</param>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetFocus">
      <summary>
        <para>Sets the input focus to the current instance of <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetPageView(DevExpress.XtraPrinting.PageViewModes)">
      <summary>
        <para>Determines the number of columns and rows used to display pages of a multipage report within a Print Preview.</para>
      </summary>
      <param name="viewMode">A <see cref="T:DevExpress.XtraPrinting.PageViewModes"/> enumeration value.</param>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetPageView(System.Int32,System.Int32)">
      <summary>
        <para>Determines the number of columns and rows used to display pages of a multipage report within a Print Preview.</para>
      </summary>
      <param name="columns">The number of columns. It will not exceed the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageColumns">DocumentViewerBase.MaxPageColumns</see> property value.</param>
      <param name="rows">The number of rows. It will not exceed the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageRows">DocumentViewerBase.MaxPageRows</see> property value.</param>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ShowPage(DevExpress.DocumentView.IPage)">
      <summary>
        <para>Shows the specified page in the Document Viewer.</para>
      </summary>
      <param name="page">An object implementing the <see cref="T:DevExpress.DocumentView.IPage"/> interface. (Typically, this is a <see cref="T:DevExpress.XtraPrinting.Page"/> object.)</param>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ShowPageMargins">
      <summary>
        <para>Specifies whether or not the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/> shows page margin lines.</para>
      </summary>
      <value>true to show page margin lines; otherwise false.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ShowToolTips">
      <summary>
        <para>Specifies whether or not to display hints in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>true to display hints; otherwise false.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Status">
      <summary>
        <para>Specifies whether or not the current document is empty or null.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.TooltipBackColor">
      <summary>
        <para>Specifies the background color of all tooltips in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the background color of the tooltips.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.TooltipFont">
      <summary>
        <para>Specifies the font of all tooltips in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> structure, specifying the text settings that include the font face, size, and style attributes.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.TooltipForeColor">
      <summary>
        <para>Specifies the foreground color of all tooltips in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the foreground color of the tooltips.</value>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.UpdatePageView">
      <summary>
        <para>For internal use. Redraws the current page view in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.UpdateScrollBars">
      <summary>
        <para>Redraws the control’s scroll bars.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.UseDirectXPaint">
      <summary>
        <para>Specifies whether the Document Viewer control uses the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see>.</para>
      </summary>
      <value>True, to enable the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see> for the Document Viewer control; otherwise, False. The Default value is equivalent to False.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewColumns">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewControl">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewManager">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewRows">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewWholePage">
      <summary>
        <para>Allows you to show the currently displayed page in full.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Zoom">
      <summary>
        <para>Specifies the current zoom factor of a document page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value, specifying the current zoom factor of a document page.</value>
    </member>
    <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.ZoomChanged">
      <summary>
        <para>Occurs after the document current zoom factor has changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ZoomIn">
      <summary>
        <para>Zooms in on the page currently displayed in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ZoomOut">
      <summary>
        <para>Zooms out the page currently displayed in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DocumentView.PageBorderVisibility">
      <summary>
        <para>Lists the values used to specify the visibility of page borders.</para>
      </summary>
    </member>
    <member name="F:DevExpress.DocumentView.PageBorderVisibility.All">
      <summary>
        <para>Both standard borders and selection borders are painted around pages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.DocumentView.PageBorderVisibility.AllWithoutSelection">
      <summary>
        <para>Only standard page borders are painted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.DocumentView.PageBorderVisibility.None">
      <summary>
        <para>Borders are not painted around pages at all.</para>
      </summary>
    </member>
    <member name="N:DevExpress.LookAndFeel">
      <summary>
        <para>Contains classes that provide a common look and feel management for DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle">
      <summary>
        <para>Enumerates values for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle">UserLookAndFeel.ActiveStyle</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Flat">
      <summary>
        <para>Control borders are flat. The following screenshot shows the Flat style applied to a button edit control.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Office2003">
      <summary>
        <para>Borders and buttons have an Office 2003 style. The borders and client area are highlighted when the mouse pointer is positioned over them or they are focused.</para>
        <para>The following screenshot shows the Office2003 style applied to a button edit control.</para>
        <para />
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Skin">
      <summary>
        <para>Control elements are painted using the skin determined by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property. The following screenshot shows a button editor painted using the default Caramel skin.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Style3D">
      <summary>
        <para>Control borders are three-dimensional. The following screenshot shows the Style3D style applied to a button edit control.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.UltraFlat">
      <summary>
        <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused.</para>
        <para>The following screenshot shows the UltraFlat style applied to a button edit control.</para>
        <para />
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.WindowsXP">
      <summary>
        <para>Control elements are painted using the XP theme.  The following screenshot shows the WindowsXP style applied to a button edit control.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.LookAndFeel.DefaultLookAndFeel">
      <summary>
        <para>Provides centralized access to global <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">look-and-feel</see> settings that affect all DevExpress controls in your application.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.LookAndFeel.DefaultLookAndFeel"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.LookAndFeel.DefaultLookAndFeel"/> class with the specified container.</para>
      </summary>
      <param name="container">A <see cref="T:System.ComponentModel.IContainer"/> that represents the container for the Default LookAndFeel object.</param>
    </member>
    <member name="P:DevExpress.LookAndFeel.DefaultLookAndFeel.EnableBonusSkins">
      <summary>
        <para>Registers the <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Bonus Skins</see> for runtime use.</para>
      </summary>
      <value>true to register the Bonus Skins.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.DefaultLookAndFeel.LookAndFeel">
      <summary>
        <para>Gets the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining Default LookAndFeel settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining Default LookAndFeel settings.</value>
    </member>
    <member name="N:DevExpress.LookAndFeel.Helpers">
      <summary>
        <para>Contains classes that support the look-and-feel mechanism for DevExpress controls and components.</para>
      </summary>
    </member>
    <member name="T:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel">
      <summary>
        <para>Contains settings that specify the look and feel of an XtraUserControl and all DevExpress controls placed on it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel"/> class with the specified owner.</para>
      </summary>
      <param name="owner">The owner of the created <see cref="T:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel"/> object.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.Assign(DevExpress.LookAndFeel.UserLookAndFeel)">
      <summary>
        <para>Copies properties of the specified <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to the current object.</para>
      </summary>
      <param name="source">The source <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.Dispose">
      <summary>
        <para>Disposes of the current object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.FormTouchUIMode">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.GetTouchScaleFactor">
      <summary>
        <para>Gets the actual touch UI scale factor for the current container.</para>
      </summary>
      <returns>The actual touch UI scale factor for the current container.</returns>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.GetTouchUI">
      <summary>
        <para>Gets the actual availability of touch UI mode for the current container.</para>
      </summary>
      <returns>A Boolean value that specifies the actual availability of touch UI mode for the current container.</returns>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.Reset">
      <summary>
        <para>Reverts the look and feel settings to their default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.ShouldSerialize">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.TouchScaleFactor">
      <summary>
        <para>Gets or sets the scale factor used to calculate the size and distance between specific control elements when touch UI mode is enabled.</para>
      </summary>
      <value>The scale factor used to calculate the size and distance between specific control elements when touch UI mode is enabled.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.TouchUIMode">
      <summary>
        <para>Gets or sets whether the current container and its child controls use touch UI mode, in which the controls automatically increase their size and the distance between some of their elements.</para>
      </summary>
      <value>A value that specifies if touch UI mode is enabled for the current container and its child controls.</value>
    </member>
    <member name="T:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel">
      <summary>
        <para>Contains settings that specify the look and feel of the current form and all DevExpress controls placed on the form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel.#ctor(System.Windows.Forms.Form)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel"/> class with the specified settings.</para>
      </summary>
      <param name="owner">A Form that owns the newly created <see cref="T:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel"/> object.</param>
    </member>
    <member name="T:DevExpress.LookAndFeel.LookAndFeelStyle">
      <summary>
        <para>Enumerates values for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">UserLookAndFeel.Style</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Flat">
      <summary>
        <para>Control borders are flat. It is not recommended that you use this style (see this announcement for more details: WinForms Deprecation Notice — Classic Visual Styles).</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Office2003">
      <summary>
        <para>Borders and buttons have an Office 2003 style. The borders and client area are highlighted when the mouse pointer is positioned over them or they are focused. It is not recommended that you use this style (see this announcement for more details: WinForms Deprecation Notice — Classic Visual Styles).</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Skin">
      <summary>
        <para>Control elements are painted using the skin specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Style3D">
      <summary>
        <para>Control borders are three-dimensional. It is not recommended that you use this style (see this announcement for more details: WinForms Deprecation Notice — Classic Visual Styles).</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.UltraFlat">
      <summary>
        <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. It is not recommended that you use this style (see this announcement for more details: WinForms Deprecation Notice — Classic Visual Styles).</para>
      </summary>
    </member>
    <member name="T:DevExpress.LookAndFeel.TouchUIMode">
      <summary>
        <para>Contains values used to set the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchUIMode">WindowsFormsSettings.TouchUIMode</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.TouchUIMode.Default">
      <summary>
        <para>The same as False.</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.TouchUIMode.False">
      <summary>
        <para>Touch UI mode is disabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.LookAndFeel.TouchUIMode.True">
      <summary>
        <para>Touch UI mode is enabled.</para>
      </summary>
    </member>
    <member name="T:DevExpress.LookAndFeel.UserLookAndFeel">
      <summary>
        <para>Represents look and feel settings for controls provided by DevExpress.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> class.</para>
      </summary>
      <param name="ownerControl">An object which represents the control that will own the created <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.OwnerControl">UserLookAndFeel.OwnerControl</see> property.</param>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveLookAndFeel">
      <summary>
        <para>Gets the actual <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveSkinName">
      <summary>
        <para>Gets the name of the currently applied skin.</para>
      </summary>
      <value>A string which specifies the name of the currently applied skin.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle">
      <summary>
        <para>Gets the style currently applied.</para>
      </summary>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveSvgPaletteName">
      <summary>
        <para>Returns the name of the currently applied <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">swatch</see>.</para>
      </summary>
      <value>A String value that is the swatch name.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.CompactUIMode">
      <summary>
        <para>This method supports internal infrastructure and is not intended for use in code.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.CompactUIModeForced">
      <summary>
        <para>Returns whether the application is currently in Compact UI Mode. The return value depends on both the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.CompactUIMode">WindowsFormsSettings.CompactUIMode</see> property and the currently applied skin (for instance, the WXI Compact skin forces the Compact UI Mode).</para>
      </summary>
      <value>true if the application is currently in Compact UI Mode; false if the Regular mode is currently active.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Default">
      <summary>
        <para>Gets the Default LookAndFeel object to use for controls when the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">UserLookAndFeel.UseDefaultLookAndFeel</see> property is set to true.</para>
      </summary>
      <value>The Default LookAndFeel object.</value>
    </member>
    <member name="F:DevExpress.LookAndFeel.UserLookAndFeel.DefaultSkinName">
      <summary>
        <para>Gets the name of the default skin style.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Dispose">
      <summary>
        <para>Releases all resources used by the current object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ForceCompactUIMode(System.Boolean,System.Boolean)">
      <summary>
        <para>This method is not intended to be used in code. Use the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.CompactUIMode">WindowsFormsSettings.CompactUIMode</see> property instead to switch between regular and compact UI modes.</para>
      </summary>
      <param name="compact">Specifies whether the Compact UI Mode is enabled.</param>
      <param name="raiseStyleChanged">true if switching between regular and compact UI modes should raise the style changed event; false to silently switch between UI modes.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetCompactScaleFactor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns>This member supports the internal infrastructure and is not intended to be used directly from your code.</returns>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetCompactUI">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns>This member supports the internal infrastructure and is not intended to be used directly from your code.</returns>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetMaskColor">
      <summary>
        <para>Gets the actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor">UserLookAndFeel.SkinMaskColor</see> setting for the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</para>
      </summary>
      <returns>The actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor">UserLookAndFeel.SkinMaskColor</see> setting for the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</returns>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetMaskColor2">
      <summary>
        <para>Gets the actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2">UserLookAndFeel.SkinMaskColor2</see> setting for the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</para>
      </summary>
      <returns>The actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2">UserLookAndFeel.SkinMaskColor2</see> setting for the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</returns>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetTouchScaleFactor">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. Use the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor">WindowsFormsSettings.TouchScaleFactor</see> property instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetTouchUI">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. Use the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchUIMode">WindowsFormsSettings.TouchUIMode</see> property instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.IsColorized">
      <summary>
        <para>Gets whether the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor">UserLookAndFeel.SkinMaskColor</see> or <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2">UserLookAndFeel.SkinMaskColor2</see> property is specified for the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</para>
      </summary>
      <value>true if the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor">UserLookAndFeel.SkinMaskColor</see> or <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2">UserLookAndFeel.SkinMaskColor2</see> setting is specified; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.IsLookAndFeelHierarchyRoot">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.OwnerControl">
      <summary>
        <para>Gets the control that owns the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</para>
      </summary>
      <value>An object which represents the control that owns the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Painter">
      <summary>
        <para>Gets the painter based on the style currently applied for drawing control’s elements.</para>
      </summary>
      <value>A BaseLookAndFeelPainters class descendant specifying the painter corresponding to the current style which is defined by <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle">UserLookAndFeel.ActiveStyle</see>.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel">
      <summary>
        <para>Gets or sets the parent LookAndFeel.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object specifying the parent LookAndFeel; null if the parent LookAndFeel is not assigned.</value>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Reset">
      <summary>
        <para>Reverts the look and feel settings to their default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ResetParentLookAndFeel">
      <summary>
        <para>Sets the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel">UserLookAndFeel.ParentLookAndFeel</see> property to its default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetDefaultStyle">
      <summary>
        <para>Applies the default look and feel settings to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetFlatStyle">
      <summary>
        <para>Applies the Flat style to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetOffice2003Style">
      <summary>
        <para>Applies the Office2003 style to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(DevExpress.LookAndFeel.SkinStyle)">
      <summary>
        <para>Applies the desired <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">DevExpress skin</see> to the application.</para>
      </summary>
      <param name="skinStyle">A static field of the DevExpress.LookAndFeel.SkinStyle class that specifies the skin name.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(DevExpress.LookAndFeel.SkinSvgPalette)">
      <summary>
        <para>Applies the specified skin and palette.</para>
      </summary>
      <param name="palette">A SkinSvgPalette object specifying the skin and palette to apply.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String,DevExpress.LookAndFeel.TouchUIMode)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="skinName">A string.</param>
      <param name="touchUI">A TouchUIMode value.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="skinName">A string.</param>
      <param name="touchUI">A Boolean value.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String,System.String)">
      <summary>
        <para>Applies the specified skin and palette.</para>
      </summary>
      <param name="skinName">A string value specifying the name of the skin to apply.</param>
      <param name="paletteName">The name of the palette used to color vector images to apply.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String)">
      <summary>
        <para>Applies the specified skin.</para>
      </summary>
      <param name="skinName">A string value specifying the skin name to apply.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.DesignService.ILookAndFeelService,System.String)">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.DesignService.ILookAndFeelService)">
      <summary>
        <para>This method supports internal infrastructure and is not intended to be used in code.</para>
      </summary>
      <param name="service" />
      <returns />
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,DevExpress.LookAndFeel.TouchUIMode,System.Single)">
      <summary>
        <para>Sets the look and feel settings of the current object to the specified values.</para>
      </summary>
      <param name="style">A value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">UserLookAndFeel.Style</see> property.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true, to use the look and feel settings provided by the parent object or default look and feel object; false, to apply the current object’s settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">UserLookAndFeel.UseDefaultLookAndFeel</see> property.</param>
      <param name="skinName">A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property.</param>
      <param name="touchUIMode">A value that specifies whether touch-aware mode needs to be enabled or disabled. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.</param>
      <param name="touchScaleFactor">The scale factor applied when touch-aware mode is enabled. This value is assigned to the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor">WindowsFormsSettings.TouchScaleFactor</see> property.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,DevExpress.LookAndFeel.TouchUIMode)">
      <summary>
        <para>Sets the look and feel settings of the current object to the specified values.</para>
      </summary>
      <param name="style">A value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">UserLookAndFeel.Style</see> property.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true, to use the look and feel settings provided by the parent object or default look and feel object; false, to apply the current object’s settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">UserLookAndFeel.UseDefaultLookAndFeel</see> property.</param>
      <param name="skinName">A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property.</param>
      <param name="touchUIMode">A value that specifies whether touch-aware mode needs to be enabled or disabled. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,System.Boolean,System.Single)">
      <summary>
        <para>Sets the look and feel settings of the current object to the specified values.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">UserLookAndFeel.Style</see> property.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true to use the look and feel settings provided by the parent object or default look and feel object; false to apply the current object’s settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">UserLookAndFeel.UseDefaultLookAndFeel</see> property.</param>
      <param name="skinName">A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property.</param>
      <param name="touchUI">true, to enable the touch-aware mode; otherwise, false. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.</param>
      <param name="touchScaleFactor">The scale factor applied when touch-aware mode is enabled. This value is assigned to the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor">WindowsFormsSettings.TouchScaleFactor</see> property.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Sets the look and feel settings of the current object to the specified values.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">UserLookAndFeel.Style</see> property.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true to use the look and feel settings provided by the parent object or default look and feel object; false to apply the current object’s settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">UserLookAndFeel.UseDefaultLookAndFeel</see> property.</param>
      <param name="skinName">A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property.</param>
      <param name="touchUI">true, to enable the touch-aware mode; otherwise, false. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,System.String)">
      <summary>
        <para>Sets the look and feel settings of the current object to the specified values.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">UserLookAndFeel.Style</see> property.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true to use the look and feel settings provided by the parent object or default look and feel object; false to apply the current object’s settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">UserLookAndFeel.UseDefaultLookAndFeel</see> property.</param>
      <param name="skinName">A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">UserLookAndFeel.SkinName</see> property.</param>
      <param name="paletteName">A string value specifying the name of the palette used to color vector images.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String)">
      <summary>
        <para>Sets the look and feel settings of the current object to the specified values.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true to use the look and feel settings provided by the parent object or default look and feel object; false to apply the current object’s settings.</param>
      <param name="skinName">A string value specifying the skin name.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean)">
      <summary>
        <para>Sets the look and feel settings of the current object.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object.</param>
      <param name="useWindowsXPTheme">true if a control should be painted using the WindowsXP theme; otherwise, false.</param>
      <param name="useDefaultLookAndFeel">true to use the look and feel settings provided by the parent object or default look and feel object; false to apply the current object’s settings.</param>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle3D">
      <summary>
        <para>Applies the Style3D style to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetUltraFlatStyle">
      <summary>
        <para>Applies the UltraFlat style to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetWindowsXPStyle">
      <summary>
        <para>Applies the WindowsXP style to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ShouldSerialize">
      <summary>
        <para>Tests whether the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object should be persisted.</para>
      </summary>
      <returns>true if the object should be persisted; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor">
      <summary>
        <para>Gets or sets a custom hue applied to some skin elements.</para>
      </summary>
      <value>A custom hue applied to skin elements.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2">
      <summary>
        <para>Gets or sets the second custom hue, typically applied to some skin elements when they are highlighted/hovered.</para>
      </summary>
      <value>The second custom hue applied to some skin elements.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">
      <summary>
        <para>Gets or sets the name of a skin style.</para>
      </summary>
      <value>A string value specifying the skin style’s name.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">
      <summary>
        <para>Gets or sets the style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</para>
      </summary>
      <value>The style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</value>
    </member>
    <member name="E:DevExpress.LookAndFeel.UserLookAndFeel.StyleChanged">
      <summary>
        <para>Occurs on changing properties of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object or the parent LookAndFeel specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel">UserLookAndFeel.ParentLookAndFeel</see> member.</para>
      </summary>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ToString">
      <summary>
        <para>Returns the text representation of the current object.</para>
      </summary>
      <returns>The text representation of the current object.</returns>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.TouchUIParent">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <value>A UserLookAndFeel value.</value>
    </member>
    <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.UpdateStyleSettings">
      <summary>
        <para>Notifies controls that look-and-feel settings have been changed and the controls need to be refreshed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">
      <summary>
        <para>Gets or sets whether the current object’s settings are in effect.</para>
      </summary>
      <value>true to use look and feel settings provided by the parent object or default look and feel object; false to enable this object’s settings.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindows7Border">
      <summary>
        <para>Gets or sets whether borders of <see cref="T:DevExpress.XtraEditors.TextEdit"/> controls are painted in the same manner as borders of standard text editors built into Microsoft Windows 7. This property is in effect if the current OS is Windows 7 and the DevExpress XP paint theme is applied.</para>
      </summary>
      <value>true if borders of <see cref="T:DevExpress.XtraEditors.TextEdit"/> controls are painted in the same manner as borders of standard text editors; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme">
      <summary>
        <para>Gets or sets whether controls should be painted using the native Windows theme.</para>
      </summary>
      <value>true if controls should be painted using the native Windows theme; otherwise, false.</value>
    </member>
    <member name="N:DevExpress.Skins">
      <summary>
        <para>Contains classes for skin management.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Skins.SkinManager">
      <summary>
        <para>Manages skins for DevExpress controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Skins.SkinManager"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Skins.SkinManager.AllowArrowDragIndicators">
      <summary>
        <para>Gets or sets whether dragging-and-dropping columns/fields is indicated using arrow indicators.</para>
      </summary>
      <value>true if dragging-and-dropping columns is indicated using arrow indicators; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Skins.SkinManager.AllowFormSkins">
      <summary>
        <para>Gets whether the form title bar skinning feature is enabled.</para>
      </summary>
      <value>true if the form title bar skinning feature is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Skins.SkinManager.AllowWindowGhosting">
      <summary>
        <para>Gets or sets whether the window ghosting feature is enabled for skinned XtraForm objects.</para>
      </summary>
      <value>A Boolean value that specifies whether the window ghosting feature is enabled. The default value is false.</value>
    </member>
    <member name="P:DevExpress.Skins.SkinManager.Default">
      <summary>
        <para>Provides access to the default skin manager.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Skins.SkinManager"/> object that represents the default skin manager.</value>
    </member>
    <member name="F:DevExpress.Skins.SkinManager.DefaultSkinName">
      <summary>
        <para>Gets the name of the default skin, which is used by controls by default.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.DisableFormSkins">
      <summary>
        <para>Disables the title bar skinning feature for <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see> and <see href="https://docs.devexpress.com/WindowsForms/114565/controls-and-libraries/messages-notifications-and-dialogs">message boxes</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.DisableMdiFormSkins">
      <summary>
        <para>Disables the title bar skinning feature for MDI child DevExpress forms.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.EnableFormSkins">
      <summary>
        <para>Enables the title bar skinning feature for <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see> and <see href="https://docs.devexpress.com/WindowsForms/114565/controls-and-libraries/messages-notifications-and-dialogs">message boxes</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.EnableFormSkinsIfNotVista">
      <summary>
        <para>Enables the title bar skinning feature for <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see> and <see href="https://docs.devexpress.com/WindowsForms/114565/controls-and-libraries/messages-notifications-and-dialogs">message boxes</see>, if the application is running under Microsoft Windows XP.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.EnableMdiFormSkins">
      <summary>
        <para>Enables the title bar skinning feature for MDI child <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetRuntimeSkins">
      <summary>
        <para>Returns a list of the currently available <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">skins</see>.</para>
      </summary>
      <returns>A list of the currently available skins.</returns>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetSkin(DevExpress.Skins.SkinProductId,DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetSkin(System.Object,DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetSkin(System.Object,System.String)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetSkin(System.Object)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetSkinElement(DevExpress.Skins.SkinProductId,DevExpress.Skins.ISkinProvider,System.String)">
      <summary>
        <para>Returns a skin element with the specified name of a control in the specified product displayed using the specified skin provider.</para>
      </summary>
      <param name="productId">A DevExpress.Skins.SkinProductId enumeration value that specifies the product in which the required element is contained.</param>
      <param name="provider">An object implementing the DevExpress.Skins.ISkinProvider interface that is used for painting controls.</param>
      <param name="elementName">A String value that specifies the name of the required element.</param>
      <returns>A DevExpress.Skins.SkinElement object that represents a skin element of a control.</returns>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.GetValidSkinName(System.String)">
      <summary>
        <para>This method returns the specified skin name, if it’s valid. If the skin name is invalid, the default skin’s name is returned.</para>
      </summary>
      <param name="skinName">A string that specifies the skin name to test.</param>
      <returns>A string that specifies the valid skin name.</returns>
    </member>
    <member name="F:DevExpress.Skins.SkinManager.InvalidPoint">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterAssembly(System.Reflection.Assembly)">
      <summary>
        <para>Registers the specified assembly that contains custom skins. Registered skins cannot be applied to splash screens; use the <see cref="M:DevExpress.XtraEditors.WindowsFormsSettings.RegisterUserSkins(System.Reflection.Assembly)">WindowsFormsSettings.RegisterUserSkins(Assembly)</see> method instead.</para>
      </summary>
      <param name="assembly">An assembly that should be registered.</param>
      <returns>true if the assembly is successfully registered; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterSkin(DevExpress.Skins.SkinCreator)">
      <summary>
        <para>Registers the specified skin stored as a BLOB for runtime use. The registered skin cannot be applied to splash screens; use the <see cref="M:DevExpress.XtraEditors.WindowsFormsSettings.RegisterUserSkin(DevExpress.Skins.Info.SkinBlobXmlCreator)">WindowsFormsSettings.RegisterUserSkin(SkinBlobXmlCreator)</see> method instead.</para>
      </summary>
      <param name="creator">An object that contains information on the target BLOB skin.</param>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterSkinAssembly(System.Reflection.Assembly)">
      <summary>
        <para>Registers the specified assembly that contains custom skins.</para>
      </summary>
      <param name="assembly">An assembly that should be registered.</param>
      <returns>true, if the assembly is successfully registered; othrewise, false.</returns>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterSkinPatch(System.IO.Stream,System.Boolean)">
      <summary>
        <para>Loads a skin patch from the stream. Patches loaded by this method overload are not applied to Splash Screens, use other overloads instead.</para>
      </summary>
      <param name="skinPatchStream">The stream to load a patch from.</param>
      <param name="registerSkinPatchPalettes">true to register palettes from the patch, false to leave palettes of the default skin.</param>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterSkinPatch(System.Reflection.Assembly,System.String,System.Boolean)">
      <summary>
        <para>Loads a skin patch embedded as a resource in a <see href="https://docs.devexpress.com/SkinEditor/2547/create-new-skins">custom assembly</see>.</para>
      </summary>
      <param name="assembly">The custom assembly that stores a patch to load.</param>
      <param name="assemblyResourcePath">The assembly resource path.</param>
      <param name="registerSkinPatchPalettes">true to register palettes from the patch, false to leave palettes of the default skin.</param>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterSkinPatch(System.String,System.Boolean)">
      <summary>
        <para>Loads a skin patch from the local storage file.</para>
      </summary>
      <param name="filePath">The path to a file that stores a patch.</param>
      <param name="registerSkinPatchPalettes">true to register palettes from the patch, false to leave palettes of the default skin.</param>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.RegisterSkins(System.Reflection.Assembly)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Skins.SkinManager.ResetSkin(DevExpress.LookAndFeel.SkinStyle)">
      <summary>
        <para>Call this method to undo all patches applied to the target skin.</para>
      </summary>
      <param name="skinStyle">A skin whose patches should be discarded.</param>
    </member>
    <member name="P:DevExpress.Skins.SkinManager.Skins">
      <summary>
        <para>Gets the collection of skins that are currently available for use in DevExpress controls.</para>
      </summary>
      <value>A DevExpress.Skins.SkinContainerCollection collection that stores available skins.</value>
    </member>
    <member name="N:DevExpress.Utils">
      <summary>
        <para>Contains utility classes used by DevExpress controls and components.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.Animation">
      <summary>
        <para>Contains controls supporting animation effects.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.AnimationParameters">
      <summary>
        <para>Represents parameters that specify a transition.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.AnimationParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.AnimationParameters"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.AnimationParameters.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.AnimationParameters"/> class with specified settings.</para>
      </summary>
      <param name="interval">An integer value that specifies the time interval between frames in the transition.</param>
      <param name="count">An integer value that specifies the frame count in the transition.</param>
    </member>
    <member name="M:DevExpress.Utils.Animation.AnimationParameters.Combine(DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Assigns the specified parameter values to parameters not set in this object.</para>
      </summary>
      <param name="defaultParameters">An <see cref="T:DevExpress.Utils.Animation.IAnimationParameters"/> object that specifies transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.AnimationParameters.FrameCount">
      <summary>
        <para>Gets or sets the frame count in the transition.</para>
      </summary>
      <value>An integer value that specifies the frame count in the transition.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.AnimationParameters.FrameInterval">
      <summary>
        <para>Gets the time interval between frames in the transition.</para>
      </summary>
      <value>An integer value that specifies time interval between frames in the transition.</value>
    </member>
    <member name="M:DevExpress.Utils.Animation.AnimationParameters.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:DevExpress.Utils.Animation.BaseTransition">
      <summary>
        <para>A base class for transitions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.BaseTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.BaseTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.BaseTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.BaseTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An <see cref="T:System.Drawing.Image"/> object that specifies the first frame in the transition.</param>
      <param name="to">An <see cref="T:System.Drawing.Image"/> object that specifies the last frame in the transition.</param>
      <param name="parameters">An <see cref="T:DevExpress.Utils.Animation.IAnimationParameters"/> object that specifies the transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.BaseTransition.AnimationInProgress">
      <summary>
        <para>Gets whether the transition is in progress.</para>
      </summary>
      <value>true if the transition is in progress; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.Utils.Animation.BaseTransition.Complete">
      <summary>
        <para>Fires when the transition completes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.BaseTransition.Dispose">
      <summary>
        <para>Disposes unmanaged resources.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.BaseTransition.From">
      <summary>
        <para>Gets the first frame in the transition.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object that specifies the first frame in the transition.</value>
    </member>
    <member name="E:DevExpress.Utils.Animation.BaseTransition.Invalidate">
      <summary>
        <para>Fires after a frame is displayed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.BaseTransition.Parameters">
      <summary>
        <para>Provides access to transition parameters such as the frame count, time interval between frames, etc.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.Animation.IAnimationParameters"/> object that specifies transition parameters.</value>
    </member>
    <member name="M:DevExpress.Utils.Animation.BaseTransition.Restart(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Runs the transition between the specified frames with the specified parameters.</para>
      </summary>
      <param name="from">An <see cref="T:System.Drawing.Image"/> object that specifies the first frame in the transition.</param>
      <param name="to">An <see cref="T:System.Drawing.Image"/> object that specifies the last frame in the transition.</param>
      <param name="parameters">An <see cref="T:DevExpress.Utils.Animation.IAnimationParameters"/> object that specifies transition parameters.</param>
    </member>
    <member name="M:DevExpress.Utils.Animation.BaseTransition.StartAnimation">
      <summary>
        <para>Starts the transition.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.BaseTransition.StopAnimation">
      <summary>
        <para>Stops the transition.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.BaseTransition.To">
      <summary>
        <para>Gets the last frame in the transition.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object that specifies the last frame in the transition.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ClockAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the clock effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ClockAnimationParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.ClockAnimationParameters"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.ClockAnimationParameters.EffectOptions">
      <summary>
        <para>Gets or sets whether the transition goes clockwise or counterclockwise.</para>
      </summary>
      <value>A value that specifies the transition direction.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ClockEffectOptions">
      <summary>
        <para>Enumerates values that specify the transition direction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ClockEffectOptions.Clockwise">
      <summary>
        <para>The transition goes clockwise.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ClockEffectOptions.Counterclockwise">
      <summary>
        <para>The transition goes counterclockwise.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ClockEffectOptions.Wedge">
      <summary>
        <para>The transition goes in both directions: clockwise and counterclockwise.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.ClockTransition">
      <summary>
        <para>Represents a transition from one screen to another with the clock effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ClockTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.ClockTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ClockTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IClockAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.ClockTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that specifies transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.ClockTransition.Parameters">
      <summary>
        <para>Provides access to transition properties.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.Animation.IClockAnimationParameters"/> object that contains transition properties.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.CombAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the comb effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.CombAnimationParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.CombAnimationParameters"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.CombAnimationParameters.Inward">
      <summary>
        <para>Gets or sets whether the transition goes towards the inside coming in from the outside.</para>
      </summary>
      <value>true if the transition goes towards the inside coming in from the outside; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.CombAnimationParameters.StripeCount">
      <summary>
        <para>Gets or sets the number of stripes in the transition.</para>
      </summary>
      <value>An integer value that specifies the number of stripes in the transition.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.CombAnimationParameters.Vertical">
      <summary>
        <para>Gets or sets whether the transition goes vertically.</para>
      </summary>
      <value>true if the transition goes vertically; otherwise, false</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.CombTransition">
      <summary>
        <para>Represents a transition from one screen to another with the comb effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.CombTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.CombTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.CombTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.ICombAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.CombTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that specifies transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.CombTransition.Parameters">
      <summary>
        <para>Provides access to parameters that specify the transition.</para>
      </summary>
      <value>An object that contains transition parameters.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.CoverEffectOptions">
      <summary>
        <para>Enumerates values that specify the cover effect.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromBottom">
      <summary>
        <para>The animation goes from the bottom edge to the top edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromBottomLeft">
      <summary>
        <para>The animation goes from the bottom-left corner to the top-right corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromBottomRight">
      <summary>
        <para>The animation goes from the bottom-right corner to the top-left corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromLeft">
      <summary>
        <para>The animation goes from the left edge to the right edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromRight">
      <summary>
        <para>The animation goes from the right edge to the left edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromTop">
      <summary>
        <para>The animation goes from the top edge to the bottom edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromTopLeft">
      <summary>
        <para>The animation goes from the top-left corner to the bottom-right corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.CoverEffectOptions.FromTopRight">
      <summary>
        <para>The animation goes from the top-right corner to the bottom-left corner.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.CoverTransition">
      <summary>
        <para>Represents a transition from one screen to another with the cover effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.CoverTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.CoverTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.CoverTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.ICoverAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.CoverTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that contains cover transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.CoverTransition.Parameters">
      <summary>
        <para>Provides access to parameters that specify the cover transition.</para>
      </summary>
      <value>An object that specifies cover transition parameters.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.DissolveTransition">
      <summary>
        <para>Represents a transition from one screen to another with the dissolve effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.DissolveTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.DissolveTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.DissolveTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.DissolveTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that contains transition parameters.</param>
    </member>
    <member name="T:DevExpress.Utils.Animation.FadeTransition">
      <summary>
        <para>Represents a transition from one screen to another with the fade effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.FadeTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.FadeTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.FadeTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.FadeTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that specifies animation parameters.</param>
    </member>
    <member name="T:DevExpress.Utils.Animation.IAnimationParameters">
      <summary>
        <para>Contains parameters applied to the associated animation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.IAnimationParameters.Combine(DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Assigns the specified object’s values to the corresponding values that are not set in this object.</para>
      </summary>
      <param name="defaultParameters">An <see cref="T:DevExpress.Utils.Animation.IAnimationParameters"/> object that specifies transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.IAnimationParameters.FrameCount">
      <summary>
        <para>Gets or sets the frame count in the transition.</para>
      </summary>
      <value>An integer value that specifies the frame count in the transition.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.IAnimationParameters.FrameInterval">
      <summary>
        <para>Gets or sets the time interval between frames in the associated transition.</para>
      </summary>
      <value>An integer value that specifies time interval between frames in the associated transition.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.IClockAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the clock effect.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.IClockAnimationParameters.EffectOptions">
      <summary>
        <para>Gets or sets whether the transition goes clockwise or counterclockwise</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Animation.ClockEffectOptions"/> enumeration value that specifies the transition direction.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ICombAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the comb effect.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.ICombAnimationParameters.Inward">
      <summary>
        <para>Gets or sets whether the animation goes towards the inside coming in from the outside.</para>
      </summary>
      <value>true if the animation goes towards the inside coming in from the outside; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.ICombAnimationParameters.StripeCount">
      <summary>
        <para>Gets or sets the number of stripes in the transition.</para>
      </summary>
      <value>An integer value that specifies the number of stripes in the transition.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.ICombAnimationParameters.Vertical">
      <summary>
        <para>Gets or sets whether the transition goes vertically.</para>
      </summary>
      <value>true if the transition goes vertically; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.IPushAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the push effect.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.IPushAnimationParameters.EffectOptions">
      <summary>
        <para>Gets or sets the animation direction.</para>
      </summary>
      <value>A value that specifies the animation direction.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.IShapeAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the shape effect.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.IShapeAnimationParameters.EffectOptions">
      <summary>
        <para>Gets or sets the transition direction and shape.</para>
      </summary>
      <value>A value that specifies the transition direction and shape.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ISlideFadeAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the slide and fade effects.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.ISlideFadeAnimationParameters.Background">
      <summary>
        <para>Gets or sets the background visible during the transition.</para>
      </summary>
      <value>A value that specifies the background visible during the transition.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.PushAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the push effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.PushAnimationParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.PushAnimationParameters"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.PushAnimationParameters.EffectOptions">
      <summary>
        <para>Gets or sets the transition direction.</para>
      </summary>
      <value>A value that specifies the transition direction.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.PushEffectOptions">
      <summary>
        <para>Enumerates values that specify the transition direction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.PushEffectOptions.FromBottom">
      <summary>
        <para>The transition goes from the bottom edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.PushEffectOptions.FromLeft">
      <summary>
        <para>The transition goes from the left edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.PushEffectOptions.FromRight">
      <summary>
        <para>The transition goes from the right edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.PushEffectOptions.FromTop">
      <summary>
        <para>The transition goes from the top edge.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.PushFadeTransition">
      <summary>
        <para>Represents a transition from one screen to another with the push and fade effects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.PushFadeTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.PushFadeTransition"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.PushTransition">
      <summary>
        <para>Represents a transition from one screen to another with the push effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.PushTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.PushTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.PushTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IPushAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.PushTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that specifies animation parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.PushTransition.Parameters">
      <summary>
        <para>Provides access to transition parameters.</para>
      </summary>
      <value>An object that specifies transition parameters.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.SegmentedFadeTransition">
      <summary>
        <para>Represents a transition from one screen to another with the segmented fade effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SegmentedFadeTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SegmentedFadeTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SegmentedFadeTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SegmentedFadeTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that specifies animation parameters.</param>
    </member>
    <member name="T:DevExpress.Utils.Animation.ShapeAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the shape effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ShapeAnimationParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.ShapeAnimationParameters"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.ShapeAnimationParameters.EffectOptions">
      <summary>
        <para>Gets or sets the transition direction and shape.</para>
      </summary>
      <value>A value that specifies the transition direction and shape.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ShapeEffectOptions">
      <summary>
        <para>Enumerates values that specify the transition direction and shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ShapeEffectOptions.CircleIn">
      <summary>
        <para>The transition goes inside-out as a circle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ShapeEffectOptions.CircleOut">
      <summary>
        <para>The transition goes outside-in as a circle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ShapeEffectOptions.In">
      <summary>
        <para>The transition goes inside-out as a rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ShapeEffectOptions.Out">
      <summary>
        <para>The transition goes outside-in as a rectangle.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.ShapeTransition">
      <summary>
        <para>Represents a transition from one screen to another with the shape effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ShapeTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.ShapeTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ShapeTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IShapeAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.ShapeTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that contains transition parameters.</param>
    </member>
    <member name="P:DevExpress.Utils.Animation.ShapeTransition.Parameters">
      <summary>
        <para>Provides access to transition parameters.</para>
      </summary>
      <value>An object that specifies transition parameters.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.SlideFadeAnimationParameters">
      <summary>
        <para>Provides access to parameters that specify the transition that changes one screen to another with the slide and fade effects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SlideFadeAnimationParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SlideFadeAnimationParameters"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.SlideFadeAnimationParameters.Background">
      <summary>
        <para>Gets or sets the background visible during the transition.</para>
      </summary>
      <value>A value that specifies the background visible during the transition.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.SlideFadeTransition">
      <summary>
        <para>Represents a transition from one screen to another with the slide and fade effects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SlideFadeTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SlideFadeTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SlideFadeTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IPushAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SlideFadeTransition"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.SlideFadeTransition.Parameters">
      <summary>
        <para>Provides access to transition parameters.</para>
      </summary>
      <value>An object that specifies transition parameters.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.SlideTransition">
      <summary>
        <para>Represents a transition from one screen to another with the slide effect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SlideTransition.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SlideTransition"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.SlideTransition.#ctor(System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Animation.IAnimationParameters)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.SlideTransition"/> class with specified settings.</para>
      </summary>
      <param name="from">An object that specifies the first image in the transition.</param>
      <param name="to">An object that specifies the last image in the transition.</param>
      <param name="parameters">An object that contains transition parameters.</param>
    </member>
    <member name="T:DevExpress.Utils.Animation.Transition">
      <summary>
        <para>An object that animates the target control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.Transition.#ctor">
      <summary>
        <para>Initializes a new Transition instance with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.BarWaitingIndicatorProperties">
      <summary>
        <para>Provides access to Bar indicator settings. This indicator is active when the <see cref="P:DevExpress.Utils.Animation.Transition.WaitingAnimatorType">WaitingAnimatorType</see> is set to “Bar”.</para>
      </summary>
      <value>An object that stores Bar waiting indicator settings.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.Control">
      <summary>
        <para>Gets or sets the control whose navigation is animated by this Transition object.</para>
      </summary>
      <value>The control whose navigation is animated by this Transition object.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.EasingMode">
      <summary>
        <para>Gets or sets the mathematical algorithm that specifies the speed and acceleration mode for the Transition animation effects.</para>
      </summary>
      <value>An EasingMode enumerator value that specifies the speed and acceleration mode for the Transition animation effects.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.LineWaitingIndicatorProperties">
      <summary>
        <para>Provides access to Bar indicator settings. This indicator is active when the <see cref="P:DevExpress.Utils.Animation.Transition.WaitingAnimatorType">WaitingAnimatorType</see> is set to “Line”.</para>
      </summary>
      <value>An object that stores Line waiting indicator settings.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.RingWaitingIndicatorProperties">
      <summary>
        <para>Provides access to Bar indicator settings. This indicator is active when the <see cref="P:DevExpress.Utils.Animation.Transition.WaitingAnimatorType">WaitingAnimatorType</see> is set to “Ring”.</para>
      </summary>
      <value>An object that stores Ring waiting indicator settings.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.ShowWaitingIndicator">
      <summary>
        <para>Gets or sets whether this Transition should display a waiting indicator until its animation starts. Use the <see cref="P:DevExpress.Utils.Animation.Transition.WaitingAnimatorType">WaitingAnimatorType</see> property to specify the waiting indicator type.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether this Transition should display a waiting indicator.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.TransitionType">
      <summary>
        <para>Gets or sets the type of animation effect applied by this Transition. This property accepts “…Transition” objects from the <see cref="N:DevExpress.Utils.Animation"/> namespace.</para>
      </summary>
      <value>An object that specifies the animation effect applied by this Transition.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.WaitingAnimatorType">
      <summary>
        <para>Gets or sets the Wait Indicator type - bar, ring, or line. Wait Indicators are visible when the <see cref="P:DevExpress.Utils.Animation.Transition.ShowWaitingIndicator">ShowWaitingIndicator</see> property is enabled.</para>
      </summary>
      <value>The Wait Indicator type.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.Transition.WaitingIndicatorProperties">
      <summary>
        <para>Provides access to common Wait Indicator settings. Wait Indicators are visible when the <see cref="P:DevExpress.Utils.Animation.Transition.ShowWaitingIndicator">ShowWaitingIndicator</see> property is enabled.</para>
      </summary>
      <value>An object that stores common Wait Indicator settings.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.TransitionManager">
      <summary>
        <para>Allows you to implement animated transitions between control states.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.TransitionManager"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Animation.TransitionManager"/> class with the specified settings.</para>
      </summary>
      <param name="container">A container for the <see cref="T:DevExpress.Utils.Animation.TransitionManager"/> being created.</param>
    </member>
    <member name="E:DevExpress.Utils.Animation.TransitionManager.AfterTransitionEnds">
      <summary>
        <para>Serves as a notification event that an animated transition between a control’s states is complete.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Animation.TransitionManager.BeforeTransitionStarts">
      <summary>
        <para>Allows you to perform custom actions before a transition between control states starts, or allows you to cancel the transition.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Animation.TransitionManager.CustomTransition">
      <summary>
        <para>Allows you to customize an animated state transition.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.EndTransition">
      <summary>
        <para>Finalizes the current animated state transition.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.FrameCount">
      <summary>
        <para>Gets or sets the number of animation frames.</para>
      </summary>
      <value>The number of animation frames.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.FrameInterval">
      <summary>
        <para>Gets or sets the time between animation frames, in special units.</para>
      </summary>
      <value>The time between animation frames.</value>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.GetTransition``1(System.Windows.Forms.Control)">
      <summary>
        <para>Returns the type of the transition associated with the spceified control and converted to the specified type.</para>
      </summary>
      <param name="control">A control for which to return the associated transition type.</param>
      <typeparam name="T">The type to which to convert to the associated transition type.</typeparam>
      <returns>The transition type associated with the spceified control.</returns>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.IsDisposing">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Utils.Animation.TransitionManager"/> is being disposed of.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.Utils.Animation.TransitionManager"/> is being disposed of; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.IsTransition">
      <summary>
        <para>Gets whether an animated transition between the start and end control states is in progress.</para>
      </summary>
      <value>true if the animated transition between the states is in progress; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.ShowWaitingIndicator">
      <summary>
        <para>Gets or sets whether the wait/load indicator is displayed during animation.</para>
      </summary>
      <value>true if the wait/load indicator is displayed during the animation; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.StartTransition(System.Windows.Forms.Control)">
      <summary>
        <para>Starts an animated state transition for the specified control.</para>
      </summary>
      <param name="control">The control for which to start the animated state transition.</param>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.StartWaitingIndicator(System.Windows.Forms.Control,DevExpress.Utils.Animation.IWaitingIndicatorProperties)">
      <summary>
        <para>Shows the wait indicator over the specified control using the specified properties.</para>
      </summary>
      <param name="control">A Control over which to show the wait indicator.</param>
      <param name="indicatorProperties">A IWaitingIndicatorProperties object that comprises the wait indicator properties.</param>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.StartWaitingIndicator(System.Windows.Forms.Control,DevExpress.Utils.Animation.WaitingAnimatorType)">
      <summary>
        <para>Shows the wait indicator of the specified type over the specified control.</para>
      </summary>
      <param name="control">A Control over which to show the wait indicator.</param>
      <param name="indicatorType">A WaitingAnimatorType enumeration value that specifies the type of indicator to show.</param>
    </member>
    <member name="M:DevExpress.Utils.Animation.TransitionManager.StopWaitingIndicator">
      <summary>
        <para>Hides the wait indicator.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.Transitions">
      <summary>
        <para>Provides access to the collection of control state transitions.</para>
      </summary>
      <value>The collection of control state transitions.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.TransitionManager.UseDirectXPaint">
      <summary>
        <para>Gets or sets whether the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see> is enabled for this Transition Manager.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether or not this control employs the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see>.
The DefaultBoolean.Default value is equivalent to DefaultBoolean.True if the static <see cref="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceDirectXPaint">WindowsFormsSettings.ForceDirectXPaint</see> method was called, or to DefaultBoolean.False otherwise.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ZoomTransition">
      <summary>
        <para>A DirectX-based transition that animates navigation between application layers.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ZoomTransition.#ctor">
      <summary>
        <para>Initializes a new ZoomTransition instance with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.ZoomTransition.ActiveSettings">
      <summary>
        <para>Gets or sets an object that stores core ZoomTransition settings: the animation direction (“in” or “out”), initial and final animation bounds.</para>
      </summary>
      <value>An object that stores core ZoomTransition settings.</value>
    </member>
    <member name="T:DevExpress.Utils.Animation.ZoomTransitionDirection">
      <summary>
        <para>Enumerates values that specify the transition direction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ZoomTransitionDirection.ZoomIn">
      <summary>
        <para>The transition goes with the zoom-in effect.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Animation.ZoomTransitionDirection.ZoomOut">
      <summary>
        <para>The transition goes with the zoom-out effect.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Animation.ZoomTransitionSettings">
      <summary>
        <para>Stores core <see cref="T:DevExpress.Utils.Animation.ZoomTransition"/> settings: animation bounds and direction.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Animation.ZoomTransitionSettings.#ctor">
      <summary>
        <para>Initializes a new ZoomTransitionSettings instance with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Animation.ZoomTransitionSettings.Direction">
      <summary>
        <para>Specifies whether a <see cref="T:DevExpress.Utils.Animation.ZoomTransition"/> that owns this <see cref="T:DevExpress.Utils.Animation.ZoomTransitionSettings"/> object should play the “zoom in” or “zoom out” animation.</para>
      </summary>
      <value>A ZoomTransitionDirection enumeration value that specifies the animation direction.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.ZoomTransitionSettings.SourceBounds">
      <summary>
        <para>Gets or sets initial bounds from which the ZoomTransition animation should zoom in or out to <see cref="P:DevExpress.Utils.Animation.ZoomTransitionSettings.TargetBounds">ZoomTransitionSettings.TargetBounds</see>.</para>
      </summary>
      <value>A Rectangle that specifies initial animation bounds.</value>
    </member>
    <member name="P:DevExpress.Utils.Animation.ZoomTransitionSettings.TargetBounds">
      <summary>
        <para>Gets or sets the final bounds to which the ZoomTransition animation should arrive from its initial <see cref="P:DevExpress.Utils.Animation.ZoomTransitionSettings.SourceBounds">ZoomTransitionSettings.SourceBounds</see>.</para>
      </summary>
      <value>A Rectangle that specifies the final ZoomTransition animation bounds.</value>
    </member>
    <member name="T:DevExpress.Utils.AppearanceObject">
      <summary>
        <para>Represents an appearance object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceDefault)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with default settings.</para>
      </summary>
      <param name="appearanceDefault">A DevExpress.Utils.AppearanceDefault object containing the default appearance settings.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceDefault)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified settings.</para>
      </summary>
      <param name="main">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are used to initialize the created object’s properties.</param>
      <param name="appearanceDefault">A DevExpress.Utils.AppearanceDefault object.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.</para>
      </summary>
      <param name="main">An <see cref="T:DevExpress.Utils.AppearanceObject"/> representing the appearance object whose settings are used to initialize the created object’s properties.</param>
      <param name="defaultAppearance">A DefaultAppearance object representing default appearance settings.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified name and parent.</para>
      </summary>
      <param name="parentAppearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance">AppearanceObject.ParentAppearance</see> property.</param>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name">AppearanceObject.Name</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified parent.</para>
      </summary>
      <param name="parentAppearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance">AppearanceObject.ParentAppearance</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.IAppearanceOwner,DevExpress.Utils.AppearanceObject,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified owner, parent and name.</para>
      </summary>
      <param name="owner">An object implementing the IAppearanceOwner interface.</param>
      <param name="parentAppearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance">AppearanceObject.ParentAppearance</see> property.</param>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name">AppearanceObject.Name</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.IAppearanceOwner,DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified owner and parent appearance object.</para>
      </summary>
      <param name="owner">An object implementing the IAppearanceOwner interface.</param>
      <param name="parentAppearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance">AppearanceObject.ParentAppearance</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.IAppearanceOwner,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name">AppearanceObject.Name</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.Assign(DevExpress.Utils.AppearanceDefault)">
      <summary>
        <para>Sets the appearance object’s settings to default values.</para>
      </summary>
      <param name="appearanceDefault">An AppearanceDefault object containing default appearance settings.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.Assign(DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Copies all settings from the appearance object passed as a parameter.</para>
      </summary>
      <param name="source">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the source of the operation.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.AssignInternal(DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Copies all the settings in the appearance object passed as the parameter to the current object without raising the <see cref="E:DevExpress.Utils.AppearanceObject.Changed">AppearanceObject.Changed</see> event.</para>
      </summary>
      <param name="val">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the source of the operation.</param>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.BackColor">
      <summary>
        <para>Gets or sets the background color if the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor2">AppearanceObject.BackColor2</see> property’s value is Color.Empty. Otherwise, it specifies the gradient’s starting color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object specifying the background color.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.BackColor2">
      <summary>
        <para>Gets or sets the end color of the  background’s gradient brush.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object specifying the end color of the linear gradient brush used to fill the background.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Utils.AppearanceObject"></see> object by disallowing visual updates until the EndUpdate or CancelUpdate method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.BorderColor">
      <summary>
        <para>Gets or sets the border color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object specifying the border color.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize">
      <summary>
        <para>Calculates the size of a string painted with the default font.</para>
      </summary>
      <returns>A System.Drawing.Size structure which represents the size (in pixels) of a string.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize(System.Drawing.Graphics)">
      <summary>
        <para>Calculates the size of a string painted with the font specified by the current object.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure which represents the size (in pixels) of a string.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32,System.Int32,System.Boolean@)">
      <summary>
        <para>Calculates the string size.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="sf">A StringFormatInfo object that stores line spacing, alignment and other formatting setting for the string.</param>
      <param name="s">A String value that is the string, whose size is to be obtained.</param>
      <param name="width">An Int32 value that is the maximum allowed string width.</param>
      <param name="height">An Int32 value that is the maximum allowed string height.</param>
      <param name="isCropped">A Boolean value that specifies whether or not the string is trimmed.</param>
      <returns>A Size structure that is the string size.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Calculates the string size.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="sf">A StringFormatInfo object that stores line spacing, alignment and other formatting setting for the string.</param>
      <param name="s">A String value that is the string, whose size is to be obtained.</param>
      <param name="width">An Int32 value that is the maximum allowed string width.</param>
      <param name="height">An Int32 value that is the maximum allowed string height.</param>
      <returns>A Size structure that is the string size.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
      <summary>
        <para>Calculates the string size.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="sf">A StringFormatInfo object that stores line spacing, alignment and other formatting setting for the string.</param>
      <param name="s">A String value that is the string, whose size is to be obtained.</param>
      <param name="width">An Int32 value that is the maximum allowed string width.</param>
      <returns>A Size structure that is the string size.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32,System.Int32,System.Boolean@)">
      <summary>
        <para>Calculates the string size.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="sf">A StringFormat object that stores line spacing, alignment and other formatting setting for the string.</param>
      <param name="s">A String value that is the string, whose size is to be obtained.</param>
      <param name="width">An Int32 value that is the maximum allowed string width.</param>
      <param name="height">An Int32 value that is the maximum allowed string height.</param>
      <param name="isCropped">A Boolean value that specifies whether or not the string is trimmed.</param>
      <returns>A Size structure that is the string size.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Calculates the string size.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="sf">A StringFormat object that stores line spacing, alignment and other formatting setting for the string.</param>
      <param name="s">A String value that is the string, whose size is to be obtained.</param>
      <param name="width">An Int32 value that is the maximum allowed string width.</param>
      <param name="height">An Int32 value that is the maximum allowed string height.</param>
      <returns>A Size structure that is the string size.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="sf">A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as line spacing and alignment, for the string.</param>
      <param name="s">A <see cref="T:System.String"/> value which represents a string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size, in pixels, of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.</param>
      <param name="s">The string to be measured.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>The measured size of the string, in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.</param>
      <param name="sf">A StringFormatInfo  object which represents formatting information, such as the line spacing for the string.</param>
      <param name="s">A <see cref="T:System.String"/> value which represents the string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32,System.Int32,System.Boolean@)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font, fitting the string into a clipping rectangle. Allows you to determine whether the string does not fit the clipping rectangle.</para>
      </summary>
      <param name="g">A System.Drawing.Graphics object which provides painting facilities.</param>
      <param name="sf">Contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="s">The string to be measured.</param>
      <param name="width">The maximum width of the clipping rectangle that will fit the string (in pixels).</param>
      <param name="height">The maximum height of the clipping rectangle that will fit the string (in pixels).</param>
      <param name="isCropped">true if the text is trimmed (its size is larger than the clipping rectangle); otherwise, false.</param>
      <returns>The measured size of the string, in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string drawn with the specified format, fitting the string into a clipping rectangle.</para>
      </summary>
      <param name="g">A System.Drawing.Graphics object which provides painting facilities.</param>
      <param name="sf">A <see cref="T:System.Drawing.StringFormat"/> object that contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="s">The string to be measured.</param>
      <param name="width">The maximum width of the clipping rectangle that will fit the string (in pixels).</param>
      <param name="height">The maximum height of the clipping rectangle that will fit the string (in pixels).</param>
      <returns>The measured size of the string, in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.</param>
      <param name="sf">A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing for the string.</param>
      <param name="s">A <see cref="T:System.String"/> value which represents the string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.String,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.</param>
      <param name="s">The string to be measured.</param>
      <param name="width">An integer value specifying the maximum width of the string, in pixels.</param>
      <returns>The measured size of the string, in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
      <summary>
        <para>Calculates the length of the specified string drawn with the specified formatting.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes.</param>
      <param name="sf">A StringFormatInfo object that contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="s">The string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32)">
      <summary>
        <para>Calculates the length of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes.</param>
      <param name="sf">A <see cref="T:System.Drawing.StringFormat"/> object that contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="s">The string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Int32)">
      <summary>
        <para>Calculates the length of the specified string.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes.</param>
      <param name="s">The string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(System.Drawing.Graphics,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
      <summary>
        <para>Calculates the length of the specified string drawn with the specified formatting.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.</param>
      <param name="sf">A StringFormatInfo object that contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="s">The string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32)">
      <summary>
        <para>Calculates the length of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object that provides painting facilities.</param>
      <param name="sf">A <see cref="T:System.Drawing.StringFormat"/> object that contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="s">The string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(System.Drawing.Graphics,System.String,System.Int32)">
      <summary>
        <para>Calculates the length of the specified string.</para>
      </summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.</param>
      <param name="s">The string to measure.</param>
      <param name="width">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A System.Drawing.Size structure that is the size of the string (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.AppearanceObject"></see> object after it has been locked by the BeginUpdate method, without causing an immediate visual update.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.AppearanceObject.Changed">
      <summary>
        <para>Fires when the appearance object’s properties are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Utils.AppearanceObject"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents an exact copy of the current appearance object.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.Combine(DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Copies the activated settings from the appearance object passed as the parameter.</para>
      </summary>
      <param name="val">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are going to be copied.</param>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.ControlAppearance">
      <summary>
        <para>Gets the default appearance settings which are used to paint 3-D elements in Windows.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the default appearance settings used to paint 3-D elements in Windows.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.DefaultFont">
      <summary>
        <para>Gets or sets the default font for controls.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for controls. The default value is the Tahoma font.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.DefaultMenuFont">
      <summary>
        <para>Gets and sets the font used to display text on menus.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for menu items. If not set, the property value is specified by the System.Windows.Forms.SystemInformation.MenuFont property.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.Dispose">
      <summary>
        <para>Releases all resources used by the current appearance object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the background for the area contained within the specified boundary.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.</param>
      <param name="useZeroOffset">A Boolean value.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the background for the area contained within the specified boundary.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(System.Drawing.Graphics,DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the background for the area contained within the specified boundary.</para>
      </summary>
      <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> object that provides a means for painting.</param>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.</param>
      <param name="useZeroOffset">A Boolean value.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(System.Drawing.Graphics,DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the background.</para>
      </summary>
      <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> object that provides a means for painting.</param>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle using the specified formatting attributes.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="format">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle using the specified formatting attributes.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="format">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.StringFormat)">
      <summary>
        <para>Draws a text string at the specified position using the specified color and format.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value representing the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which determines the color and texture of the drawn text.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush)">
      <summary>
        <para>Draws a text string at the specified position using the specified color.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value representing the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which determines the color and texture of the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Color,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Color using the formatting attributes.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="s">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.</param>
      <param name="foreColor">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="strFormat">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Color,DevExpress.Utils.TextOptions)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Color using the specified TextOptions.</para>
      </summary>
      <param name="cache">GraphicsCache object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">String to draw.</param>
      <param name="bounds">Rectangle structure that specifies the location of the drawn text.</param>
      <param name="foreColor">Color of the drawn text.</param>
      <param name="defaultOptions">Settings applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Color using the formatting attributes of the specified StringFormat.</para>
      </summary>
      <param name="cache">GraphicsCache object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="s">String to draw.</param>
      <param name="bounds">Rectangle structure that specifies the location of the drawn text.</param>
      <param name="foreColor">Color of the drawn text.</param>
      <param name="strFormat">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Font using the specified formatting attributes.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="format">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Font using the specified formatting attributes.</para>
      </summary>
      <param name="cache">A GraphicsCache object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="s">A String to draw.</param>
      <param name="bounds">A Rectangle structure that specifies the location of the drawn text.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="strFormat">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat)">
      <summary>
        <para>Draws a text string at the specified position using the specified font, color and format.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="s">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Font using the specified formatting attributes.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="s">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreColor">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="strFormat">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Color and Font objects using the formatting attributes of the specified StringFormat.</para>
      </summary>
      <param name="cache">GraphicsCache object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="s">String to draw.</param>
      <param name="bounds">Rectangle structure that specifies the location of the drawn text.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="foreColor">Color of the drawn text.</param>
      <param name="strFormat">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.StringFormat)">
      <summary>
        <para>Draws a text string at the specified position using the specified font and format.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value representing the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>
        <para>Draws a text string at the specified position using the specified format.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value representing the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle)">
      <summary>
        <para>Draws a text string at the specified position.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value representing the text to be drawn.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawVString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo,System.Int32)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Font using the formatting attributes.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="strFormat">A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <param name="angle">An integer value specifying the angle in degrees at which the text should be drawn.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.DrawVString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Int32)">
      <summary>
        <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.</param>
      <param name="text">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.</param>
      <param name="angle">An integer value specifying the angle in degrees at which the text should be drawn.</param>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.EmptyAppearance">
      <summary>
        <para>Returns an empty appearance object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are not initialized.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.AppearanceObject"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.FillRectangle(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
      <param name="useZeroOffset">A Boolean value.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.FillRectangle(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.</param>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.Font">
      <summary>
        <para>Gets or sets the font used to paint the text.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object specifying the font used to display the contents of elements.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.FontHeight">
      <summary>
        <para>Gets the height of the font used by the appearance object.</para>
      </summary>
      <value>An integer value which specifies the font’s height.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.FontSizeDelta">
      <summary>
        <para>Gets or sets an integer value by which the font size is adjusted.</para>
      </summary>
      <value>An integer value by which the font size is adjusted.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.FontStyleDelta">
      <summary>
        <para>Gets or sets an additional style to be applied to the font.</para>
      </summary>
      <value>A System.Drawing.FontStyle enumeration value that specifies a style by which to modify the font.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.ForeColor">
      <summary>
        <para>Gets or sets the foreground color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure specifying the foreground color.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetAppearanceByFont">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetAppearanceByOption(System.String)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackBrush(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
      <summary>
        <para>Gets the brush used to draw an element’s background.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure specifying the rectangle for which a brush is created.</param>
      <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the brush specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackBrush(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Gets the solid brush used to draw the element’s background.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the brush specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor">
      <summary>
        <para>Gets the background color specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Color"/> object representing the background color specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the BackColor (<see cref="P:DevExpress.Utils.AppearanceObject.BackColor">AppearanceObject.BackColor</see>) for the target LookAndFeel object.</para>
      </summary>
      <param name="lookAndFeel">An ISkinProvider that is a LookAndFeel object whose BackColor is to be returned.</param>
      <returns>A Color that is the BackColor for the target LookAndFeel object.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor2">
      <summary>
        <para>Gets the ending color of the linear gradient brush, specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Color"/> object representing the end color of the linear gradient brush as specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackColorAppearance">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackPen(DevExpress.Utils.Drawing.GraphicsCache,System.Int32)">
      <summary>
        <para>Gets the pen used to draw the element’s background lines and curves.</para>
      </summary>
      <param name="cache">A GraphicsCache object that provides access to the pens and brushes used for painting.</param>
      <param name="width">An Int32 value that specifies the width of the returned Pen.</param>
      <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBackPen(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Gets the pen used to draw the element’s background lines and curves.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBorderBrush(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Gets the brush used to draw the element’s border.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing a brush specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBorderColor">
      <summary>
        <para>Gets the element’s border color specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Color"/> object representing the element’s border color specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBorderColor(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the BorderColor (<see cref="P:DevExpress.Utils.AppearanceObject.BorderColor">AppearanceObject.BorderColor</see>) for the target LookAndFeel object.</para>
      </summary>
      <param name="lookAndFeel">An ISkinProvider that is a LookAndFeel object whose BorderColor is to be returned.</param>
      <returns>A Color that is the BorderColor for the target LookAndFeel object.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBorderPen(DevExpress.Utils.Drawing.GraphicsCache,System.Int32)">
      <summary>
        <para>Gets the pen used to draw the element’s borders.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <param name="width">An Int32 value that specifies the width of the returned Pen.</param>
      <returns>A <see cref="T:System.Drawing.Pen"/> object that is the pen specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetBorderPen(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Gets the pen used to draw the border’s lines and curves.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetDXStringFormat">
      <summary>
        <para>Returns an object that contains text alignment information and OpenType features.</para>
      </summary>
      <returns>An object that contains text layout information, display manipulations, and OpenType features.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetDXStringFormat(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Returns an object that contains text alignment information and OpenType features.</para>
      </summary>
      <param name="defaultOptions">An object with text options.</param>
      <returns>An object that contains text layout information, display manipulations, and OpenType features.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetFont">
      <summary>
        <para>Gets the font settings specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Font"/> object specifying the font used to display the contents of elements.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetFont(System.Drawing.FontStyle,System.Int32)">
      <summary>
        <para>This member supports infrastructure and is not intended for use in code.</para>
      </summary>
      <param name="fontStyleDelta" />
      <param name="fontSizeDelta" />
      <returns />
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetFont(System.Drawing.FontStyle)">
      <summary>
        <para>This member supports the infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="fontStyleDelta" />
      <returns />
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetFontHeight(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Returns the font height.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that stores graphics and font settings.</param>
      <returns>An Int32 value that is the font height.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetForeBrush(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Gets the solid brush whose color is specified by the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor">AppearanceObject.ForeColor</see> property.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing a brush specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetForeColor">
      <summary>
        <para>Gets the foreground color specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Color"/> structure specifying the element content’s foreground color.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetForeColor(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Returns the ForeColor (<see cref="P:DevExpress.Utils.AppearanceObject.ForeColor">AppearanceObject.ForeColor</see>) for the target <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object.</para>
      </summary>
      <param name="cache">A Color that is the GraphicsCache’s foreground color.</param>
      <returns>A Color that is the ForeColor for the target <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetForePen(DevExpress.Utils.Drawing.GraphicsCache)">
      <summary>
        <para>Gets the pen whose color is specified by the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor">AppearanceObject.ForeColor</see> property.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.</param>
      <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetGradientMode">
      <summary>
        <para>Gets the background gradient’s direction specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value giving the gradient’s direction as specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetImage">
      <summary>
        <para>Gets the background image specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Image"/> object representing the element’s background image as specified by the appearance object’s settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormat">
      <summary>
        <para>Gets the formatting attributes specified by the appearance object’s settings.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormat(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Gets the formatting attributes specified by the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions">AppearanceObject.TextOptions</see> object passed as the parameter.</para>
      </summary>
      <param name="defaultOptions">A <see cref="T:DevExpress.Utils.TextOptions"/> object which provides the text settings.</param>
      <returns>A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes (such as the line spacing and alignment) based on the text settings specified.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormatInfo">
      <summary>
        <para>Gets the formatting attributes specified by the appearance object’s settings.</para>
      </summary>
      <returns>A StringFormatInfo object which specifies formatting attributes, such as the line spacing and alignment.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormatInfo(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Returns a StringFormatInfo object initialized with settings of the specified TextOptions object.</para>
      </summary>
      <param name="defaultOptions">The object used to initialize the StringFormatInfo.</param>
      <returns>The StringFormatInfo object initialized with the specified TextOptions object.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetTextOptions">
      <summary>
        <para>Gets the text options specified by the appearance object’s settings.</para>
      </summary>
      <returns>A TextOptions object containing the text options.</returns>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.GetTextureBrush">
      <summary>
        <para>Returns a TextureBrush object which uses the image specified by the <see cref="P:DevExpress.Utils.AppearanceObject.Image">AppearanceObject.Image</see> property to fill the interior of a shape.</para>
      </summary>
      <returns>A System.Drawing.TextureBrush object which represents the brush that fills the interior of a shape with the image specified by the <see cref="P:DevExpress.Utils.AppearanceObject.Image">AppearanceObject.Image</see> property.</returns>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.GradientMode">
      <summary>
        <para>Gets or sets the background gradient’s direction.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient’s direction.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.HAlignment">
      <summary>
        <para>Gets the horizontal alignment of the appearance object’s text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the text.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.Image">
      <summary>
        <para>Gets or sets the background image.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object specifying the background image.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.IsDefaultFontChanged">
      <summary>
        <para>Gets whether the default font is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.IsDisposed">
      <summary>
        <para>Gets whether the current object has been disposed of.</para>
      </summary>
      <value>true if the current object has been disposed of; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.IsEqual(DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Tests whether two objects have the same property values.</para>
      </summary>
      <param name="val">The <see cref="T:DevExpress.Utils.AppearanceObject"/> object to which the current object is compared.</param>
      <returns>true if the current object has the same property values as the specified object; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.Name">
      <summary>
        <para>Gets or sets the name of the current appearance object.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the name of the current appearance object.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.Options">
      <summary>
        <para>Provides access to the appearance object’s options.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceOptions"/> object containing the appearance options.</value>
    </member>
    <member name="E:DevExpress.Utils.AppearanceObject.PaintChanged">
      <summary>
        <para>Occurs when specific settings that control the text appearance are changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.ParentAppearance">
      <summary>
        <para>Gets the parent appearance object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the parent appearance object. null (Nothing in Visual Basic) if no parent appearance object is assigned.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.Reset">
      <summary>
        <para>Reverts the appearance object’s properties to their default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.ShouldSerialize">
      <summary>
        <para>Tests whether the <see cref="T:DevExpress.Utils.AppearanceObject"/> should be persisted.</para>
      </summary>
      <returns>true if the object should be persisted; otherwise, false.</returns>
    </member>
    <member name="E:DevExpress.Utils.AppearanceObject.SizeChanged">
      <summary>
        <para>Occurs when specific settings that control the size of text are changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObject.TextOptions">
      <summary>
        <para>Provides access to text rendering options (horizontal and vertical alignment, word wrapping, trimming options, etc.).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object containing text options.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObject.ToString">
      <summary>
        <para>Returns a string representing the current appearance object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which represents an appearance object.</returns>
    </member>
    <member name="T:DevExpress.Utils.AppearanceObjectEx">
      <summary>
        <para>Represents an appearance object with extended settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor(DevExpress.Utils.IAppearanceOwner,DevExpress.Utils.AppearanceObject,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An object implementing the IAppearanceOwner interface.</param>
      <param name="parentAppearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance">AppearanceObject.ParentAppearance</see> property.</param>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name">AppearanceObject.Name</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor(DevExpress.Utils.IAppearanceOwner)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with the specified owner.</para>
      </summary>
      <param name="owner">An object implementing the IAppearanceOwner interface.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObjectEx.Assign(DevExpress.Utils.AppearanceDefault)">
      <summary>
        <para>Sets the appearance object’s settings to default values.</para>
      </summary>
      <param name="appearanceDefault">An AppearanceDefault object containing default appearance settings.</param>
    </member>
    <member name="M:DevExpress.Utils.AppearanceObjectEx.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.Utils.AppearanceObjectEx.Options">
      <summary>
        <para>Provides access to the appearance object’s options.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceOptionsEx"/> object containing the appearance options.</value>
    </member>
    <member name="T:DevExpress.Utils.AppearanceOptions">
      <summary>
        <para>Provides appearance options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceOptions"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the options object passed as the parameter and assigns them to the current object.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.Empty">
      <summary>
        <para>Returns an <see cref="T:DevExpress.Utils.AppearanceOptions"/> object whose settings are not initialized.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceOptions"/> object whose settings are not initialized.</value>
    </member>
    <member name="M:DevExpress.Utils.AppearanceOptions.IsEqual(DevExpress.Utils.AppearanceOptions)">
      <summary>
        <para>Tests whether two objects have the same property values.</para>
      </summary>
      <param name="options">The <see cref="T:DevExpress.Utils.AppearanceOptions"/> object to which the current object is compared.</param>
      <returns>true if the current object has the same property values as the specified object; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.UseBackColor">
      <summary>
        <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor">AppearanceObject.BackColor</see> property value.</para>
      </summary>
      <value>true to use the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor">AppearanceObject.BackColor</see> property value; false to use the background color specified by the parent appearance object.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.UseBorderColor">
      <summary>
        <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor">AppearanceObject.BorderColor</see> property value.</para>
      </summary>
      <value>true to use the <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor">AppearanceObject.BorderColor</see> property value; false to use the border color specified by the parent appearance object.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.UseFont">
      <summary>
        <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.Font">AppearanceObject.Font</see> property value.</para>
      </summary>
      <value>true to use the <see cref="P:DevExpress.Utils.AppearanceObject.Font">AppearanceObject.Font</see> property value; false to use the font settings specified by the parent appearance object.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.UseForeColor">
      <summary>
        <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor">AppearanceObject.ForeColor</see> property value.</para>
      </summary>
      <value>true to use the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor">AppearanceObject.ForeColor</see> property value; false to use the foreground color specified by the parent appearance object.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.UseImage">
      <summary>
        <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.Image">AppearanceObject.Image</see> property value.</para>
      </summary>
      <value>true to use the <see cref="P:DevExpress.Utils.AppearanceObject.Image">AppearanceObject.Image</see> property value; false to use the background image specified by the parent appearance object.</value>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptions.UseTextOptions">
      <summary>
        <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions">AppearanceObject.TextOptions</see> property value.</para>
      </summary>
      <value>true to use the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions">AppearanceObject.TextOptions</see> property value; false to use the text options specified by the parent appearance object.</value>
    </member>
    <member name="T:DevExpress.Utils.AppearanceOptionsEx">
      <summary>
        <para>Provides appearance options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceOptionsEx.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceOptionsEx"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.AppearanceOptionsEx.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all the settings from the options object passed as the parameter and assigns them to the current object.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.Utils.AppearanceOptionsEx.HighPriority">
      <summary>
        <para>Gets or sets whether the settings specified by the current appearance object have the highest priority.</para>
      </summary>
      <value>true to set the current appearance settings to the highest priority; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.BaseAppearanceCollection">
      <summary>
        <para>Serves as a base for the classes that provide the appearance settings used to paint DevExpress .NET controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.Assign(DevExpress.Utils.BaseAppearanceCollection)">
      <summary>
        <para>Copies the settings from the object passed as the parameter.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation. If null (Nothing in Visual Basic) this method does nothing.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.AssignInternal(DevExpress.Utils.BaseAppearanceCollection)">
      <summary>
        <para>Copies the settings from the object passed as the parameter without raising the <see cref="E:DevExpress.Utils.BaseAppearanceCollection.Changed">BaseAppearanceCollection.Changed</see> event.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation. If null (Nothing in Visual Basic) this method does nothing.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"></see>, preventing change notifications (and visual updates) from being raised by the object until the EndUpdate or CancelUpdate method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"></see> object after it has been locked by the BeginUpdate method, without causing an immediate visual update.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.BaseAppearanceCollection.Changed">
      <summary>
        <para>Fires when the collection is changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.Combine(DevExpress.Utils.BaseAppearanceCollection,DevExpress.Utils.AppearanceDefaultInfo[],System.Boolean)">
      <summary>
        <para>Copies the activated appearance settings of the object passed as the parameter and activates their corresponding options, any properties not activated are set to the value in the default appearance object.</para>
      </summary>
      <param name="appearances">A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation.</param>
      <param name="defaults">An array of DevExpress.Utils.AppearanceDefaultInfo objects which represent the default appearance settings.</param>
      <param name="setDefaultUseFlag">true to enable options which correspond to the activated appearance settings; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.Combine(DevExpress.Utils.BaseAppearanceCollection,DevExpress.Utils.AppearanceDefaultInfo[])">
      <summary>
        <para>Copies the activated appearance settings of the object passed as the parameter to the current object, any properties that aren’t activated are set to the value in the default appearance object.</para>
      </summary>
      <param name="appearances">A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation.</param>
      <param name="defaults">An array of DevExpress.Utils.AppearanceDefaultInfo objects which represent the default appearance settings.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.Dispose">
      <summary>
        <para>Releases all the resources used by the current object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.GetAppearance(System.String)">
      <summary>
        <para>Gets an appearance object contained within the collection by its name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the required appearance object.</param>
      <returns>The <see cref="T:DevExpress.Utils.AppearanceObject"/> object within the collection which has the specified name.</returns>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.GetEnumerator">
      <summary>
        <para>Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> that can iterate through the hashtable.</para>
      </summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator"/> for the hashtable.</returns>
    </member>
    <member name="P:DevExpress.Utils.BaseAppearanceCollection.IsDisposed">
      <summary>
        <para>Gets whether the current object has been disposed of.</para>
      </summary>
      <value>true if the current object has been disposed of; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.BaseAppearanceCollection.IsLoading">
      <summary>
        <para>Indicates whether the collection’s owner is currently being initialized.</para>
      </summary>
      <value>false always.</value>
    </member>
    <member name="E:DevExpress.Utils.BaseAppearanceCollection.PaintChanged">
      <summary>
        <para>Occurs when specific settings that control the text appearance are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.Reset">
      <summary>
        <para>Resets the properties of all the appearance objects within the collection to their default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromRegistry(System.String)">
      <summary>
        <para>Restores the appearance settings stored at the specified system registry path.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="path">A string value specifying the system registry path. If the specified path doesn’t exist, calling this method has no effect.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromStream(System.IO.Stream)">
      <summary>
        <para>Restores the appearance settings from the specified stream.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> descendant from which the appearance settings are read.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromXml(System.String)">
      <summary>
        <para>Loads the appearance settings stored in the specified XML file.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="xmlFile">A string value specifying the path to the XML file which contains the appearance settings to be loaded. If the specified file doesn’t exist, an exception is raised.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToRegistry(System.String)">
      <summary>
        <para>Saves the appearance settings to a system registry path.</para>
      </summary>
      <param name="path">A string value specifying the system registry path to which the appearance settings are saved.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToStream(System.IO.Stream)">
      <summary>
        <para>Saves the appearance settings to a specific stream.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> descendant to which the appearance settings are written.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToXml(System.String)">
      <summary>
        <para>Saves the appearance settings to a specific XML file.</para>
      </summary>
      <param name="xmlFile">A string value specifying the path to the file in which the appearance settings should be stored. If an empty string is specified, an exception is raised.</param>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.ShouldSerialize">
      <summary>
        <para>Tests whether the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> should be persisted.</para>
      </summary>
      <returns>true if the object should be persisted; otherwise, false.</returns>
    </member>
    <member name="E:DevExpress.Utils.BaseAppearanceCollection.SizeChanged">
      <summary>
        <para>Occurs when specific settings that control text size  are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.BaseAppearanceCollection.UpdateRightToLeft(System.Boolean)">
      <summary>
        <para>Updates the right-to-left text direction option.</para>
      </summary>
      <param name="rightToLeft">true if the text is directed from right to left; otherwise, false.</param>
    </member>
    <member name="N:DevExpress.Utils.Behaviors">
      <summary>
        <para>Contains classes that support the Behaviors mechanism for DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Behaviors.BehaviorManager">
      <summary>
        <para>Attaches additional behaviors (pieces of functionality) to DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.CheckContextButton">
      <summary>
        <para>A context button displaying a check box that can be checked by an end-user.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.CheckContextButton.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.CheckContextButton"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.AllowHtmlText">
      <summary>
        <para>Check Context Buttons do not have captions and therefore cannot be formatted with HTML tags.</para>
      </summary>
      <value />
    </member>
    <member name="M:DevExpress.Utils.CheckContextButton.BindCommand(System.Linq.Expressions.Expression{System.Action},System.Object,System.Func{System.Object})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.CheckContextButton.BindCommand(System.Object,System.Func{System.Object})">
      <summary>
        <para>Binds the specific parameterized command to this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</para>
      </summary>
      <param name="command">An Object that is the command to be bound to this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.CheckContextButton.BindCommand``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Object,System.Func{``0})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <typeparam name="T">The type of a ViewModel that stores a bindable command.</typeparam>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.CheckContextButton"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.Caption">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.Checked">
      <summary>
        <para>Gets or sets whether the current button is in the checked state.</para>
      </summary>
      <value>true if the current button is in the checked state; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.CheckedGlyph">
      <summary>
        <para>Gets or sets the glyph displayed by the current button in the checked state when it is not hovered over with the mouse pointer.</para>
      </summary>
      <value>An Image object that specifies the glyph displayed by the current button.</value>
    </member>
    <member name="M:DevExpress.Utils.CheckContextButton.GetActualCheckedGlyph(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the Image object specifying the checked state glyph actually assigned.</para>
      </summary>
      <param name="provider">An ISkinProvider object.</param>
      <returns>The Image object specifying the hovered state glyph actually assigned.</returns>
    </member>
    <member name="M:DevExpress.Utils.CheckContextButton.GetActualHoverCheckedGlyph(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the Image object specifying the hovered checked state glyph actually assigned.</para>
      </summary>
      <param name="provider">An ISkinProvider object.</param>
      <returns>The Image object specifying the hovered checked state glyph actually assigned.</returns>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.HasCheckedGlyph">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.CheckContextButton"/> has a checked state glyph assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.CheckContextButton"/> has a checked state glyph assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.HasHoverCheckedGlyph">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.CheckContextButton"/> has a hovered checked state glyph assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.CheckContextButton"/> has a hovered checked state glyph assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.HoverCheckedGlyph">
      <summary>
        <para>Gets or sets the glyph displayed by the current button in the checked state when it is hovered over with the mouse cursor.</para>
      </summary>
      <value>An Image object that specifies the glyph displayed by the current button.</value>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.HyperLinkColor">
      <summary>
        <para>This property is not supported for Check Context Buttons.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.ImageOptions">
      <summary>
        <para>Provides access to all properties related to the <see cref="T:DevExpress.Utils.CheckContextButton"/> icon.</para>
      </summary>
      <value>A DevExpress.Utils.CheckContextButtonImageOptions object that stores all icon-related settings.</value>
    </member>
    <member name="P:DevExpress.Utils.CheckContextButton.ImageOptionsCollection">
      <summary>
        <para>Provides access to image-related settings for each <see cref="T:DevExpress.Utils.CheckContextButton"/> visual state - Normal, Hovered, Checked, HoveredChecked.</para>
      </summary>
      <value>A DevExpress.Utils.CheckContextButtonImageOptionsCollection object that stores image-related settings for every <see cref="T:DevExpress.Utils.CheckContextButton"/> visual state.</value>
    </member>
    <member name="T:DevExpress.Utils.ContextButton">
      <summary>
        <para>A regular context button that can be clicked.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextButton.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextButton"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextButton.GetActualPressedGlyph(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the Image object specifying the pressed state glyph actually assigned.</para>
      </summary>
      <param name="provider">An ISkinProvider object.</param>
      <returns>The Image object specifying the pressed state glyph actually assigned.</returns>
    </member>
    <member name="P:DevExpress.Utils.ContextButton.HasPressedGlyph">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.ContextButton"/> has a pressed state glyph assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.ContextButton"/> has a pressed state glyph assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButton.ImageOptions">
      <summary>
        <para>Provides access to all properties that allow you to assign and customize glyphs for this <see cref="T:DevExpress.Utils.ContextButton"/>.</para>
      </summary>
      <value>A DevExpress.Utils.ContextButtonImageOptions object that stores all properties that allow you to assign and customize glyphs for this <see cref="T:DevExpress.Utils.ContextButton"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButton.ImageOptionsCollection">
      <summary>
        <para>Provides access to image-related settings for each <see cref="T:DevExpress.Utils.ContextButton"/> visual state - Normal, Hovered, Pressed.</para>
      </summary>
      <value>A DevExpress.Utils.ContextButtonImageOptionsCollection object that stores image-related settings for every <see cref="T:DevExpress.Utils.ContextButton"/> visual state.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButton.PressedGlyph">
      <summary>
        <para>Gets or sets the glyph displayed by the current item in the normal (not hovered) state.</para>
      </summary>
      <value>An Image object that specifies the glyph displayed by the current item in the normal state.</value>
    </member>
    <member name="T:DevExpress.Utils.ContextButtonBase">
      <summary>
        <para>Represents a base class for context buttons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextButtonBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextButtonBase"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.AllowHtmlText">
      <summary>
        <para>Gets or sets whether the current button’s caption is formatted using HTML tags.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether the current button’s caption is formatted using HTML tags.</value>
    </member>
    <member name="M:DevExpress.Utils.ContextButtonBase.BindCommand(System.Linq.Expressions.Expression{System.Action},System.Object,System.Func{System.Object})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command in the source and binds it to this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextButtonBase.BindCommand(System.Object,System.Func{System.Object})">
      <summary>
        <para>Binds the specific parameterized command to this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</para>
      </summary>
      <param name="command">An Object that is the command to be bound to this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextButtonBase.BindCommand``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Object,System.Func{``0})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and binds it to this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <typeparam name="T">The type of a ViewModel that stores a bindable command.</typeparam>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.ContextButtonBase"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.Caption">
      <summary>
        <para>Gets or sets the current button’s caption.</para>
      </summary>
      <value>A string value that specifies the current button’s caption.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.Command">
      <summary>
        <para>Gets or sets the ICommand whose Execute(Object) method will be called when the Click event is invoked.</para>
      </summary>
      <value>The command.</value>
    </member>
    <member name="E:DevExpress.Utils.ContextButtonBase.CommandCanExecuteChanged">
      <summary>
        <para>Occurs when the CanExecute(Object) status of the <see cref="P:DevExpress.Utils.ContextButtonBase.Command"/> has changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.ContextButtonBase.CommandChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.ContextButtonBase.Command"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.CommandParameter">
      <summary>
        <para>Gets or sets the parameter that is passed to the command specified by the Command property.</para>
      </summary>
      <value>The parameter.</value>
    </member>
    <member name="E:DevExpress.Utils.ContextButtonBase.CommandParameterChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.ContextButtonBase.CommandParameter"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.Height">
      <summary>
        <para>Gets or sets the button height.</para>
      </summary>
      <value>An integer value that specifies the button height.</value>
    </member>
    <member name="E:DevExpress.Utils.ContextButtonBase.HyperlinkClick">
      <summary>
        <para>Fires when a hyperlink in the button caption is clicked.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.HyperLinkColor">
      <summary>
        <para>Gets or sets the color of the hyperlink text in the current button’s caption.</para>
      </summary>
      <value>A Color object that specifies the color of the hyperlink text in the current button’s caption.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.MaxHeight">
      <summary>
        <para>Gets or sets the maximum height of the current button.</para>
      </summary>
      <value>An integer value that specifies the maximum height of the current button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.MaxWidth">
      <summary>
        <para>Gets or sets the maximum width of the current button.</para>
      </summary>
      <value>An integer value that specifies the maximum width of the current button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.Padding">
      <summary>
        <para>Gets or sets the amount of space around the current button.</para>
      </summary>
      <value>A Padding structure that specifies the amount of space around the current button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextButtonBase.Width">
      <summary>
        <para>Gets or sets the button width.</para>
      </summary>
      <value>An integer value that specifies the button width.</value>
    </member>
    <member name="T:DevExpress.Utils.ContextItem">
      <summary>
        <para>Represents a base class for context items: buttons, track bars, etc.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItem"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Alignment">
      <summary>
        <para>Gets or sets the current item’s alignment relative to the owner control. This property is obsolete, use <see cref="P:DevExpress.Utils.ContextItem.AlignmentOptions">ContextItem.AlignmentOptions</see> instead.</para>
      </summary>
      <value>A ContextItemAlignment enumeration value that specifies the current item’s alignment relative to the owner control.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AlignmentOptions">
      <summary>
        <para>Provides access to options that specify the panel in which the item is displayed, and its position in the panel.</para>
      </summary>
      <value>A DevExpress.Utils.ContextItemAlignmentOptions object that specifies the panel in which the item is displayed, and its position in the panel.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AllowGlyphSkinning">
      <summary>
        <para>Gets or sets whether the current item’s glyph is painted using the foreground color.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether the current item’s glyph is painted using the foreground color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AnchorAlignment">
      <summary>
        <para>Gets or sets the alignment of the current item relative to the anchor element.</para>
      </summary>
      <value>An AnchorAlignment enumeration value that specifies the alignment of the current item relative to the anchor element.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AnchorElement">
      <summary>
        <para>Gets or sets an item (anchor element) relative to which the current item is aligned.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ContextItem"/> relative to which the current item is aligned.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AnchorElementId">
      <summary>
        <para>Gets or sets the globally unique identifier of the item (anchor element), relative to which the current item is aligned.</para>
      </summary>
      <value>A <see cref="T:System.Guid"/> object which represents a globally unique identifier (GUID) of the item, relative to which the current item is aligned.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AnchorIndent">
      <summary>
        <para>Gets or sets the indent between the current item and the anchor element.</para>
      </summary>
      <value>An integer value that specifies the indent, in pixels, between the current item and the anchor element.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AnchorOffset">
      <summary>
        <para>Gets or sets the translation of the current item from the anchor element.</para>
      </summary>
      <value>A Point structure by which the current item is translated.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AnimationType">
      <summary>
        <para>Gets or sets the type of the animation used to show and hide the current item.</para>
      </summary>
      <value>A ContextAnimationType enumeration value that specifies the type of the animation used to show and hide the current item.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AppearanceDisabled">
      <summary>
        <para>Provides access to appearance settings applied to this ContextItem in the Disabled state.</para>
      </summary>
      <value>Stores appearance settings for the Disabled item state.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AppearanceHover">
      <summary>
        <para>Provides access to the settings used to paint the current item in the hovered state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the settings used to paint the current item.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.AppearanceNormal">
      <summary>
        <para>Provides access to the appearance settings used to paint the current item in the normal (not hovered) state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the current item.</value>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.AssignPropertiesInternal(DevExpress.Utils.ContextItem,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.AssignPropertiesInternal(DevExpress.Utils.ContextItem)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Utils.ContextItem"></see> object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.ContextItem"></see> object after it has been locked by the BeginUpdate method, without causing an immediate visual update.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.ContextItem.Click">
      <summary>
        <para>Fires when the current item is clicked.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.Clone">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Utils.ContextItem"/> object that is a copy of the current instance.</para>
      </summary>
      <returns>A new <see cref="T:DevExpress.Utils.ContextItem"/> object that is a copy of the current instance.</returns>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Collection">
      <summary>
        <para>Gets the collection to which the current item belongs.</para>
      </summary>
      <value>A ContextItemCollection object that represents the collection to which the current item belongs.</value>
    </member>
    <member name="E:DevExpress.Utils.ContextItem.CustomToolTip">
      <summary>
        <para>Allows you to specify a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">tooltip</see> shown when the mouse pointer hovers over a context button. This event is only raised for <see cref="T:DevExpress.Utils.RatingContextButton"></see> and <see cref="T:DevExpress.Utils.TrackBarContextButton"></see> objects.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Enabled">
      <summary>
        <para>Gets or sets whether the current item can respond to end-user interaction.</para>
      </summary>
      <value>true if the current item can respond to end-user interaction; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.ContextItem"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.GetActualGlyph(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the Image object specifying the glyph actually assigned.</para>
      </summary>
      <param name="provider">An ISkinProvider object.</param>
      <returns>The Image object specifying the glyph actually assigned.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.GetActualHoverGlyph(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the Image object specifying the hovered state glyph actually assigned.</para>
      </summary>
      <param name="provider">An ISkinProvider object.</param>
      <returns>The Image object specifying the hovered state glyph actually assigned.</returns>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Glyph">
      <summary>
        <para>Gets or sets the glyph displayed by the current item in the normal (not hovered) state.</para>
      </summary>
      <value>An Image object that specifies the glyph displayed by the current item in the normal state.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.HasGlyph">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.ContextItem"/> has a glyph assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.ContextItem"/> has a glyph assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.HasHoverGlyph">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.ContextItem"/> has a hovered state glyph assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.ContextItem"/> has a hovered state glyph assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.HoverGlyph">
      <summary>
        <para>Gets or sets the glyph displayed by the current item in the hovered state.</para>
      </summary>
      <value>An Image object that specifies the glyph displayed by the current item in the hovered state.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Id">
      <summary>
        <para>Gets or sets the current item’s unique identifier.</para>
      </summary>
      <value>A <see cref="T:System.Guid"/> object which represents a globally unique identifier (GUID).</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.ImageOptions">
      <summary>
        <para>Provides access to all properties that allow you to assign and customize a glyph for this <see cref="T:DevExpress.Utils.ContextItem"/>.</para>
      </summary>
      <value>A DevExpress.Utils.ContextItemImageOptions object that stores all properties that allow you to assign and customize a glyph for this <see cref="T:DevExpress.Utils.ContextItem"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.ImageOptionsCollection">
      <summary>
        <para>Provides access to image-related settings for each <see cref="T:DevExpress.Utils.ContextItem"/> visual state.</para>
      </summary>
      <value>A DevExpress.Utils.ContextItemImageOptionsCollection object that stores image-related settings for every <see cref="T:DevExpress.Utils.ContextItem"/> visual state.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Name">
      <summary>
        <para>Gets or sets the current item’s name.</para>
      </summary>
      <value>A string value that specifies the current item’s name.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.OriginItem">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.RaiseContextItemClick(System.Windows.Forms.MouseEventArgs,DevExpress.Utils.ContextItemViewInfo)">
      <summary>
        <para>Raises the <see cref="E:DevExpress.Utils.ContextItem.Click">ContextItem.Click</see> event.</para>
      </summary>
      <param name="e">A MouseEventArgs object.</param>
      <param name="itemInfo">A ContextItemViewInfo object.</param>
    </member>
    <member name="M:DevExpress.Utils.ContextItem.ResetSuperTip">
      <summary>
        <para>Removes the <see cref="T:DevExpress.Utils.SuperToolTip"/> object assigned to the current context item.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.ShowToolTips">
      <summary>
        <para>Gets or sets whether a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">tooltip</see> is shown when the mouse pointer hovers over the button.</para>
      </summary>
      <value>true if a tooltip is shown when the mouse pointer hovers over the button; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Size">
      <summary>
        <para>Gets or sets the current item’s size.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the current item’s height and width.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.SuperTip">
      <summary>
        <para>Gets or sets a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">super tooltip</see> shown when the mouse pointer hovers over the button.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object that specifies a super tooltip shown when the mouse pointer hovers over the button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Tag">
      <summary>
        <para>Gets or sets custom data associated with the current item.</para>
      </summary>
      <value>Custom data associated with the current item.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.ToolTip">
      <summary>
        <para>Gets or sets the text in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">regular tooltip</see> shown when the mouse pointer hovers over the button.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text in a regular tooltip shown when the mouse pointer hovers over the button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.ToolTipIconType">
      <summary>
        <para>Gets or sets the icon in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">regular tooltip</see> shown when the mouse pointer hovers over the button.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumeration value that specifies the icon in a regular tooltip shown when the mouse pointer hovers over the button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.ToolTipTitle">
      <summary>
        <para>Gets or sets the title in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">regular tooltip</see> shown when the mouse pointer hovers over the button.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the title in a regular tooltip shown when the mouse pointer hovers over the button.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItem.Visibility">
      <summary>
        <para>Gets or sets the item visibility.</para>
      </summary>
      <value>A ContextItemVisibility enumeration value that specifies the item visibility.</value>
    </member>
    <member name="T:DevExpress.Utils.ContextItemClickEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.ContextItem.Click"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItemClickEventArgs.#ctor(DevExpress.Utils.ContextItem,DevExpress.Utils.ContextItemViewInfo,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItemClickEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="item">A related <see cref="T:DevExpress.Utils.ContextItem"/> object.</param>
      <param name="itemInfo">A <see cref="T:DevExpress.Utils.ContextItem"/>‘s view info.</param>
      <param name="dataItem">A control that contains a <see cref="T:DevExpress.Utils.ContextItem"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.ContextItemClickEventArgs.#ctor(DevExpress.Utils.ContextItem,DevExpress.Utils.ContextItemViewInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItemClickEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="item">A related <see cref="T:DevExpress.Utils.ContextItem"/> object.</param>
      <param name="itemInfo">A <see cref="T:DevExpress.Utils.ContextItem"/>‘s view info.</param>
    </member>
    <member name="P:DevExpress.Utils.ContextItemClickEventArgs.DataItem">
      <summary>
        <para>Gets or sets an <see cref="T:System.Object"/> that contains a clicked <see cref="T:DevExpress.Utils.ContextItem"/>. This object is a control or a control’s item.</para>
      </summary>
      <value>A control or a control’s item that contains a clicked <see cref="T:DevExpress.Utils.ContextItem"/></value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemClickEventArgs.Item">
      <summary>
        <para>Gets a clicked <see cref="T:DevExpress.Utils.ContextItem"/>.</para>
      </summary>
      <value>A clicked DevExpress.Utils.ContextItem.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemClickEventArgs.ItemInfo">
      <summary>
        <para>Gets or sets a clicked <see cref="T:DevExpress.Utils.ContextItem"/>‘s ContextItemViewInfo.</para>
      </summary>
      <value>A  <see cref="T:DevExpress.Utils.ContextItem"/>‘s ContextItemViewInfo</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemClickEventArgs.ScreenBounds">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.Rectangle"/> that contains a <see cref="T:DevExpress.Utils.ContextItem"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> that contains a <see cref="T:DevExpress.Utils.ContextItem"/>.</value>
    </member>
    <member name="T:DevExpress.Utils.ContextItemCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Utils.ContextItem"/> objects displayed in a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItemCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.#ctor(DevExpress.Utils.IContextItemCollectionOwner)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItemCollection"/> class with specified settings.</para>
      </summary>
      <param name="owner">An object that implements the IContextItemCollectionOwner interface and that owns a new <see cref="T:DevExpress.Utils.ContextItemCollection"/></param>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.Add(DevExpress.Utils.ContextItem)">
      <summary>
        <para>Adds a <see cref="T:DevExpress.Utils.ContextItem"/> to a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Utils.ContextItem"/> to be added to a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</param>
      <returns>A <see cref="T:DevExpress.Utils.ContextItem"/>‘s index in the collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.Assign(DevExpress.Utils.ContextItemCollection)">
      <summary>
        <para>Copies settings from the target ContextItemCollection to this ContextItemCollection.</para>
      </summary>
      <param name="src">A ContextItemCollection object whose settings are to be copied.</param>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.Clone">
      <summary>
        <para>Clones a <see cref="T:DevExpress.Utils.ContextItemCollection"/> and all <see cref="T:DevExpress.Utils.ContextItem"/> objects inside it.</para>
      </summary>
      <returns>An object that is a replica of a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.Contains(DevExpress.Utils.ContextItem)">
      <summary>
        <para>Checks whether a <see cref="T:DevExpress.Utils.ContextItemCollection"/> contans a specific <see cref="T:DevExpress.Utils.ContextItem"/>.</para>
      </summary>
      <param name="item">The item to check.</param>
      <returns>true, if a <see cref="T:DevExpress.Utils.ContextItemCollection"/> contains a specific <see cref="T:DevExpress.Utils.ContextItem"/>, otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.IndexOf(DevExpress.Utils.ContextItem)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.Utils.ContextItem"/>‘s index within a collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Utils.ContextItem"/> whose index needs to be determined.</param>
      <returns>A <see cref="T:DevExpress.Utils.ContextItem"/>‘s index.</returns>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.Insert(System.Int32,DevExpress.Utils.ContextItem)">
      <summary>
        <para>Adds a <see cref="T:DevExpress.Utils.ContextItem"/> to a specified position within a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</para>
      </summary>
      <param name="index">An index that specifies a <see cref="T:DevExpress.Utils.ContextItem"/>‘s location.</param>
      <param name="item">A <see cref="T:DevExpress.Utils.ContextItem"/> to add to a <see cref="T:DevExpress.Utils.ContextItemCollection"/></param>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.Utils.ContextItem"/> by its index in a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</para>
      </summary>
      <param name="index">A <see cref="T:DevExpress.Utils.ContextItem"/>‘s index in a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</param>
      <value>A <see cref="T:DevExpress.Utils.ContextItem"/> that has the specified index.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollection.Item(System.String)">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.Utils.ContextItem"/> by its name in a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</para>
      </summary>
      <param name="name">A <see cref="T:DevExpress.Utils.ContextItem"/>‘s name in a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</param>
      <value>A <see cref="T:DevExpress.Utils.ContextItem"/> that has the specified name.</value>
    </member>
    <member name="E:DevExpress.Utils.ContextItemCollection.ItemCollectionChanged">
      <summary>
        <para>Occurs when a <see cref="T:DevExpress.Utils.ContextItemCollection"/> changes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollection.Options">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/> object that stores the collection’s settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/> object that represents a <see cref="T:DevExpress.Utils.ContextItemCollection"/>‘s options.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollection.Owner">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.Utils.ContextItemCollection"/>‘s owner. This owner implements IContextItemCollectionOwner.</para>
      </summary>
      <value>An object that implements the IContextItemCollectionOwner interface.</value>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.Remove(DevExpress.Utils.ContextItem)">
      <summary>
        <para>Removes a specified <see cref="T:DevExpress.Utils.ContextItem"/> from a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Utils.ContextItem"/> to be removed from a <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollection.UpdateCollection">
      <summary>
        <para>Call this method to raise a control’s CustomizeContextItems event. Handle the event to make changes to the <see cref="T:DevExpress.Utils.ContextItemCollection"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ContextItemCollectionOptions">
      <summary>
        <para>Stores a <see cref="T:DevExpress.Utils.ContextItemCollection"/>‘s settings. Use the <see cref="T:DevExpress.Utils.ContextItemCollection">ContextItemCollection.Options</see> property or the control’s <see href="https://docs.devexpress.com/WindowsForms/114580/controls-and-libraries/editors-and-simple-controls">repository item</see> to access them.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollectionOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollectionOptions.#ctor(DevExpress.Utils.IContextItemCollectionOptionsOwner)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/> class with specified settings.</para>
      </summary>
      <param name="owner">An object that implements the IContextItemCollectionOptionsOwner interface and that owns a new <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/>.</param>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.AllowGlyphSkinning">
      <summary>
        <para>Enables or disables <see href="https://docs.devexpress.com/WindowsForms/15635/common-features/application-appearance-and-skin-colors/glyph-skinning">glyph skinning</see> for <see cref="T:DevExpress.Utils.ContextItem">context items</see> that display images.</para>
      </summary>
      <value>true, to match a <see cref="T:DevExpress.Utils.ContextItem">context items</see>‘s <see cref="P:DevExpress.Utils.ContextItem.ImageOptionsCollection">raster image</see> color to the item’s text color; false to retain the original raster image color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.AllowHtmlText">
      <summary>
        <para>Gets or sets whether <see cref="T:DevExpress.Utils.ContextItem">context items</see> support <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML tags</see>.</para>
      </summary>
      <value>true if <see cref="T:DevExpress.Utils.ContextItem">context items</see> support <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML tags</see>; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.AllowHtmlTextInToolTip">
      <summary>
        <para>Gets or sets whether <see cref="T:DevExpress.Utils.ContextItem">context items</see>‘ tooltips support <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML tags</see>.</para>
      </summary>
      <value><see cref="F:DevExpress.Utils.DefaultBoolean.True"/>, to enable <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML formatting</see> in DevExpress.Utils.ContextItem tooltips; <see cref="F:DevExpress.Utils.DefaultBoolean.False"/>, to disable; <see cref="F:DevExpress.Utils.DefaultBoolean.Default"/>, to use the <see cref="P:DevExpress.Utils.ToolTipController.AllowHtmlText">ToolTipController.AllowHtmlText</see> setting.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.AnimationTime">
      <summary>
        <para>Gets or sets the time required to show or hide <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A value that determines the time required to show or hide <see cref="T:DevExpress.Utils.ContextItem">context items</see>, in milliseconds.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.AnimationType">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Utils.ContextItem"/> animation type. The animation is displayed to show or hide <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A ContextAnimationType value that determines which animation is displayed to show or hide <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</value>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollectionOptions.Assign(DevExpress.Utils.ContextItemCollectionOptions)">
      <summary>
        <para>Assigns a <see cref="T:DevExpress.Utils.ContextItemCollection"/>‘s settings to a different ContextItemCollection‘s options.</para>
      </summary>
      <param name="options">Options to assign.</param>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.BottomPanelColor">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Color"/> for a control’s bottom panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A bottom panel’s color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.BottomPanelPadding">
      <summary>
        <para>Gets or sets <see cref="T:System.Windows.Forms.Padding"/> for <see cref="T:DevExpress.Utils.ContextItem">context items</see> inside the bottom panel.</para>
      </summary>
      <value>Bottom panel padding.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.CenterPanelColor">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Color"/> for a control’s center panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A center panel’s color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.CenterPanelPadding">
      <summary>
        <para>Gets or sets <see cref="T:System.Windows.Forms.Padding"/> for <see cref="T:DevExpress.Utils.ContextItem">context items</see> inside the center panel.</para>
      </summary>
      <value>Center panel padding.</value>
    </member>
    <member name="M:DevExpress.Utils.ContextItemCollectionOptions.Clone">
      <summary>
        <para>Returns a copy of a <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/> object.</para>
      </summary>
      <returns>A copy of a <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/> object.</returns>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.DisabledStateOpacity">
      <summary>
        <para>Gets or sets opacity for all disabled <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A value between 0 and 1 that determines opacity; 1 is for “opaque”, 0 is for “transparent”.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.FarPanelColor">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Color"/> for a control’s far panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A far panel’s color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.FarPanelPadding">
      <summary>
        <para>Gets or sets <see cref="T:System.Windows.Forms.Padding"/> for <see cref="T:DevExpress.Utils.ContextItem">context items</see> inside the far panel.</para>
      </summary>
      <value>Far panel padding.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.HoverStateOpacity">
      <summary>
        <para>Gets or sets opacity for hovered <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A value between 0 and 1 that determines opacity; 1 is for “opaque”, 0 is for “transparent”.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.Indent">
      <summary>
        <para>Gets or sets the distance between <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A value that determines the distance between <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.ItemCursor">
      <summary>
        <para>Gets or sets a cursor type for <see cref="T:DevExpress.Utils.ContextItem"/> interaction.</para>
      </summary>
      <value>A cursor type for <see cref="T:DevExpress.Utils.ContextItem"/> interaction.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.NearPanelColor">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Color"/> for a control’s near panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A near panel’s color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.NearPanelPadding">
      <summary>
        <para>Gets or sets <see cref="T:System.Windows.Forms.Padding"/> for <see cref="T:DevExpress.Utils.ContextItem">context items</see> inside the near panel.</para>
      </summary>
      <value>Near panel padding.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.NormalStateOpacity">
      <summary>
        <para>Gets or sets <see cref="T:DevExpress.Utils.ContextItem"/> opacity.</para>
      </summary>
      <value>A value between 0 and 1 that determines opacity; 1 is for “opaque”, 0 is for “transparent”.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.Owner">
      <summary>
        <para>An IContextItemCollectionOptionsOwner object that owns <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/>.</para>
      </summary>
      <value>An object that owns <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.PanelCursor">
      <summary>
        <para>Gets or sets a <see cref="T:System.Windows.Forms.Cursor"/> displayed when the mouse pointer hovers over a panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see></para>
      </summary>
      <value>A cursor shown when the mouse pointer hovers over a panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.ShowToolTips">
      <summary>
        <para>Gets or sets whether <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">tooltips</see> are shown when the mouse pointer hovers over context buttons.</para>
      </summary>
      <value>true, to show tooltips for context buttons; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.TopPanelColor">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Color"/> for a control’s top panel that contains <see cref="T:DevExpress.Utils.ContextItem">context items</see>.</para>
      </summary>
      <value>A top panel’s color.</value>
    </member>
    <member name="P:DevExpress.Utils.ContextItemCollectionOptions.TopPanelPadding">
      <summary>
        <para>Gets or sets <see cref="T:System.Windows.Forms.Padding"/> for <see cref="T:DevExpress.Utils.ContextItem">context items</see> inside the top panel.</para>
      </summary>
      <value>Top panel padding.</value>
    </member>
    <member name="N:DevExpress.Utils.Controls">
      <summary>
        <para>Contains classes that serve as the base for objects implementing particular aspects of DevExpress controls’ functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Controls.ControlBase">
      <summary>
        <para>Represents the base class for most <see href="https://docs.devexpress.com/WindowsForms/114580/controls-and-libraries/editors-and-simple-controls">editors and controls</see> available in the DevExpress Editors Library, along with their descendants.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Controls.ControlBase"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.ClearPreferredSizeCache(System.Windows.Forms.Control)">
      <summary>
        <para>Clears the value of the size of a rectangular area, into which the specified control can fit, from the program cache.</para>
      </summary>
      <param name="control">A Control whose size should be removed from the cache.</param>
    </member>
    <member name="P:DevExpress.Utils.Controls.ControlBase.Cursor">
      <summary>
        <para>Gets or sets the cursor that is displayed when the mouse pointer is over the <see cref="T:DevExpress.Utils.Controls.ControlBase"/> control.</para>
      </summary>
      <value>The cursor that is displayed when the mouse pointer is over the <see cref="T:DevExpress.Utils.Controls.ControlBase"/> control.</value>
    </member>
    <member name="P:DevExpress.Utils.Controls.ControlBase.Font">
      <summary>
        <para>Gets or sets the control font.</para>
      </summary>
      <value>The control font.</value>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.GetCanProcessMnemonic(System.Windows.Forms.Control)">
      <summary>
        <para>Returns the value of the control’s CanProcessMnemonic property, if this property exists.</para>
      </summary>
      <param name="control">The control whose CanProcessMnemonic property value is returned.</param>
      <returns>The value of the control’s CanProcessMnemonic property. true if the property doesn’t exist.</returns>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.GetUnvalidatedControl(System.Windows.Forms.Control)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.GetValidationCanceled(System.Windows.Forms.Control)">
      <summary>
        <para>Returns the ValidationCancelled property value of a control, if this property exists.</para>
      </summary>
      <param name="control">A <see cref="T:System.Object"/> that represents the control whose ValidationCancelled property value is returned.</param>
      <returns>true if the validation is cancelled; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.GetValidationCanceledSource(System.Windows.Forms.Control)">
      <summary>
        <para>Returns the parent container of the specified control that canceled validation.</para>
      </summary>
      <param name="control">The control whose ancestor canceled validation.</param>
      <returns>The parent container control that canceled validation.</returns>
    </member>
    <member name="P:DevExpress.Utils.Controls.ControlBase.IsRightToLeft">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Utils.Controls.ControlBase"/>‘s visual elements are actually aligned to support locales using right-to-left fonts.</para>
      </summary>
      <value>true if <see cref="T:DevExpress.Utils.Controls.ControlBase"/>‘s visual elements are actually aligned to support locales using right-to-left fonts; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.IsUnvalidatedControlIsParent(System.Windows.Forms.Control)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.PerformValidation(System.Windows.Forms.Control,System.Boolean)">
      <summary>
        <para>Returns if the <see cref="T:DevExpress.Utils.Controls.ControlBase"/> validates its value before the user may proceed.</para>
      </summary>
      <param name="control">The control that needs to be checked.</param>
      <param name="resetCancelled">true, to reset the control’s ValidationCanceled property value; otherwise, false.</param>
      <returns>true if the <see cref="T:DevExpress.Utils.Controls.ControlBase"/> validates its value before the user may proceed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Controls.ControlBase.ResetValidationCanceled(System.Windows.Forms.Control)">
      <summary>
        <para>Resets the control’s ValidationCancelled property. This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="control">A control.</param>
    </member>
    <member name="T:DevExpress.Utils.Controls.ExpandButtonMode">
      <summary>
        <para>Contains values that specify the direction of an expand button’s arrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Controls.ExpandButtonMode.Inverted">
      <summary>
        <para>Indicates the normal direction of an expand/collapse button’s arrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Controls.ExpandButtonMode.Normal">
      <summary>
        <para>Indicates the inverted direction of an expand/collapse button’s arrow.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Controls.IXtraResizableControl">
      <summary>
        <para>Defines an interface a control that can be implemented to provide layout information to a Layout Control.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Controls.IXtraResizableControl.Changed">
      <summary>
        <para>The control that implements this interface must fire the Changed event when specific settings that affect the layout information have been changed, and the Layout Control must update the layout as a result.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Controls.IXtraResizableControl.IsCaptionVisible">
      <summary>
        <para>When implemented by a control, specifies whether a text label should be visible by default when this control is added to a Layout Control.</para>
      </summary>
      <value>true if a text label should be visible by default when the control is added to a Layout Control; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Controls.IXtraResizableControl.MaxSize">
      <summary>
        <para>When implemented by a control, specifies its default maximum size which is in effect when the control is displayed within a Layout Control.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the control’s default maximum size.</value>
    </member>
    <member name="P:DevExpress.Utils.Controls.IXtraResizableControl.MinSize">
      <summary>
        <para>When implemented by a control, specifies its default minimum size which is in effect when the control is displayed within a Layout Control.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the control’s default minimum size.</value>
    </member>
    <member name="T:DevExpress.Utils.DefaultToolTipController">
      <summary>
        <para>Manages <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">tooltips</see> for all DevExpress controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DefaultToolTipController"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DefaultToolTipController"/> class with the specified container.</para>
      </summary>
      <param name="container">An object that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.</param>
    </member>
    <member name="P:DevExpress.Utils.DefaultToolTipController.DefaultController">
      <summary>
        <para>Returns the object which represents the Default ToolTipController.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which represents the Default ToolTipController.</value>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.GetAllowHtmlText(System.Windows.Forms.Control)">
      <summary>
        <para>Returns whether HTML formatting is enabled in tooltips for the specified control.</para>
      </summary>
      <param name="control">A control for which this tooltip setting is to be obtained.</param>
      <returns>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips for the specified control.</returns>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.GetSuperTip(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the specified control.</para>
      </summary>
      <param name="control">A control whose SuperToolTip object is to be obtained.</param>
      <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the control.</returns>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.GetTitle(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a regular tooltip’s title displayed within the specified control.</para>
      </summary>
      <param name="control">A control whose tooltip’s title is to be obtained.</param>
      <returns>A string representing a regular tooltip’s title for the control.</returns>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.GetToolTip(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a regular tooltip for the specified control.</para>
      </summary>
      <param name="control">A control whose tooltip should be obtained.</param>
      <returns>A string representing a regular tooltip for the control.</returns>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.GetToolTipIconType(System.Windows.Forms.Control)">
      <summary>
        <para>Gets the type of the icon displayed within the specified control’s regular tooltip.</para>
      </summary>
      <param name="control">A control whose tooltip’s icon type is to be obtained.</param>
      <returns>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the icon type displayed within the specified control’s regular tooltip.</returns>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.SetAllowHtmlText(System.Windows.Forms.Control,DevExpress.Utils.DefaultBoolean)">
      <summary>
        <para>Sets whether HTML formatting is enabled in tooltips for the specified control.</para>
      </summary>
      <param name="control">A control for which the tooltip information is to be changed.</param>
      <param name="value">A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is enabled in tooltips for the specified control.</param>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.SetSuperTip(System.Windows.Forms.Control,DevExpress.Utils.SuperToolTip)">
      <summary>
        <para>Associates a <see cref="T:DevExpress.Utils.SuperToolTip"/> object with the specified control.</para>
      </summary>
      <param name="control">A control for which to set the tooltip.</param>
      <param name="value">A <see cref="T:DevExpress.Utils.SuperToolTip"/> object to associate with the control.</param>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.SetTitle(System.Windows.Forms.Control,System.String)">
      <summary>
        <para>Sets a regular tooltip’s title for the specified control.</para>
      </summary>
      <param name="control">A control for which to set a regular tooltip’s title.</param>
      <param name="value">A string representing a regular tooltip’s title.</param>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.SetToolTip(System.Windows.Forms.Control,System.String)">
      <summary>
        <para>Sets a regular tooltip for the specified control.</para>
      </summary>
      <param name="control">A control for which to set the tooltip.</param>
      <param name="value">A string representing a regular tooltip.</param>
    </member>
    <member name="M:DevExpress.Utils.DefaultToolTipController.SetToolTipIconType(System.Windows.Forms.Control,DevExpress.Utils.ToolTipIconType)">
      <summary>
        <para>Sets the type of the icon displayed within the specified control’s regular tooltip.</para>
      </summary>
      <param name="control">A control for which the icon type is set.</param>
      <param name="value">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon that should be displayed within the specified control’s regular tooltip.</param>
    </member>
    <member name="T:DevExpress.Utils.DPIAwareImageCollection">
      <summary>
        <para>Storage that serves as an external icon source for DevExpress controls. Automatically replaces default images with their larger counterparts at higher <see href="https://docs.devexpress.com/WindowsForms/116666/common-features/high-dpi-support">DPI</see> settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> class with the specified settings.</para>
      </summary>
      <param name="container">An IContainer descendant that owns this newly created <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> object.</param>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.Assign(DevExpress.Utils.ImageCollection)">
      <summary>
        <para>Copies all available property settings from the target <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> to this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</para>
      </summary>
      <param name="imageCollection">A <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> object whose settings should be copied to this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.BeginInit">
      <summary>
        <para>Begins the <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> initialization.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DPIAwareImageCollection.Changed">
      <summary>
        <para>Occurs whenever the <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> changes its image set and allows you to respond to these changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.EndInit">
      <summary>
        <para>Finishes the <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> initialization.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.GetImage(System.Int32)">
      <summary>
        <para>Returns the image stored within this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</para>
      </summary>
      <param name="imageIndex">An Int32 value that specifies the returned image’s position within this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</param>
      <returns>An Image stored within this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.DPIAwareImageCollection.GetImage(System.String)">
      <summary>
        <para>Returns the image stored within this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</para>
      </summary>
      <param name="imageKey">A String value that specifies the image name.</param>
      <returns>An Image stored within this <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.DPIAwareImageCollection.Images">
      <summary>
        <para>Provides access to default <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> images.</para>
      </summary>
      <value>A DevExpress.Utils.DefaultImageList collection that stores default <see cref="T:DevExpress.Utils.DPIAwareImageCollection"/> images.</value>
    </member>
    <member name="P:DevExpress.Utils.DPIAwareImageCollection.ImageSize">
      <summary>
        <para>Gets or sets the image size that should be retrieved at the default 96 DPI setting.</para>
      </summary>
      <value>A Size structure that specifies the default image size.</value>
    </member>
    <member name="P:DevExpress.Utils.DPIAwareImageCollection.Owner">
      <summary>
        <para>This is an internal property that should not be used in code.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.DPIAwareImageCollection.Site">
      <summary>
        <para>Gets or sets the <see cref="T:System.ComponentModel.ISite"/> for the object.</para>
      </summary>
      <value>The <see cref="T:System.ComponentModel.ISite"/> for the object.</value>
    </member>
    <member name="P:DevExpress.Utils.DPIAwareImageCollection.Stream">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DPIAwareImageCollection.TransparentColor">
      <summary>
        <para>Gets or sets the color to treat as transparent.</para>
      </summary>
      <value>A Color object that specifies a color, which is not drawn when the image is rendered.</value>
    </member>
    <member name="N:DevExpress.Utils.DragDrop">
      <summary>
        <para>The namespace contains types that support the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.BeginDragDropEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropEvents.BeginDragDrop"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.BeginDragDropEventArgs.#ctor">
      <summary>
        <para>Initializes a new BeginDragDropEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.BeginDragDropEventArgs.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new BeginDragDropEventArgs class instance with the specified settings. For internal use.</para>
      </summary>
      <param name="cancel">true to cancel the operation; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.BeginDragDropEventArgs.Data">
      <summary>
        <para>Gets or sets the dragged data elements.</para>
      </summary>
      <value>An object that specifies the dragged data elements.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.BeginDragDropEventArgs.PreviewImage">
      <summary>
        <para>Gets or sets a preview of dragged data elements (rows/nodes/items).</para>
      </summary>
      <value>An Image object that specifies a preview of dragged data elements.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropActions">
      <summary>
        <para>Enumerates actions available in a drag-and-drop operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropActions.All">
      <summary>
        <para>The combination of the Copy, Move, and Scroll actions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropActions.Copy">
      <summary>
        <para>The data from the source control is copied to the target control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropActions.Link">
      <summary>
        <para>The data from the source control is linked to the target control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropActions.Move">
      <summary>
        <para>The data from the source control is moved to the target control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropActions.None">
      <summary>
        <para>The target control does not accept data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropActions.Scroll">
      <summary>
        <para>The target control is scrolled while dragging a node to a position that is not currently visible in the target control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropBehavior">
      <summary>
        <para>Represents the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> that can be attached to a data control to allow users to move/reorder data elements with the mouse.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehavior.#ctor(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.DragDrop.DragDropEvents)">
      <summary>
        <para>Initializes a new DragDropBehavior class instance with the specified settings. For internal use.</para>
      </summary>
      <param name="dragDropBehaviorSourceType">The Type of the control to which the Behavior is attached.</param>
      <param name="previewVisible">true to show a preview of dragged data elements; otherwise, false.</param>
      <param name="insertIndicatorVisible">true to show where dragged data elements will be inserted; otherwise, false.</param>
      <param name="allowDrop">true to allow users to drop data elements on the attached control; otherwise, false.</param>
      <param name="allowDrag">true to allow users to drag data elements from the attached control; otherwise, false.</param>
      <param name="events">A DragDropEvents component that provides access to the drag-and-drop events.</param>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehavior.Create(System.Type,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.DragDrop.DragDropEvents)">
      <summary>
        <para>Returns a new Drag-and-Drop Behavior. For internal use.</para>
      </summary>
      <param name="dragDropBehaviorSourceType">The Type of the control to which the Behavior is attached.</param>
      <param name="previewVisible">true to show a preview of dragged data elements; otherwise, false.</param>
      <param name="insertIndicatorVisible">true to show where dragged data elements will be inserted; otherwise, false.</param>
      <param name="allowDrop">true to allow users to drop data elements on the attached control; otherwise, false.</param>
      <param name="events">A DragDropEvents component that provides access to drag-and-drop events.</param>
      <returns>A DragDropBehavior object that specifies the Drag-and-Drop Behavior.</returns>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehavior.Create(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.DragDrop.DragDropEvents)">
      <summary>
        <para>Returns a new Drag-and-Drop Behavior. For internal use.</para>
      </summary>
      <param name="dragDropBehaviorSourceType">The Type of the control to which the Behavior is attached.</param>
      <param name="previewVisible">true to show a preview of dragged data elements; otherwise, false.</param>
      <param name="insertIndicatorVisible">true to show where dragged data elements will be inserted; otherwise, false.</param>
      <param name="allowDrop">true to allow users to drop data elements on the attached control; otherwise, false.</param>
      <param name="allowDrag">true to allow users to drag data elements from the attached control; otherwise, false.</param>
      <param name="events">A DragDropEvents component that provides access to drag-and-drop events.</param>
      <returns>A DragDropBehavior object that specifies the Drag-and-Drop Behavior.</returns>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehavior.Create(System.Type,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns a new Drag-and-Drop Behavior. For internal use.</para>
      </summary>
      <param name="dragDropBehaviorSourceType">The Type of the control to which the Behavior is attached.</param>
      <param name="previewVisible">true to show a preview of dragged data elements; otherwise, false.</param>
      <param name="insertIndicatorVisible">true to show where dragged data elements will be inserted; otherwise, false.</param>
      <param name="allowDrop">true to allow users to drop data elements on the attached control; otherwise, false.</param>
      <returns>A DragDropBehavior object that specifies the Drag-and-Drop Behavior.</returns>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2">
      <summary>
        <para>Represents a base class for the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see>.</para>
      </summary>
      <typeparam name="TDragDropBehaviorSource">A TDragDropBehaviorSource object that supports the Drag-and-Drop Behavior.</typeparam>
      <typeparam name="TDragDropBehaviorProperties">A TDragDropBehaviorProperties object that exposes the Drag-and-Drop Behavior options.</typeparam>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.BeginDragDrop">
      <summary>
        <para>Occurs when a drag-and-drop operation is initiated.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.DragDrop">
      <summary>
        <para>Occurs when a data element is dropped on the control.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.DragEnter">
      <summary>
        <para>Occurs when a data element is dragged into the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.DragLeave">
      <summary>
        <para>Occurs when a data element is dragged out of the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.DragOver">
      <summary>
        <para>Occurs when a data element is dragged over the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.EndDragDrop">
      <summary>
        <para>Occurs when a drag-and-drop operation is completed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropBehaviorBase`2.Properties">
      <summary>
        <para>Provides access to the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> <see cref="T:DevExpress.Utils.DragDrop.DragDropBehaviorProperties">options</see> (preview, indicator, etc.).</para>
      </summary>
      <value>A TDragDropBehaviorProperties object that contains the Behavior options.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropBehaviorProperties">
      <summary>
        <para>Contains the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.#ctor">
      <summary>
        <para>Initializes a new DragDropBehaviorProperties class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.AllowDrag">
      <summary>
        <para>Gets or sets whether users are allowed to drag data elements from the control.</para>
      </summary>
      <value>true if users are allowed to drag data elements from the control; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.AllowDrop">
      <summary>
        <para>Gets or sets whether users are allowed to drop data elements on the attached control.</para>
      </summary>
      <value>true to allow users to drop data elements on the attached control; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.CreateEventsStorage">
      <summary>
        <para>Returns a new <see cref="T:DevExpress.Utils.DragDrop.DragDropEvents"/> class instance. For internal use.</para>
      </summary>
      <returns>For internal use.</returns>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.Events">
      <summary>
        <para>Provides access to the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> events. For internal use.</para>
      </summary>
      <value>A DragDropEvents object that contains the Drag-and-Drop Behavior events.</value>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.GetEventsStorage">
      <summary>
        <para>Returns the <see cref="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.Events"/> property value. For internal use.</para>
      </summary>
      <returns>For internal use.</returns>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.InsertIndicatorVisible">
      <summary>
        <para>Gets or sets whether to display the indicator that shows the position in the target control where dragged elements will be inserted.</para>
      </summary>
      <value>true to show the insert indicator; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.PreviewVisible">
      <summary>
        <para>Gets or sets whether a preview of the dragged element is displayed during a drag-and-drop operation.</para>
      </summary>
      <value>true to display a preview of the dragged element; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.SetEventsStorage(System.ComponentModel.IComponent)">
      <summary>
        <para>Assigns the specified <see cref="T:DevExpress.Utils.DragDrop.DragDropEvents"/> object to the <see cref="P:DevExpress.Utils.DragDrop.DragDropBehaviorProperties.Events"/> property. For internal use.</para>
      </summary>
      <param name="eventsStorage">For internal use.</param>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropEvents.DragDrop"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropEventArgs.#ctor">
      <summary>
        <para>Initializes a new DragDropEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropEvents">
      <summary>
        <para>Provides access to a control’s <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropEvents.#ctor">
      <summary>
        <para>Initializes a new DragDropEvents class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new DragDropEvents class instance with the specified settings. For internal use.</para>
      </summary>
      <param name="container">An IContainer object that contains this component.</param>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropEvents.BeginDragDrop">
      <summary>
        <para>Occurs when a drag-and-drop operation is initiated.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropEvents.DragDrop">
      <summary>
        <para>Occurs when a data element is dropped on the control.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropEvents.DragEnter">
      <summary>
        <para>Occurs when a data element is dragged into the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropEvents.DragLeave">
      <summary>
        <para>Occurs when a data element is dragged out of the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropEvents.DragOver">
      <summary>
        <para>Occurs when a data element is dragged over the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropEvents.EndDragDrop">
      <summary>
        <para>Occurs when a drag-and-drop operation is completed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropKeyState">
      <summary>
        <para>Enumerates states that specify pressed keyboard keys and mouse buttons.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.Alt">
      <summary>
        <para>The Alt key is pressed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.Control">
      <summary>
        <para>The Ctrl key is pressed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.LMouseButton">
      <summary>
        <para>The left mouse button is pressed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.MMouseButton">
      <summary>
        <para>The middle mouse button is pressed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.None">
      <summary>
        <para>No keyboard keys or mouse buttons are pressed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.RMouseButton">
      <summary>
        <para>The right mouse button is pressed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.DragDropKeyState.Shift">
      <summary>
        <para>The Shift key is pressed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragDropManager">
      <summary>
        <para>Represents the <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> manager.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.BeginDragDrop">
      <summary>
        <para>Occurs when a drag-and-drop operation is initiated.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropManager.CancelDragDrop">
      <summary>
        <para>Cancels the currently performed drag-and-drop operation. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropManager.Default">
      <summary>
        <para>Provides access to the default <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> manager.</para>
      </summary>
      <value>A DragDropManager object that is the default <see href="https://docs.devexpress.com/WindowsForms/118656/common-features/behaviors/drag-and-drop-behavior">Drag-and-Drop Behavior</see> manager.</value>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropManager.DoDragDrop(DevExpress.Utils.DragDrop.DoDragDropEventArgs)">
      <summary>
        <para>Initiates a drag-and-drop operation. For internal use.</para>
      </summary>
      <param name="args">Information about the operation.</param>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropManager.DoDragDrop(System.Object,System.Object,System.Drawing.Image,DevExpress.Utils.DragDrop.DragDropActions)">
      <summary>
        <para>Initiates a drag-and-drop operation. For internal use.</para>
      </summary>
      <param name="source">A source control.</param>
      <param name="data">Dragged data elements.</param>
      <param name="preview">A preview of the dragged data elements.</param>
      <param name="action">The initial drag-and-drop effect.</param>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.DragDrop">
      <summary>
        <para>Occurs when a data element is dropped on the control.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.DragEnter">
      <summary>
        <para>Occurs when a data element is dragged into the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.DragLeave">
      <summary>
        <para>Occurs when a data element is dragged out of the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.DragOver">
      <summary>
        <para>Occurs when a data element is dragged over the control’s bounds.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.EndDragDrop">
      <summary>
        <para>Occurs when a drag-and-drop operation is completed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropManager.InsertIndicatorVisible">
      <summary>
        <para>Gets or sets whether to indicate where dragged data elemets will be inserted.</para>
      </summary>
      <value>true to indicate where dragged data elements will be inserted; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragDropManager.PreviewShowMode">
      <summary>
        <para>Gets or sets whether a preview of dragged data elements is displayed near the mouse pointer during drag-and-drop operations.</para>
      </summary>
      <value>A PreviewImageShowMode enumeration values that specifies whether to show a preview of dragged elements.</value>
    </member>
    <member name="E:DevExpress.Utils.DragDrop.DragDropManager.QueryDragPreviewImage">
      <summary>
        <para>Allows you to provide a preview of the dragged data elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropManager.RegisterBehavior(DevExpress.Utils.DragDrop.IDragDropBehavior)">
      <summary>
        <para>Registers the specified Drag-and-Drop Behavior. For internal use.</para>
      </summary>
      <param name="behavior">An IDragDropBehavior object that specifies the Drag-and-Drop Behavior to register.</param>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragDropManager.UnregisterBehavior(DevExpress.Utils.DragDrop.IDragDropBehavior)">
      <summary>
        <para>Unregisters the specified Drag-and-Drop Behavior. For internal use.</para>
      </summary>
      <param name="behavior">The IDragDropBehavior object specifies the Drag-and-Drop Behavior that should be unregistered.</param>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragEnterEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropEvents.DragEnter"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragEnterEventArgs.#ctor">
      <summary>
        <para>Initializes a new DragEnterEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragEnterEventArgs.AllowDrop">
      <summary>
        <para>Gets or sets whether it is allowed to drop data elements to the target control.</para>
      </summary>
      <value>true to allow users to drop data elements to the target control; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragLeaveEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropEvents.DragLeave"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragLeaveEventArgs.#ctor">
      <summary>
        <para>Initializes a new DragLeaveEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragLeaveEventArgs.Cursor">
      <summary>
        <para>Gets or sets the mouse pointer.</para>
      </summary>
      <value>A Cursor enumeration value that specifies the mouse pointer.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragOverEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropEvents.DragOver"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragOverEventArgs.#ctor">
      <summary>
        <para>Initializes a new DragOverEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragOverEventArgs.InsertIndicator">
      <summary>
        <para>Gets or sets an image that represents the insert indicator.</para>
      </summary>
      <value>An Image object that specifies the insert indicator image.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragOverEventArgs.InsertIndicatorLocation">
      <summary>
        <para>Gets or sets the location of the default insert indicator.</para>
      </summary>
      <value>A Point structure that specifies the location of the default insert indicator.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragOverEventArgs.InsertIndicatorSize">
      <summary>
        <para>Gets or sets the size of the default insert indicator.</para>
      </summary>
      <value>A Size structure that specifies the size of the default insert indicator.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DragOverEventArgsBase">
      <summary>
        <para>Provides basic data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropEvents.DragOver"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DragOverEventArgsBase.#ctor">
      <summary>
        <para>Initializes a new DragOverEventArgsBase class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragOverEventArgsBase.InsertType">
      <summary>
        <para>Gets or sets whether dragged data elements are inserted before or after a data element under the mouse pointer, or as a child (for tree list only).</para>
      </summary>
      <value>An InsertType enumeration value that specifies where dragged elements will be inserted.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DragOverEventArgsBase.Tag">
      <summary>
        <para>Gets or sets custom data associated with the drag-and-drop operation.</para>
      </summary>
      <value>Custom data associated with the drag-and-drop operation.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DXDefaultEventArgs">
      <summary>
        <para>Allows you to invoke or suppress actions the attached control performs on a particular drag-and-drop operation stage.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DXDefaultEventArgs.#ctor">
      <summary>
        <para>Initializes a new DXDefaultEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DXDefaultEventArgs.Default">
      <summary>
        <para>Invokes the default action the attached control performs on the current drag-and-drop operation stage.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDefaultEventArgs.Handled">
      <summary>
        <para>Gets or sets whether the event was handled and allows you to suppress the default action.</para>
      </summary>
      <value>true to suppress the default action; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.DXDragEventArgs">
      <summary>
        <para>Represents a base class for drag-and-drop event arguments.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DXDragEventArgs.#ctor">
      <summary>
        <para>Initializes a new DXDragEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.Action">
      <summary>
        <para>Gets or sets the drag-and-drop action (Copy, Move, etc.) to perform.</para>
      </summary>
      <value>A DragDropActions enumeration value that specifies the drag-and-drop action (Copy, Move, etc.) to perform.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.Cursor">
      <summary>
        <para>Gets or sets the mouse pointer.</para>
      </summary>
      <value>A Cursor enumeration value that specifies the mouse pointer.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.Data">
      <summary>
        <para>Gets or sets the data elements being dragged.</para>
      </summary>
      <value>An object that specifies the data elements being dragged.</value>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.DXDragEventArgs.GetData``1">
      <summary>
        <para>Returns the data elements being dragged.</para>
      </summary>
      <typeparam name="T">The data type.</typeparam>
      <returns>The data type.</returns>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.KeyState">
      <summary>
        <para>Gets the pressed mouse buttons (left, middle, right) and  modifier keys (Shift, Ctrl, Alt).</para>
      </summary>
      <value>A DragDropKeyState enumeration value that specifies the pressed mouse buttons and modifier keys.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.Location">
      <summary>
        <para>Gets the mouse cursor’s position.</para>
      </summary>
      <value>A Point structure that specifies the mouse pointer’s position.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.Source">
      <summary>
        <para>Gets the source control.</para>
      </summary>
      <value>An object that specifies the source control.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.DXDragEventArgs.Target">
      <summary>
        <para>Gets the target control.</para>
      </summary>
      <value>An object that specifies the target control.</value>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.InsertType">
      <summary>
        <para>Enumerates types that specify how to drop dragged data elements based on the mouse pointer’s position.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.InsertType.After">
      <summary>
        <para>Drop the dragged data element after the data element under the mouse pointer.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.InsertType.AsChild">
      <summary>
        <para>Drop the dragged data element as a child of the data element under the mouse pointer (tree list only).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.InsertType.Before">
      <summary>
        <para>Drop the dragged data element before the data element under the mouse pointer.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.InsertType.None">
      <summary>
        <para>It is not allowed to drop data elemements on the target control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.PreviewImageShowMode">
      <summary>
        <para>Enumerates modes that specify whether to show a preview of dragged elements next to the mouse pointer.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.PreviewImageShowMode.Always">
      <summary>
        <para>A preview of the dragged data element is always displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.PreviewImageShowMode.ForDragDropTargets">
      <summary>
        <para>A preview of the dragged data element is only displayed when a user drag it over the target control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DragDrop.PreviewImageShowMode.Never">
      <summary>
        <para>A preview of the dragged data element is never displayed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.DragDrop.DragDropManager.QueryDragPreviewImage">DragDropManager.QueryDragPreviewImage</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.#ctor">
      <summary>
        <para>Initializes a new QueryDragPreviewImageEventArgs class instance with the default settings. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.Action">
      <summary>
        <para>Gets the drag-and-drop action (Copy, Move, etc.) to perform.</para>
      </summary>
      <value>A DragDropActions enumeration value that specifies the drag-and-drop action (Copy, Move, etc.) to perform.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.InsertType">
      <summary>
        <para>Gets or sets whether dragged data elements will be inserted before or after data element under the mouse pointer, or as a child (for tree list only).</para>
      </summary>
      <value>An InsertType enumeration value that specifies where dragged elements will be inserted.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.KeyState">
      <summary>
        <para>Gets the pressed mouse buttons (left, middle, right) and  modifier keys (Shift, Ctrl, Alt).</para>
      </summary>
      <value>A DragDropKeyState enumeration value that specifies the pressed mouse buttons and modifier keys.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.PreviewImage">
      <summary>
        <para>Gets or sets a preview of dragged data elements (rows/nodes/items).</para>
      </summary>
      <value>An Image object that specifies a preview of dragged data elements.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.Source">
      <summary>
        <para>Gets the source control.</para>
      </summary>
      <value>An object that specifies the source control.</value>
    </member>
    <member name="P:DevExpress.Utils.DragDrop.QueryDragPreviewImageEventArgs.Target">
      <summary>
        <para>Gets the target control.</para>
      </summary>
      <value>An object that specifies the target control.</value>
    </member>
    <member name="N:DevExpress.Utils.Drawing">
      <summary>
        <para>Contains classes that provide painting facilities for DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Drawing.GraphicsCache">
      <summary>
        <para>Provides methods to paint on drawing surfaces in GDI+ and DirectX modes (see <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX hardware acceleration</see>).</para>
        <para>Provides storage for pens, fonts and brushes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</para>
      </summary>
      <param name="e">A PaintEventArgs object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</param>
      <param name="scaleDPI">A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI">GraphicsCache.ScaleDPI</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs,DevExpress.Utils.Paint.XPaint,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</para>
      </summary>
      <param name="e">A PaintEventArgs object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</param>
      <param name="paint">A DevExpress.Utils.Paint.XPaint object associated with this <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object.</param>
      <param name="scaleDPI">A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI">GraphicsCache.ScaleDPI</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs,DevExpress.Utils.Paint.XPaint)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class</para>
      </summary>
      <param name="e">A DevExpress.Utils.Drawing.DXPaintEventArgs object that contains data used to perform painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</param>
      <param name="paint">A DevExpress.Utils.Paint.XPaint  object that provides methods used for drawing objects. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint">GraphicsCache.Paint</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.</para>
      </summary>
      <param name="e">A DevExpress.Utils.Drawing.DXPaintEventArgs object that contains data used to perform painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Drawing.Graphics,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</para>
      </summary>
      <param name="g">A Graphics object that serves as the painting surface and provides painting facilities. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see> property.</param>
      <param name="scaleDPI">A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI">GraphicsCache.ScaleDPI</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Drawing.Graphics)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.</para>
      </summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics"/> object to initialize the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class with the specified settings.</para>
      </summary>
      <param name="e">A PaintEventArgs object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</param>
      <param name="scaleDPI">A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI">GraphicsCache.ScaleDPI</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs,DevExpress.Utils.Paint.XPaint)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">GraphicsCache.PaintArgs</see> property.</param>
      <param name="paint">A DevExpress.Utils.Paint.XPaint object providing painting methods used in the <see cref="T:DevExpress.XtraNavBar.NavBarControl"/> control. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint">GraphicsCache.Paint</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used to paint.</param>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ActiveSkinName">
      <summary>
        <para>Returns the name of a currently applied <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Application Skin</see>.</para>
      </summary>
      <value>A String value that is the applied skin’s name.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.AllowDrawInvisibleRect">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Cache">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.ResourceCache object.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcClipRectangle(System.Drawing.Rectangle)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcDefaultTextSize(System.Drawing.Font)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcRectangle(System.Drawing.Rectangle)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value which represents a string to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.</param>
      <param name="layoutArea">A <see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Drawing.SizeF)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font and using the specified formatting.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value which represents a string to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing and alignment, of the string.</param>
      <param name="layoutArea">A <see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32,System.Int32,System.Boolean@)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font and using the specified formatting, fitting the string into a clipping rectangle. Allows you to determine whether the string does not fit the clipping rectangle.</para>
      </summary>
      <param name="text">The string to be measured.</param>
      <param name="font">The font in which to paint the string.</param>
      <param name="strFormat">Contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="maxWidth">The maximum width of the clipping rectangle that will fit the string (in pixels).</param>
      <param name="maxHeight">The maximum height of the clipping rectangle that will fit the string (in pixels).</param>
      <param name="isCropped">A value that specifies whether the text is trimmed (its size is larger than the clipping rectangle).</param>
      <returns>The measured size of the string, in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font and formatting, fitting the string into a clipping rectangle.</para>
      </summary>
      <param name="text">The string to be measured.</param>
      <param name="font">The font in which to paint the string.</param>
      <param name="strFormat">Contains formatting information, such as the line spacing and alignment of the string.</param>
      <param name="maxWidth">The maximum width of the clipping rectangle that will fit the string (in pixels).</param>
      <param name="maxHeight">The maximum height of the clipping rectangle that will fit the string (in pixels).</param>
      <returns>The measured size of the string, in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn with the specified font and formatting.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the string to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object that specifies the text format, such as the line spacing and alignment.</param>
      <param name="maxWidth">An integer value that specifies the maximum width, in pixels, of the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value which represents a string to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.</param>
      <param name="maxWidth">An integer value specifying the maximum width of the string (in pixels).</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font)">
      <summary>
        <para>Calculates the size of the specified string when it’s drawn with the specified font.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value which represents a string to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="layoutArea">A <see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Drawing.SizeF)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat"/> object that specifies the text format, such as the line spacing and alignment.</param>
      <param name="layoutArea">A <see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32,System.Int32,System.Boolean@)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object that specifies the text format, such as the line spacing and alignment.</param>
      <param name="maxWidth">An integer value that specifies the maximum width, in pixels, of the text.</param>
      <param name="maxHeight">An integer value that specifies the maximum height, in pixels, of the text.</param>
      <param name="isCropped">A value that specifies whether the text is trimmed (its size is larger than the clipping rectangle).</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object that specifies the text format, such as the line spacing and alignment.</param>
      <param name="maxWidth">An integer value that specifies the maximum width, in pixels, of the text.</param>
      <param name="maxHeight">An integer value that specifies the maximum height, in pixels, of the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object that specifies the text format, such as the line spacing and alignment.</param>
      <param name="maxWidth">An integer value that specifies the maximum width, in pixels, of the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font,System.Int32)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <param name="maxWidth">An integer value that specifies the maximum width, in pixels, of the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size in pixels.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcVTextSize(System.String,System.Drawing.Font)">
      <summary>
        <para>Calculates the size of the specified string when it is drawn vertically with the specified font and format.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to measure.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object that specifies the font settings (face, size, style) used to draw the text.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure that specifies the text size (in pixels).</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Clear">
      <summary>
        <para>Clears the internal hash tables that store the pens, fonts and, solid and linear gradient brushes that have recently been used.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Clear(System.Drawing.Color)">
      <summary>
        <para>Clears the entire drawing surface and fills it with the specified background color.</para>
      </summary>
      <param name="color">A Color structure that represents the background color of the drawing surface.</param>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ClipInfo">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.GraphicsClip object.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.CompositingMode">
      <summary>
        <para>Gets a value that specifies how composited images are drawn to the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see>.</para>
      </summary>
      <value>One of the <see cref="T:System.Drawing.Drawing2D.CompositingMode"/> values.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.CompositingQuality">
      <summary>
        <para>Gets or sets the rendering quality of composited images drawn to the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see>.</para>
      </summary>
      <value>One of the <see cref="T:System.Drawing.Drawing2D.CompositingQuality"/> values.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CreateMatrix">
      <summary>
        <para>Returns a 3-by-3 affine matrix that represents a geometric transform.</para>
      </summary>
      <returns>An object that represents a geometric transform.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CreateMatrix(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Returns a 3-by-3 affine matrix that represents a geometric transform.</para>
      </summary>
      <param name="m11">The value in the first row and first column of the new matrix.</param>
      <param name="m12">The value in the first row and second column of the new matrix.</param>
      <param name="m21">The value in the second row and first column of the new matrix.</param>
      <param name="m22">The value in the second row and second column of the new matrix.</param>
      <param name="dx">The value in the third row and first column of the new matrix.</param>
      <param name="dy">The value in the third row and second column of the new matrix.</param>
      <returns>An object that represents a geometric transform.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CreatePath">
      <summary>
        <para>Returns a new series of connected lines and curves.</para>
      </summary>
      <returns>An object that specifies a series of connected lines and curves.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CreateRoundedRectangle(System.Drawing.Rectangle,DevExpress.Utils.Drawing.CornerRadius)">
      <summary>
        <para>Creates a rectangular path with rounded corners.</para>
      </summary>
      <param name="rect">The rectangle that specifies the path.</param>
      <param name="radius">The corner radius for the rectangle.</param>
      <returns>The resulting GraphicsPath object.</returns>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.DeviceDpi">
      <summary>
        <para>Returns the current display DPI value.</para>
      </summary>
      <value>The current display DPI value.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.</param>
      <param name="rect"><see cref="T:System.Drawing.Rectangle"/> structure that defines the boundaries of the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF"/> structure.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.</param>
      <param name="rect"><see cref="T:System.Drawing.RectangleF"/> structure that defines the boundaries of the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="width">Width of the rectangle that defines the ellipse.</param>
      <param name="height">Height of the rectangle that defines the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="width">Width of the rectangle that defines the ellipse.</param>
      <param name="height">Height of the rectangle that defines the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Draws a Bezier spline defined by four <see cref="T:System.Drawing.Point"/> structures.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> structure that determines the color, width, and style of the curve.</param>
      <param name="pt1"><see cref="T:System.Drawing.Point"/> structure that represents the starting point of the curve.</param>
      <param name="pt2"><see cref="T:System.Drawing.Point"/> structure that represents the first control point for the curve.</param>
      <param name="pt3"><see cref="T:System.Drawing.Point"/> structure that represents the second control point for the curve.</param>
      <param name="pt4"><see cref="T:System.Drawing.Point"/> structure that represents the ending point of the curve.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Draws a Bezier spline defined by four <see cref="T:System.Drawing.PointF"/> structures.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> structure that determines the color, width, and style of the curve.</param>
      <param name="pt1"><see cref="T:System.Drawing.PointF"/> structure that represents the starting point of the curve.</param>
      <param name="pt2"><see cref="T:System.Drawing.PointF"/> structure that represents the first control point for the curve.</param>
      <param name="pt3"><see cref="T:System.Drawing.PointF"/> structure that represents the second control point for the curve.</param>
      <param name="pt4"><see cref="T:System.Drawing.PointF"/> structure that represents the ending point of the curve.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a Bezier spline defined by four ordered pairs of coordinates that represent points.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the curve.</param>
      <param name="x1">The x-coordinate of the starting point of the curve.</param>
      <param name="y1">The y-coordinate of the starting point of the curve.</param>
      <param name="x2">The x-coordinate of the first control point of the curve.</param>
      <param name="y2">The y-coordinate of the first control point of the curve.</param>
      <param name="x3">The x-coordinate of the second control point of the curve.</param>
      <param name="y3">The y-coordinate of the second control point of the curve.</param>
      <param name="x4">The x-coordinate of the ending point of the curve.</param>
      <param name="y4">The y-coordinate of the ending point of the curve.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a series of Bezier splines from an array of <see cref="T:System.Drawing.Point"/> structures.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.Point"/> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a series of Bezier splines from an array of <see cref="T:System.Drawing.PointF"/> structures.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:System.Drawing.PointF"/> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <para>Draws an ellipse specified by a bounding Rectangle structure.</para>
      </summary>
      <param name="pen">A Pen object that specifies the ellipse color, style and line thickness.</param>
      <param name="rect">A Rectangle structure that defines the ellipse boundaries.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>
        <para>Draws an ellipse specified by a bounding RectangleF structure.</para>
      </summary>
      <param name="pen">A Pen object that specifies the ellipse color, style and line thickness.</param>
      <param name="rect">A Rectangle structure that defines the ellipse boundaries.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws an ellipse defined by a bounding rectangle specified by the rectangle upper-left corner coordinates, a height, and a width.</para>
      </summary>
      <param name="x">An Int32 value that is the x-coordinate of the bounding rectangle’s upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the bounding rectangle’s upper-left corner.</param>
      <param name="width">An Int32 value that is the bounding rectangle width.</param>
      <param name="height">An Int32 value that is the bounding rectangle height.</param>
      <param name="color">An ellipse color.</param>
      <param name="penWidth">An Int32 value that specifies the ellipse line thickness.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws an ellipse defined by a bounding rectangle specified by a coordinate pair, a height, and a width.</para>
      </summary>
      <param name="x">A Single value that is the x-coordinate of the bounding rectangle’s upper-left corner.</param>
      <param name="y">A Single value that is the y-coordinate of the bounding rectangle’s upper-left corner.</param>
      <param name="width">A Single value that is the bounding rectangle width.</param>
      <param name="height">A Single value that is the bounding rectangle height.</param>
      <param name="color">An ellipse color.</param>
      <param name="penWidth">An Int32 value that specifies the ellipse line thickness.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Draws a focus rectangle on the specified graphics surface and within the specified bounds.</para>
      </summary>
      <param name="g">The Graphics surface to draw on.</param>
      <param name="r">The dimensions of the focus area.</param>
      <param name="foreColor">The foreground color of the object to draw the focus rectangle on.</param>
      <param name="backColor">The background color of the object to draw the focus rectangle on.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawFocusRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Draws a focus rectangle within the specified bounds.</para>
      </summary>
      <param name="r">The dimensions of the focus area.</param>
      <param name="foreColor">The foreground color of the object to draw the focus rectangle on.</param>
      <param name="backColor">The background color of the object to draw the focus rectangle on.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> within the area specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="icon"><see cref="T:System.Drawing.Icon"/> to draw.</param>
      <param name="targetRect"><see cref="T:System.Drawing.Rectangle"/> structure that specifies the location and size of the resulting image on the display surface. The image contained in the icon parameter is scaled to the dimensions of this rectangular area.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
        <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> at the specified coordinates.</para>
      </summary>
      <param name="icon"><see cref="T:System.Drawing.Icon"/> to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> without scaling the image.</para>
      </summary>
      <param name="icon"><see cref="T:System.Drawing.Icon"/> to draw.</param>
      <param name="targetRect"><see cref="T:System.Drawing.Rectangle"/> structure that specifies the location and size of the resulting image. The image is not scaled to fit this rectangle, but retains its original size. If the image is larger than the rectangle, it is clipped to fit inside it.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        <para>Draws the Image at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="point">A Point structure that specifies the image upper-left corner’s location.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destPoints">An array of three Point structures that define a parallelogram.</param>
      <param name="srcRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcRect parameter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Draws the Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destPts">An array of three PointF structures that define a parallelogram.</param>
      <param name="srcRect">A RectangleF structure that specifies the image portion to be drawn.</param>
      <param name="matrix">A color-adjustment matrix for the default category.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>
        <para>Draws the specified Image at the specified location and with the specified shape and size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destPoints">An array of three Point structures that define a parallelogram.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>
        <para>Draws the Image with its original physical size and at the specified location.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="point">A PointF structure that specifies the image upper-left corner’s location.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destPoints">An array of three PointF structures that define a parallelogram.</param>
      <param name="srcRect">A RectangleF structure that specifies the image portion to be drawn.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcRect parameter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Draws the portion of the specified Image at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destPts">An array of three Point structures that define a parallelogram.</param>
      <param name="srcRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="matrix">A color-adjustment matrix for the default category.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>
        <para>Draws the specified Image at the specified location and with the specified shape and size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destPoints">An array of three PointF structures that define a parallelogram.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the specified Image portion with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the drawn image’s location and size. The image is scaled to fit the rectangle.</param>
      <param name="scrRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="enabled">true if the image should be painted as is; false to draw a grayed-out “disabled” image.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the portion of the specified Image at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the drawn image’s location and size. The image is scaled to fit the rectangle.</param>
      <param name="srcRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcRect parameter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Draws the portion of the specified Image at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the drawn image’s location and size. The image is scaled to fit the rectangle.</param>
      <param name="srcRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="matrix">A color-adjustment matrix for the default category.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified Image portion at the specific coordinates and with the specified attributes and size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the drawn image’s location and size. The image is scaled to fit the rectangle.</param>
      <param name="scrRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="attributes">A System.Drawing.Imaging.ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws an Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the image location and size. The image is scaled to fit this rectangle.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image portion’ upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image portion’ upper-left corner.</param>
      <param name="width">An Int32 value that is the x-coordinate the image portion’s width.</param>
      <param name="height">An Int32 value that is the image portion’ height.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the x, y, width and height parameters.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws an Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the image location and size. The image is scaled to fit this rectangle.</param>
      <param name="srcX">A Single value that is the x-coordinate of the image portion’s upper-left corner.</param>
      <param name="srcY">A Single value that is the y-coordinate of the image portion’s upper-left corner.</param>
      <param name="srcWidth">A Single value that is the image portion’s width.</param>
      <param name="srcHeight">A Single value that is the image portion’s height.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcX, srcY, srcHeight and srcWidth parameters.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Draws an Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the image location and size. The image is scaled to fit this rectangle.</param>
      <param name="srcX">A Single value that is the x-coordinate of the image portion’s upper-left corner.</param>
      <param name="srcY">A Single value that is the y-coordinate of the image portion’s upper-left corner.</param>
      <param name="srcWidth">A Single value that is the image portion’s width.</param>
      <param name="srcHeight">A Single value that is the image portion’s height.</param>
      <param name="matrix">A color-adjustment matrix for the default category.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the specified Image at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="rect">A Rectangle structure that specifies the image location and size.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws an Image portion at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="destRect">A RectangleF structure that specifies the image location and size. The image is scaled to fit this rectangle.</param>
      <param name="srcRect">A RectangleF structure that specifies the image portion to be drawn.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcRect parameter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
        <para>Draws the Image at the specified location and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="rect">A RectangleF structure that specifies the image location and size.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the specified Image portion at the specific coordinates and with the specified size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image upper-left corner.</param>
      <param name="srcRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="enabled">true if the image should be painted as is; false to draw a grayed-out “disabled” image.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws an image portion at a specified location.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image upper-left corner.</param>
      <param name="srcRect">A Rectangle structure that specifies the image portion to be drawn.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcRect parameter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws the given images at specific coordinates and with specific size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image upper-left corner.</param>
      <param name="width">An Int32 value that is the image width.</param>
      <param name="height">An Int32 value that is the image height.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified Image with its original physical size, at the location specified by a coordinate pair.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image upper-left corner.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws an image portion at the specified location.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Single value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Single value that is the y-coordinate of the image upper-left corner.</param>
      <param name="srcRect">A RectangleF structure that specifies the image portion to be drawn.</param>
      <param name="srcUnit">A GraphicsUnit enumeration value that specifies the measure units for the srcRect parameter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws the Image at the specific location and with the specific size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Single value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Single value that is the y-coordinate of the image upper-left corner.</param>
      <param name="width">An Single value that is the image width.</param>
      <param name="height">An Single value that is the image height.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>
        <para>Draws the Image using its original physical size and at the specified location.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Single value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Single value that is the y-coordinate of the image upper-left corner.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        <para>Draws an image at the specific location using its original physical size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="point">A Point structure that specifies the image upper-left corner location.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Draws an image at the specific location using its original physical size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="rect">A Rectangle structure, whose X and Y properties specify the image upper-left corner coordinates, and Width and Height properties are ignored.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws an image at the specific location using its original physical size.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image upper-left corner.</param>
      <param name="width">Not used.</param>
      <param name="height">Not used.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Draws an image using its original physical size at the location specified by a coordinate pair.</para>
      </summary>
      <param name="image">An Image to draw.</param>
      <param name="x">An Int32 value that is the x-coordinate of the image upper-left corner.</param>
      <param name="y">An Int32 value that is the y-coordinate of the image upper-left corner.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Draws a line on the current painting surface connecting two Point structures.</para>
      </summary>
      <param name="pen">A Pen object specifying the Pen used to draw the line.</param>
      <param name="pt1">A Point structure that represents the first point to connect.</param>
      <param name="pt2">A Point structure that represents the second point to connect.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Draws a line connecting two <see cref="T:System.Drawing.PointF"/> structures.</para>
      </summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen"/> object that specifies the color, width, and style of the line.</param>
      <param name="pt1">A <see cref="T:System.Drawing.PointF"/> structure that represents the first point to connect.</param>
      <param name="pt2">A <see cref="T:System.Drawing.PointF"/> structure that represents the second point to connect.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a line connecting two Point structures.</para>
      </summary>
      <param name="pt1">Point structure that represents the first point to connect.</param>
      <param name="pt2">Point structure that represents the second point to connect.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the line.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the line.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a line connecting two PointF structures.</para>
      </summary>
      <param name="pt1">A PointF structure that represents the first point to connect.</param>
      <param name="pt2">A PointF structure that represents the second point to connect.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the line.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the line.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a line connecting two Point structures.</para>
      </summary>
      <param name="x1">The x-coordinate of the Point structure that represents the first point to connect.</param>
      <param name="y1">The y-coordinate of the Point structure that represents the first point to connect.</param>
      <param name="x2">The x-coordinate of the Point structure that represents the second point to connect.</param>
      <param name="y2">The y-coordinate of the Point structure that represents the second point to connect.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the line.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the line.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a line connecting two PointF structures.</para>
      </summary>
      <param name="x1">The x-coordinate of the PointF structure that represents the first point to connect.</param>
      <param name="y1">The y-coordinate of the PointF structure that represents the first point to connect.</param>
      <param name="x2">The x-coordinate of the PointF structure that represents the second point to connect.</param>
      <param name="y2">The y-coordinate of the PointF structure that represents the second point to connect.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the line.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the line.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a series of lines that connect given points.</para>
      </summary>
      <param name="pen">Specifies the color and width for the drawn lines.</param>
      <param name="lines">The array of points that should be connected with lines.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLines(System.Drawing.Point[],System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a polygon defined by an array of Point structures.</para>
      </summary>
      <param name="lines">Array of Point structures that represent the vertices of the polygon.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the lines.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the lines.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLines(System.Drawing.PointF[],System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a polygon defined by an array of PointF structures.</para>
      </summary>
      <param name="lines">Array of PointF structures that represent the vertices of the polygon.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the lines.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the lines.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPath(System.Drawing.Pen,DevExpress.Utils.Drawing.IDxGraphicsPath)">
      <summary>
        <para>Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</para>
      </summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen"/> object that specifies the color, width, and style of the path.</param>
      <param name="path">An object that wraps a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object to draw.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the path.</param>
      <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> to draw.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle"/> structure and two radial lines.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.</param>
      <param name="rect"><see cref="T:System.Drawing.Rectangle"/> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF"/> structure and two radial lines.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.</param>
      <param name="rect"><see cref="T:System.Drawing.RectangleF"/> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</para>
      </summary>
      <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPolygon(System.Drawing.Point[],System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a polygon defined by an array of Point structures.</para>
      </summary>
      <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the polygon.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the polygon.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPolygon(System.Drawing.PointF[],System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a polygon defined by an array of PointF structures.</para>
      </summary>
      <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
      <param name="color">A Color structure that indicates the color of the Pen used to draw the polygon.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the polygon.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen"/> object which specifies the color, width and style of the rectangle.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>
        <para>Draws a <see cref="T:System.Drawing.Rectangle"/>.</para>
      </summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen"/> object that specifies the color, width, and style of the rectangle.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangle.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the rectangle.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">Width of the rectangle to draw.</param>
      <param name="height">Height of the rectangle to draw.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangle.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the rectangle.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a rectangle with the specified border color and thickness.</para>
      </summary>
      <param name="x">An Single value that is the top left corner’s x-coordinate.</param>
      <param name="y">An Single value that is the top left corner’s y-coordinate.</param>
      <param name="width">A Single value that is the rectangle width.</param>
      <param name="height">A Single value that is the rectangle height.</param>
      <param name="color">A Color object that specifies the border color.</param>
      <param name="thickness">An Int32 value that specifies the border thickness.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangles(System.Drawing.Rectangle[],System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle"/> structures.</para>
      </summary>
      <param name="rects">Array of <see cref="T:System.Drawing.Rectangle"/> structures that represent the rectangles to draw.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangles.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the rectangles.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangles(System.Drawing.RectangleF[],System.Drawing.Color,System.Int32)">
      <summary>
        <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF"/> structures.</para>
      </summary>
      <param name="rects">Array of <see cref="T:System.Drawing.RectangleF"/> structures that represent the rectangles to draw.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangles.</param>
      <param name="thickness">A value indicating the width of the Pen used to draw the rectangles.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRoundedRectangle(System.Drawing.Color,System.Int32,System.Drawing.Rectangle,DevExpress.Utils.Drawing.CornerRadius)">
      <summary>
        <para>Draws a rectangle with rounded corners.</para>
      </summary>
      <param name="color">The rectangle border color.</param>
      <param name="width">The rectangle border width.</param>
      <param name="rect">The rectangle to draw.</param>
      <param name="radius">The radius of rectangle corners.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRoundedRectangle(System.Drawing.Pen,System.Drawing.Rectangle,DevExpress.Utils.Drawing.CornerRadius)">
      <summary>
        <para>Draws a rectangle with rounded corners.</para>
      </summary>
      <param name="pen">A Pen that determines the rectangle color, width, and style.</param>
      <param name="rect">The rectangle to draw.</param>
      <param name="radius">The radius of rectangle corners.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the specified formatting attributes.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
      <param name="format">StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
      <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the specified formatting attributes.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="foreBrush">Brush that determines the color and texture of the drawn text.</param>
      <param name="bounds">Rectangle structure that specifies the location of the drawn text.</param>
      <param name="strFormat">StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>
        <para>Draws a text string at the specified position using the specified font, color and format.</para>
      </summary>
      <param name="s">A <see cref="T:System.String"/> value representing the text to be drawn.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws a string with custom parameters.</para>
      </summary>
      <param name="s">Text to draw.</param>
      <param name="font">The text font.</param>
      <param name="brush">The Brush to paint the text string.</param>
      <param name="bounds">Specifies the text string location.</param>
      <param name="strFormatInfo">A StringFormatInfo object that stores line spacing, alignment, and other formatting setting for the string.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="bounds">RectangleF structure that specifies the location of the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="format">StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified Brush and Font objects.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="brush">Brush that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the specified formatting attributes.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="color">Color of the drawn text.</param>
      <param name="bounds">Rectangle structure that specifies the location of the drawn text.</param>
      <param name="strFormatInfo">StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the specified formatting attributes.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="color">Color of the drawn text.</param>
      <param name="bounds">Rectangle structure that specifies the location of the drawn text.</param>
      <param name="strFormatInfo">StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,DevExpress.Utils.StringFormatInfo)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the specified formatting attributes.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="foreColor">Color of the drawn text.</param>
      <param name="bounds">RectangleF structure that specifies the location of the drawn text.</param>
      <param name="format">StringFormatInfo that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat.</para>
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">Font that defines the text format of the string.</param>
      <param name="foreColor">Color of the drawn text.</param>
      <param name="bounds">RectangleF structure that specifies the location of the drawn text.</param>
      <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawSvgImage(DevExpress.Utils.Svg.SvgImage,System.Drawing.Point,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable{System.Single})">
      <summary>
        <para>Draws a vector image at the given coordinates.</para>
      </summary>
      <param name="svgImage">The image to draw.</param>
      <param name="point">Specifies the coordinates of the drawn image.</param>
      <param name="svgPalette">An object that retrieves vector skin palettes. Vector image colors are slightly adjusted depending on the active palette.</param>
      <param name="forcedScaleFactor">The relation of the final image size to the original size of the source image.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawSvgImage(DevExpress.Utils.Svg.SvgImage,System.Drawing.Point,DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Draws a vector image at the given coordinates.</para>
      </summary>
      <param name="svgImage">The vector image to draw.</param>
      <param name="point">A Point structure that specifies the coordinates for the drawn image.</param>
      <param name="svgPalette">An object that retrieves vector skin palettes. Vector image colors are slighly adjusted depending on the active palette.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawSvgImage(DevExpress.Utils.Svg.SvgImage,System.Drawing.Rectangle,DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Draws a vector image</para>
      </summary>
      <param name="svgImage">The image to draw.</param>
      <param name="destRect">A Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
      <param name="svgPalette">An object that retrieves vector skin palettes. Vector image colors are slighly adjusted depending on the active palette.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawVString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo,System.Int32)">
      <summary>
        <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.</para>
      </summary>
      <param name="s">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.</param>
      <param name="strFormat">A StringFormatInfo object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.</param>
      <param name="angle">An integer value specifying the angle in degrees at which the text should be drawn.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawVString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Int32)">
      <summary>
        <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.</para>
      </summary>
      <param name="s">A <see cref="T:System.String"/> value which represents the text to be drawn.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.</param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.</param>
      <param name="strFormat">A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.</param>
      <param name="angle">An integer value specifying the angle in degrees at which the text should be drawn.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.EnableDirectXPaint(DevExpress.Utils.DirectXPaint.DirectXPaint)">
      <summary>
        <para>Allows the target painter to utilize the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX</see> API.</para>
      </summary>
      <param name="painter">A DirectXPaint object that is the target painter.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure.</para>
      </summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush"/> object that specifies the characteristics of the fill.</param>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Drawing.Color,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.</param>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <param name="color">Brush that determines the characteristics of the fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPath(System.Drawing.Brush,DevExpress.Utils.Drawing.IDxGraphicsPath)">
      <summary>
        <para>Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</para>
      </summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush"/> object that determines the characteristics of the fill.</param>
      <param name="path">An object that wraps a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object that represents the path to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</para>
      </summary>
      <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
      <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represents the path to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle"/> structure and two radial lines.</para>
      </summary>
      <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
      <param name="rect"><see cref="T:System.Drawing.Rectangle"/> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</para>
      </summary>
      <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</para>
      </summary>
      <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPolygon(System.Drawing.Point[],System.Drawing.Color)">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points specified by Point structures.</para>
      </summary>
      <param name="points">Array of Point structures that represent the vertices of the polygon to fill.</param>
      <param name="color">A Color structure that specifies the color of the fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPolygon(System.Drawing.PointF[],System.Drawing.Color)">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points specified by PointF structures.</para>
      </summary>
      <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
      <param name="color">A Color structure that specifies the color of the fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(DevExpress.Utils.AppearanceObject,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="appearanceObject">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object specifying the background color used to fill the rectangle.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the rectangle to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</para>
      </summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush"/> object which represents the brush used to fill the rectangle.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure.</para>
      </summary>
      <param name="brush">A <see cref="T:System.Drawing.Brush"/> object which represents the brush used to fill the rectangle.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the specified rectangular area with the specified color.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value that specifies the filling color.</param>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to be filled.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Color,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that represents the color of this brush used to fill the rectangle.</param>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure which represents the rectangle to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>
        <para>Fills the interiors of multiple rectangles. This method is the HDPI-compatible counterpart of the standard Graphics.FillRectangles method.</para>
      </summary>
      <param name="brush">The brush that specifies fill settings.</param>
      <param name="rects">Rectangles that should be filled.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangles(System.Drawing.Color,System.Drawing.Rectangle[])">
      <summary>
        <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle"/> structures.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.</param>
      <param name="rects">Array of <see cref="T:System.Drawing.Rectangle"/> structures that represent the rectangles to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangles(System.Drawing.Color,System.Drawing.RectangleF[])">
      <summary>
        <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF"/> structures.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.</param>
      <param name="rects">Array of   <see cref="T:System.Drawing.RectangleF"/> structures that represent the rectangles to fill.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRoundedRectangle(System.Drawing.Color,System.Drawing.Rectangle,DevExpress.Utils.Drawing.CornerRadius)">
      <summary>
        <para>Draws a rectangle with rounded corners and fills it with the specified color.</para>
      </summary>
      <param name="color">The rectangle color.</param>
      <param name="rect">The rectangle to draw.</param>
      <param name="radius">The radius of rectangle corners.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetFont(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>
        <para>Gets a font object with the specified settings.</para>
      </summary>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object whose settings specify the desired font’s typeface and size.</param>
      <param name="fontStyle">A bitwise combination of <see cref="T:System.Drawing.Font"/> enumeration values specifying the desired font style.</param>
      <returns>A <see cref="T:System.Drawing.Font"/> object representing a font with the specified settings.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Int32)">
      <summary>
        <para>Returns a linear gradient brush with the specified settings.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.</param>
      <param name="startColor">A <see cref="T:System.Drawing.Color"/> object that represents the starting color for the gradient.</param>
      <param name="endColor">A <see cref="T:System.Drawing.Color"/> object that represents the ending color for the gradient.</param>
      <param name="mode">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient’s orientation.</param>
      <param name="blendCount">An integer value specifying the number of blend patterns for the brush.</param>
      <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the requested linear gradient brush (typically a System.Drawing.Drawing2D.LinearGradientBrush object).</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
        <para>Returns a linear gradient brush with specified settings.</para>
      </summary>
      <param name="rect">A System.Drawing.Rectangle structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.</param>
      <param name="startColor">A System.Drawing.Color object that represents the starting color for the gradient.</param>
      <param name="endColor">A System.Drawing.Color object that represents the ending color for the gradient.</param>
      <param name="mode">A System.Drawing.Drawing2D.LinearGradientMode enumeration value specifying the gradient orientation.</param>
      <returns>A System.Drawing.Brush descendant representing the requested linear gradient brush (typically a System.Drawing.Drawing2D.LinearGradientBrush object).</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(System.Drawing.Color,System.Int32)">
      <summary>
        <para>Returns a pen with specified settings.</para>
      </summary>
      <param name="color">A System.Drawing.Color object specifying the pen color.</param>
      <param name="width">An integer value specifying the pen width.</param>
      <returns>A System.Drawing.Pen object representing the requested pen.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(System.Drawing.Color)">
      <summary>
        <para>Returns the pixel-wide pen with a specified color.</para>
      </summary>
      <param name="color">A System.Drawing.Color object specifying the pen color.</param>
      <returns>A System.Drawing.Pen object representing the requested pen.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetSolidBrush(System.Drawing.Color)">
      <summary>
        <para>Gets a solid brush with specified parameters.</para>
      </summary>
      <param name="color">A System.Drawing.Color object specifying the brush color.</param>
      <returns>A System.Drawing.Brush descendant representing the requested brush (typically a System.Drawing.SolidBrush object).</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetTransform">
      <summary>
        <para>Returns a copy of the geometric world transformation for the contained <see cref="T:System.Drawing.Graphics"/> object.</para>
      </summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix"/> that represents the geometric world transformation for the contained <see cref="T:System.Drawing.Graphics"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetTransformMatrix">
      <summary>
        <para>Returns the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.TransformMatrix">GraphicsCache.TransformMatrix</see> property value.</para>
      </summary>
      <returns>The Matrix that is the geometric world transformation for this GraphicsCache object.</returns>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">
      <summary>
        <para>Gets an object that serves as the painting surface and provides painting facilities.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Graphics"/> object providing painting facilities.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.InterpolationMode">
      <summary>
        <para>Gets or sets the interpolation mode associated with the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see>.</para>
      </summary>
      <value>One of the <see cref="T:System.Drawing.Drawing2D.InterpolationMode"/> values.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.IsNeedDrawRect(System.Drawing.Rectangle)">
      <summary>
        <para>Returns whether the region which is bounded by the specified rectangle needs to be redrawn.</para>
      </summary>
      <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the rectangle to test.</param>
      <returns>true if the specified rectangle needs to be redrawn; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.IsNeedDrawRectEx(System.Drawing.Rectangle)">
      <summary>
        <para>Returns whether the region which is bounded by the specified rectangle needs to be redrawn, taking into account clip regions, if any.</para>
      </summary>
      <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the rectangle to test.</param>
      <returns>true if the specified rectangle needs to be redrawn; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Offset">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Point"/> structure.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.OffsetEx">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Point"/> structure.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Paint">
      <summary>
        <para>Gets or sets a DevExpress.Utils.Paint.XPaint object.</para>
      </summary>
      <value>A DevExpress.Utils.Paint.XPaint object.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">
      <summary>
        <para>Gets an object providing information for painting.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.DXPaintEventArgs object that contains data used to perform painting.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.PixelOffsetMode">
      <summary>
        <para>Gets or set a value specifying how pixels are offset during rendering of the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see>.</para>
      </summary>
      <value>One of the <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode"/> values.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.PrepareClipRegion">
      <summary>
        <para>Retrieves clip regions from a display device context.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.ResetMatrix">
      <summary>
        <para>Resets a Matrix object used to perform geometric transformations.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.ResetTransform">
      <summary>
        <para>Resets the world transformation matrix of this Graphics to the identity matrix. See the <see cref="M:System.Drawing.Graphics.ResetTransform"/> method description for more details.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Restore(System.Object)">
      <summary>
        <para>Restores the GraphicsCache to the required state. See the <see cref="Overload:System.Drawing.Graphics.Restore"/> method description for more information.</para>
      </summary>
      <param name="state">The state to restore this GraphicsCache to.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified rotation to the transformation matrix of this GraphicsCache in the specified order.</para>
      </summary>
      <param name="angle">The rotation angle.</param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder"/> value that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Save">
      <summary>
        <para>Saves the current state of this GraphicsCache object.</para>
      </summary>
      <returns>Stores the current GraphicsCache state.</returns>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI">
      <summary>
        <para>Gets or sets the ScaleHelper object that adjusts font sizes and drawing API values according to the current DPI.</para>
      </summary>
      <value>The ScaleHelper object that adjusts font sizes and drawing API values according to the current DPI.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleFactor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from code.</para>
      </summary>
      <value />
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the scaling operation to the transformation matrix of this GraphicsCache object. See the <see cref="Overload:System.Drawing.Graphics.ScaleTransform"/> method for more information.</para>
      </summary>
      <param name="sx">The scale factor in the X direction.</param>
      <param name="sy">The scale factor in the Y direction.</param>
      <param name="order">Specifies whether the scaling operation is prepended or appended to the transformation matrix.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.SetActiveSkinInfo(DevExpress.LookAndFeel.UserLookAndFeel)">
      <summary>
        <para>Copies the skin information from the LookAndFeel parameter into the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object.</para>
      </summary>
      <param name="lookAndFeel">The object that contains the skin to be saved.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.SetActiveSkinInfo(System.String,System.String)">
      <summary>
        <para>Specifies the active skin and palette.</para>
      </summary>
      <param name="activeSkinName">The name of a current skin.</param>
      <param name="activeSvgPaletteName">The name of a current skin palette.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.SetTransform(DevExpress.Utils.Drawing.IDxMatrix)">
      <summary>
        <para>Sets the specified matrix as the transformation matrix for this GraphicsCache.</para>
      </summary>
      <param name="matrix">A DevExpress.Utils.Drawing.IDxMatrix object that should be used by this GraphicsCache as the transformation matrix.</param>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.SetTransformMatrix(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Sets the specified matrix as the transformation matrix for this GraphicsCache.</para>
      </summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix"/> matrix that should be used by this GraphicsCache as the transformation matrix.</param>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.SmoothingMode">
      <summary>
        <para>Gets or sets the rendering quality for the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see>.</para>
      </summary>
      <value>One of the <see cref="T:System.Drawing.Drawing2D.SmoothingMode"/> values.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.TextRenderingHint">
      <summary>
        <para>Gets or sets the rendering mode for text associated with the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">GraphicsCache.Graphics</see>.</para>
      </summary>
      <value>One of the <see cref="T:System.Drawing.Text.TextRenderingHint"/> values.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.TransformMatrix">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Drawing2D.Matrix"/> object.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.GraphicsCache.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the translation to the transformation matrix to change the origin of the coordinate system. See the <see cref="Overload:System.Drawing.Graphics.TranslateTransform"/> method description for more information.</para>
      </summary>
      <param name="dx">The X-coordinate of the translation.</param>
      <param name="dy">The y-coordinate of the translation.</param>
      <param name="order">Specifies whether the translation is prepended or appended to the transformation matrix.</param>
    </member>
    <member name="P:DevExpress.Utils.Drawing.GraphicsCache.UseDirectXPaint">
      <summary>
        <para>Returns whether or not the application currently uses the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see>.</para>
      </summary>
      <value>true if the application currently uses the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see>; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.Drawing.HyperlinkClickMode">
      <summary>
        <para>Contains values that specify how users can activate hyperlinks embedded in control headers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.HyperlinkClickMode.Click">
      <summary>
        <para>A hyperlink is activated on a mouse click.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.HyperlinkClickMode.CtrlClick">
      <summary>
        <para>A hyperlink is activated on a mouse click when the CTRL key is pressed down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.HyperlinkClickMode.Default">
      <summary>
        <para>The same as the None option.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.HyperlinkClickMode.None">
      <summary>
        <para>Do not activate a hyperlink on a mouse pointer hover or click event.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Drawing.ImageLayoutMode">
      <summary>
        <para>Specifies how an image can be aligned within another object.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.BottomCenter">
      <summary>
        <para>An image is vertically aligned at the bottom, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.BottomLeft">
      <summary>
        <para>An image is vertically aligned at the bottom, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.BottomRight">
      <summary>
        <para>An image is vertically aligned at the bottom, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.Default">
      <summary>
        <para>The default layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.MiddleCenter">
      <summary>
        <para>An image is horizontally and vertically aligned at the center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.MiddleLeft">
      <summary>
        <para>An image is vertically aligned at the center, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.MiddleRight">
      <summary>
        <para>An image is vertically aligned at the center, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.Squeeze">
      <summary>
        <para>An image is displayed as is, if its actual size is smaller than the size of the container. If the image size is larger than the container’s size, the image is shrunk proportionally to fit the container’s bounds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.Stretch">
      <summary>
        <para>An image is stretched to fill the available client area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.StretchHorizontal">
      <summary>
        <para>An image is stretched horizontally.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.StretchVertical">
      <summary>
        <para>An image is stretched vertically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.TopCenter">
      <summary>
        <para>An image is vertically aligned at the top, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.TopLeft">
      <summary>
        <para>An image is vertically aligned at the top, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.TopRight">
      <summary>
        <para>An image is vertically aligned at the top, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.ZoomInside">
      <summary>
        <para>Zooms an image proportionally so that it’s displayed within the client area in its entirety.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.ZoomOutside">
      <summary>
        <para>Zooms an image proportionally, making its smaller side (width or height) to be displayed entirely. The image is centered, so the larger side (height or width) will not be displayed in its entirety.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Drawing.ProgressAnimationMode">
      <summary>
        <para>Contains values that specify how progress is indicated on progress bar controls.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Cycle">
      <summary>
        <para>A control repeatedly scrolls the block from one edge to another.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Default">
      <summary>
        <para>The same, as the <see cref="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Cycle">ProgressAnimationMode.Cycle</see> option.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.PingPong">
      <summary>
        <para>A control scrolls the block from one edge to another, by moving the block back when it reaches any control’s edge.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Drawing.StubGlyphOptions">
      <summary>
        <para>Provides appearance and behavior settings for <see href="https://docs.devexpress.com/WindowsForms/117207/controls-and-libraries/ribbon-bars-and-menu/common-features/stub-glyphs">stub glyphs</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Drawing.StubGlyphOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.StubGlyphOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.AllowStubGlyphs">
      <summary>
        <para>Gets or sets whether or not items that have no images should display stub glyphs.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not items that have no images should display stub glyphs.
The <see cref="F:DevExpress.Utils.DefaultBoolean.Default">DefaultBoolean.Default</see> value is equal to <see cref="F:DevExpress.Utils.DefaultBoolean.False">DefaultBoolean.False</see>.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.StubGlyphOptions.Assign(DevExpress.Utils.Drawing.StubGlyphOptions)">
      <summary>
        <para>Copies all settings of the target <see cref="T:DevExpress.Utils.Drawing.StubGlyphOptions"/> object to this <see cref="T:DevExpress.Utils.Drawing.StubGlyphOptions"/> object.</para>
      </summary>
      <param name="options">A target <see cref="T:DevExpress.Utils.Drawing.StubGlyphOptions"/> object whose settings are to be copied.</param>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.CaseMode">
      <summary>
        <para>Gets or sets the case mode for stub glyph captions.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.GlyphTextCaseMode enumerator value that specifies the case mode for stub glyph captions.</value>
    </member>
    <member name="E:DevExpress.Utils.Drawing.StubGlyphOptions.Changed">
      <summary>
        <para>Occurs whenever the <see cref="T:DevExpress.Utils.Drawing.StubGlyphOptions"/> object changes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.ColorMode">
      <summary>
        <para>Gets or sets the stub glyphs’ color scheme.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.GlyphColorMode enumerator value that specifies the stub glyphs’ color scheme.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.CornerRadius">
      <summary>
        <para>Gets or sets the corner radius for rectangular stub glyphs.</para>
      </summary>
      <value>An Int32 value that is the corner radius for rectangular stub glyphs.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.DefaultFont">
      <summary>
        <para>Provides access to the default stub glyph caption font.</para>
      </summary>
      <value>A Font object applied to stub glyph captions by default.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.Font">
      <summary>
        <para>Gets or sets the font that should be applied to stub glyph captions.</para>
      </summary>
      <value>A Font object that should be applied to stub glyph captions.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.HorizontalAlignment">
      <summary>
        <para>Gets or sets the horizontal alignment of stub glyphs’ captions.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.StringAlignment"/> enumerator value that specifies the horizontal alignment of stub glyphs’ captions.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.LetterCount">
      <summary>
        <para>Gets or sets the number of initial letters of a bar item caption that should be displayed by this item’s stub glyph.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.GlyphTextSymbolCount enumerator value that allows you to choose between one and two characters.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.Padding">
      <summary>
        <para>Gets or sets the distance between glyph borders and inner text content.</para>
      </summary>
      <value>A Padding structure that is the distance between glyph borders and inner text content.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.RandomizeColors">
      <summary>
        <para>Gets or sets whether or not different hues of the same color are allowed.</para>
      </summary>
      <value>true, to allow different hues of the same color; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.Drawing.StubGlyphOptions.ShouldSerializeOptions(System.ComponentModel.IComponent)">
      <summary>
        <para>Tests whether or not the <see cref="T:DevExpress.Utils.Drawing.StubGlyphOptions"/> should be persisted.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.Type">
      <summary>
        <para>Gets or sets the stub glyph shape.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.GlyphBackgroundType enumerator value that specifies the stub glyph shape.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.UseFont">
      <summary>
        <para>Gets or sets whether font settings stored in the <see cref="P:DevExpress.Utils.Drawing.StubGlyphOptions.Font">StubGlyphOptions.Font</see> section should be applied to stub glyphs’ captions.</para>
      </summary>
      <value>true if font settings stored in the <see cref="P:DevExpress.Utils.Drawing.StubGlyphOptions.Font">StubGlyphOptions.Font</see> section should be applied to stub glyphs’ captions; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.VerticalAlignment">
      <summary>
        <para>Gets or sets the vertical alignment of stub glyphs’ captions.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.StringAlignment"/> enumerator value that specifies the vertical alignment of stub glyphs’ captions.</value>
    </member>
    <member name="T:DevExpress.Utils.DXMouseEventArgs">
      <summary>
        <para>Provides data for mouse events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DXMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> class.</para>
      </summary>
      <param name="buttons">A <see cref="T:System.Windows.Forms.MouseButtons"/> enumeration value that defines which mouse button was pressed. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Button"/> property.</param>
      <param name="clicks">An integer value which specifies the number of times the mouse button was pressed and released. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Clicks"/> property.</param>
      <param name="x">An integer value which specifies the x-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.X"/> property.</param>
      <param name="y">An integer value which specifies the y-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Y"/> property.</param>
      <param name="delta">An integer value which specifies a signed count of the number of detents the mouse wheel has rotated. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Delta"/> property.</param>
      <param name="handled">true if the event hasn’t been handled by a control; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Utils.DXMouseEventArgs.Handled">DXMouseEventArgs.Handled</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.DXMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> class with the specified parameters.</para>
      </summary>
      <param name="buttons">A <see cref="T:System.Windows.Forms.MouseButtons"/> enumeration value that defines which mouse button was pressed. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Button"/> property.</param>
      <param name="clicks">An integer value which specifies the number of times the mouse button was pressed and released. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Clicks"/> property.</param>
      <param name="x">An integer value which specifies the x-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.X"/> property.</param>
      <param name="y">An integer value which specifies the y-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Y"/> property.</param>
      <param name="delta">An integer value which specifies a signed count of the number of detents the mouse wheel has rotated. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Delta"/> property.</param>
    </member>
    <member name="M:DevExpress.Utils.DXMouseEventArgs.GetMouseArgs(System.Windows.Forms.Control,System.EventArgs)">
      <summary>
        <para>Converts the <see cref="T:System.Windows.Forms.MouseEventArgs"/> object passed as a parameter to a <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object.</para>
      </summary>
      <param name="control">A <see cref="T:System.Windows.Forms.Control"/> descendant.</param>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object which contains data for the mouse events.</param>
      <returns>A <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object which provides data for the mouse events.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXMouseEventArgs.GetMouseArgs(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Converts the <see cref="T:System.Windows.Forms.MouseEventArgs"/> object passed as a parameter to a <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object.</para>
      </summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object which contains data for the MouseUp, MouseDown, and MouseMove events.</param>
      <returns>A <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object which provides data for the mouse events.</returns>
    </member>
    <member name="P:DevExpress.Utils.DXMouseEventArgs.Handled">
      <summary>
        <para>Gets or sets a value specifying whether an event has been handled.</para>
      </summary>
      <value>true if the event hasn’t been handled by a control; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.DXMouseEventArgs.IsHMouseWheel">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DXMouseEventArgs.IsMouseEvent">
      <summary>
        <para>Gets whether these event arguments provide data for the MouseUp, MouseDown, and MouseMove events.</para>
      </summary>
      <value>true if this object is of the MouseEventArgs type; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.DXMouseEventArgs.Sync">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.EditorShowMode">
      <summary>
        <para>Enumerates values that specify whether a cell editor is activated when the left mouse button is pressed or released, and whether the cell should be focused to activate the editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.EditorShowMode.Click">
      <summary>
        <para>A cell editor is activated when the left mouse button is released in a focused cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.EditorShowMode.Default">
      <summary>
        <para>The mode is not specified explicitly. The actual mode depends on the control and its settings. See remarks in the following topic for more information: <see cref="T:DevExpress.Utils.EditorShowMode">EditorShowMode Enum</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.EditorShowMode.MouseDown">
      <summary>
        <para>A cell editor is activated when the left mouse button is pressed regardless of whether the cell is focused.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.EditorShowMode.MouseDownFocused">
      <summary>
        <para>A cell editor is activated when the left mouse button is pressed in a focused cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.EditorShowMode.MouseUp">
      <summary>
        <para>A cell editor is activated when the left mouse button is released regardless of whether the cell is focused.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.Filtering">
      <summary>
        <para>Contains classes used to create a filtering UI.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Filtering.FilteringUIContext">
      <summary>
        <para>Generates a filtering UI for a data-aware control (Data Grid, Tree List, Chart Control, etc.) or Data Model.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.FlyoutPanel">
      <summary>
        <para>The floating panel that is displayed and hidden using an animation effect. See <see href="https://docs.devexpress.com/WindowsForms/114578/controls-and-libraries/messages-notifications-and-dialogs/flyout-panel">Flyout Panel</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.FlyoutPanel"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.Anchor">
      <summary>
        <para>This property is not supported by the <see cref="T:DevExpress.Utils.FlyoutPanel"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.AnimationRate">
      <summary>
        <para>Gets or sets the speed of the animation used to show and hide the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
      <value>An integer value specifying the rate of the animation used to show and hide the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</value>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.BeforeHide">
      <summary>
        <para>Fires when the panel is about to hide. Allows you to enable the e.Cancel parameter to keep this panel visible.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.BeforeShow">
      <summary>
        <para>Fires immediately prior to the panel showing up. Allows you to enable the e.Cancel parameter to prevent this panel from being displayed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.ButtonChecked">
      <summary>
        <para>Fires when a check button within the <see href="https://docs.devexpress.com/WindowsForms/114578/controls-and-libraries/messages-notifications-and-dialogs/flyout-panel">button panel</see> of this <see cref="T:DevExpress.Utils.FlyoutPanel"/> is checked.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.ButtonClick">
      <summary>
        <para>Occurs when a button in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>‘s built-in button panel is clicked.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.ButtonUnchecked">
      <summary>
        <para>Fires when a check button within the <see href="https://docs.devexpress.com/WindowsForms/114578/controls-and-libraries/messages-notifications-and-dialogs/flyout-panel">button panel</see> of this <see cref="T:DevExpress.Utils.FlyoutPanel"/> is unchecked.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.Dock">
      <summary>
        <para>This property is not supported by the <see cref="T:DevExpress.Utils.FlyoutPanel"/> class.</para>
        <para>Use the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property to specify the position at which the panel is displayed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.FlyoutPanelState">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.GetCurrentObjectInfo">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.GetGlyphSkinningColor(DevExpress.XtraEditors.ButtonPanel.BaseButtonInfo)">
      <summary>
        <para>Returns a color for the glyph skinning feature. This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="info">A BaseButtonInfo object.</param>
      <returns>A System.Drawing.Color structure.</returns>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.Hidden">
      <summary>
        <para>Fires after the panel has been hidden.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.Hide">
      <summary>
        <para>This method is not supported by the <see cref="T:DevExpress.Utils.FlyoutPanel"/> class. Use the FlyoutPanel.HidePopup method instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.HideBeakForm">
      <summary>
        <para>Hides the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> displayed as a beak form using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.HideBeakForm(System.Boolean)">
      <summary>
        <para>Hides the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> displayed as a beak form immediately or using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
      <param name="immediate">true if the beak form should be hidden immediately; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.HidePopup">
      <summary>
        <para>Hides the <see cref="T:DevExpress.Utils.FlyoutPanel"/> using an animation effect specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">FlyoutPanelOptions.AnimationType</see> property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.HidePopup(System.Boolean)">
      <summary>
        <para>Hides the <see cref="T:DevExpress.Utils.FlyoutPanel"/> immediately or using an animation effect specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">FlyoutPanelOptions.AnimationType</see> property.</para>
      </summary>
      <param name="immediate">true, to hide the panel immediately; false to hide the panel using an animation effect.</param>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.Hiding">
      <summary>
        <para>Fires when a panel is about to be hidden.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.IsPopupOpen">
      <summary>
        <para>Gets whether the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> is displayed.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> is displayed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.MinimumSize">
      <summary>
        <para>Gets or sets the minimum size of the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> object that specifies the minimum size of the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.Options">
      <summary>
        <para>Contains the FlyoutPanel’s view and behavior options.</para>
      </summary>
      <value>The FlyoutPanel’s view and behavior options.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.OptionsBeakPanel">
      <summary>
        <para>Provides access to the settings applied to the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> displayed as a beak form.</para>
      </summary>
      <value>A BeakPanelOptions object representing the settings applied to the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> displayed as a beak form.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.OptionsButtonPanel">
      <summary>
        <para>Provides access to the set of options applied to the built-in button panel.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.FlyoutPanelButtonOptions"/> object representing a set of options applied to the built-in button panel.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.OwnerControl">
      <summary>
        <para>Gets or sets the FlyoutPanel’s owner, relative to which the panel is displayed.</para>
      </summary>
      <value>The FlyoutPanel’s owner, relative to which the panel is displayed.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.ParentForm">
      <summary>
        <para>Gets or sets the form that owns this <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
      <value>A Form that owns this <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</value>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.Show">
      <summary>
        <para>This method is not supported by the <see cref="T:DevExpress.Utils.FlyoutPanel"/> class. Use the FlyoutPanel.ShowPopup method instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Boolean)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form immediately or using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
      <param name="immediate">true if the beak form should be displayed immediately; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean,System.Windows.Forms.Control,System.Drawing.Point,DevExpress.Utils.IFlyoutPanelPopupController)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form at the specified position with the specified offset using an animation effect specified by the OptionsBeakForm.AnimationType property or immediately.</para>
      </summary>
      <param name="location">A System.Drawing.Point structure that specifies the location on the screen where the beak form should be displayed.</param>
      <param name="immediate">true if the beak form should be displayed immediately; otherwise, false.</param>
      <param name="ownerControl">A Control that owns the current <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</param>
      <param name="offset">A System.Drawing.Point structure by which the location specified with the loc parameter should be translated.</param>
      <param name="controller">An IFlyoutPanelPopupController implementation that specifies the beak form behavior. For instance, whether to automatically close the opened beak form on a mouse move depending on the mouse coordinates relative to the form location.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean,System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form at the specified position with the specified offset using an animation effect specified by the OptionsBeakForm.AnimationType property or immediately.</para>
      </summary>
      <param name="location">A System.Drawing.Point structure that specifies the location on the screen where the beak form should be displayed.</param>
      <param name="immediate">true if the beak form should be displayed immediately; otherwise, false.</param>
      <param name="ownerControl">A Control that owns the current <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</param>
      <param name="offset">A System.Drawing.Point structure by which the location specified with the loc parameter should be translated.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean,System.Windows.Forms.Control)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form at the specified position using an animation effect specified by the OptionsBeakForm.AnimationType property or immediately.</para>
      </summary>
      <param name="location">A System.Drawing.Point object that specifies the location on the screen where the beak form should be displayed.</param>
      <param name="immediate">true if the beak form should be displayed immediately; otherwise, false.</param>
      <param name="ownerControl">A Control that owns the current <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form at the specified position using an animation effect specified by the OptionsBeakForm.AnimationType property or immediately.</para>
      </summary>
      <param name="location">A System.Drawing.Point object that specifies the location on the screen where the beak form should be displayed.</param>
      <param name="immediate">true if the beak form should be displayed immediately; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form at the specified position using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
      <param name="location">A System.Drawing.Point object that specifies the location on the screen where the beak form should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Rectangle,System.Drawing.Point,System.Boolean,System.Windows.Forms.Control,System.Drawing.Point,DevExpress.Utils.IFlyoutPanelPopupController)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form relative to the specified rectangle with the specified offset using an animation effect specified by the OptionsBeakForm.AnimationType property or immediately.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies an area on the screen relative to which a beak form should be displayed.</param>
      <param name="location">A <see cref="T:System.Drawing.Point"/> object that specifies the location on the screen where a beak form should be displayed if the rect parameter is Rectangle.Empty.</param>
      <param name="immediate">true if the beak form should be displayed immediately; otherwise, false.</param>
      <param name="ownerControl">A Control that owns the current <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</param>
      <param name="offset">A System.Drawing.Point structure by which the location specified with the loc parameter should be translated.</param>
      <param name="controller">An IFlyoutPanelPopupController implementation that specifies the beak form behavior. For instance, whether to automatically close the opened beak form on a mouse move depending on the mouse coordinates relative to the form location.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Rectangle,System.Drawing.Point)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form relative to the specified rectangle using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies an area on the screen relative to which a beak form should be displayed.</param>
      <param name="location">A <see cref="T:System.Drawing.Point"/> object that specifies the location on the screen where a beak form should be displayed if the rect parameter is Rectangle.Empty.</param>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Rectangle)">
      <summary>
        <para>Displays the current <see cref="T:DevExpress.Utils.FlyoutPanel"/> as a beak form relative to the specified rectangle using an animation effect specified by the OptionsBeakForm.AnimationType property.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies an area on the screen relative to which a beak form should be displayed.</param>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.Showing">
      <summary>
        <para>Fires when the panel is about to be displayed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.FlyoutPanel.Shown">
      <summary>
        <para>Fires after the panel has been displayed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowPopup">
      <summary>
        <para>Displays the panel at the position specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property using an animation effect specified  by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">FlyoutPanelOptions.AnimationType</see> property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanel.ShowPopup(System.Boolean)">
      <summary>
        <para>Displays the panel at the position specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property immediately or using an animation effect specified  by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">FlyoutPanelOptions.AnimationType</see> property.</para>
      </summary>
      <param name="immediate">true if the panel is displayed immediately (without an animation); otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.ToolTipController">
      <summary>
        <para>Gets or sets the tooltip controller component that controls the appearance, position and content of tooltips displayed by buttons in the button panel.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which controls the appearance and behavior of tooltips displayed by buttons in the button panel.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanel.Visible">
      <summary>
        <para>This property is not supported by the <see cref="T:DevExpress.Utils.FlyoutPanel"/> class. Use the FlyoutPanel.ShowPopup and FlyoutPanel.HidePopup methods to control the panel visibility.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.FlyoutPanelButtonOptions">
      <summary>
        <para>Contains miscellaneous settings applied to a <see cref="T:DevExpress.Utils.FlyoutPanel"/>‘s built-in button panel.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanelButtonOptions.#ctor(DevExpress.Utils.FlyoutPanel)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.FlyoutPanelButtonOptions"/> class with the specified settings.</para>
      </summary>
      <param name="owner">A <see cref="T:DevExpress.Utils.FlyoutPanel"/> that owns the current <see cref="T:DevExpress.Utils.FlyoutPanelButtonOptions"/>.</param>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.AllowGlyphSkinning">
      <summary>
        <para>Gets or sets whether button glyphs are painted based on the <see cref="T:DevExpress.Utils.FlyoutPanel"/>‘s foreground color.</para>
      </summary>
      <value>true if button glyphs are painted based on the <see cref="T:DevExpress.Utils.FlyoutPanel"/>‘s foreground color; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.AppearanceButton">
      <summary>
        <para>Provides access to appearance settings used to paint the <see cref="T:DevExpress.Utils.FlyoutPanel"/>‘s buttons in different visual states.</para>
      </summary>
      <value>A DevExpress.XtraEditors.ButtonsPanelControl.ButtonsPanelControlAppearance object that stores appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ButtonPanelContentAlignment">
      <summary>
        <para>Gets or sets the alignment of buttons within the button panel.</para>
      </summary>
      <value>A System.Drawing.ContentAlignment enumeration value that specifies the alignment of buttons within the button panel.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ButtonPanelHeight">
      <summary>
        <para>Gets or sets the built-in button panel’s height.</para>
      </summary>
      <value>A <see cref="T:System.Int32"/> value specifying the button panel’s height, in pixels.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ButtonPanelLocation">
      <summary>
        <para>Gets or sets the location of the built-in button panel in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
      <value>A FlyoutPanelButtonPanelLocation enumeration value specifying the location of the built-in button panel in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.Buttons">
      <summary>
        <para>Provides access to the collection of buttons displayed in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>‘s built-in button panel.</para>
      </summary>
      <value>A BaseButtonCollection object representing a button collection.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.Images">
      <summary>
        <para>Gets or sets the source of images that can be displayed within buttons.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> that is an image collection providing images for buttons.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.Padding">
      <summary>
        <para>Gets or sets the amount of space around the button panel.</para>
      </summary>
      <value>A System.Windows.Forms.Padding structure that specifies the amount of space around the button panel.</value>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanelButtonOptions.Reset">
      <summary>
        <para>Resets settings applied to the built-in button panel to the default values. This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanelButtonOptions.ShouldSerialize">
      <summary>
        <para>Tests whether the <see cref="T:DevExpress.Utils.FlyoutPanelButtonOptions"/> object should be persisted.</para>
      </summary>
      <returns>true if the object should be persisted; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ShowButtonPanel">
      <summary>
        <para>Gets or sets whether the built-in button panel is displayed in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
      <value>true if the built-in button panel is displayed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.FlyoutPanelOptions">
      <summary>
        <para>Contains view and behavior options for a <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FlyoutPanelOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.FlyoutPanelOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">
      <summary>
        <para>Gets or sets the position at which the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is displayed relative to its owner (<see cref="P:DevExpress.Utils.FlyoutPanel.OwnerControl">FlyoutPanel.OwnerControl</see>).</para>
      </summary>
      <value>The position at which the FlyoutPanel is displayed relative to its owner.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">
      <summary>
        <para>Gets or sets the animation effect used to display and hide the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
      <value>The animation effect used to display and hide the FlyoutPanel.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnHidingOwner">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is automatically closed when the owner control is hidden.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is automatically closed when the owner control is hidden; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnOuterClick">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is hidden on clicking outside the panel’s bounds.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is hidden on clicking outside the panel’s bounds; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultAnchorType">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultAnimationType">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">FlyoutPanelOptions.AnimationType</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultCloseOnHidingOwner">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnHidingOwner">FlyoutPanelOptions.CloseOnHidingOwner</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultCloseOnOuterClick">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnOuterClick">FlyoutPanelOptions.CloseOnOuterClick</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultHorzIndent">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent">FlyoutPanelOptions.HorzIndent</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultLocation">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.Location">FlyoutPanelOptions.Location</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultVertIndent">
      <summary>
        <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent">FlyoutPanelOptions.VertIndent</see> property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent">
      <summary>
        <para>Gets or sets the panel’s horizontal indent from the owner’s top left or top right corner when the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property is set to TopLeft or TopRight.</para>
      </summary>
      <value>The panel’s horizontal indent from a corner, in pixels.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.Location">
      <summary>
        <para>Gets or sets the display position of the <see cref="T:DevExpress.Utils.FlyoutPanel"/> when the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property is set to Manual. The position is relative to the owner’s top left corner.</para>
      </summary>
      <value>The display position of the FlyoutPanel when the AnchorType property is set to Manual, in pixels.</value>
    </member>
    <member name="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent">
      <summary>
        <para>Gets or sets the panel’s vertical indent from the owner’s top left or top right corner when the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">FlyoutPanelOptions.AnchorType</see> property is set to TopLeft or TopRight.</para>
      </summary>
      <value>The panel’s vertical indent from a corner, in pixels.</value>
    </member>
    <member name="T:DevExpress.Utils.GroupElementLocation">
      <summary>
        <para>Contains values that specify how an element is displayed relative to a text label within a group control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.GroupElementLocation.AfterText">
      <summary>
        <para>Displays an element after a text label.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.GroupElementLocation.BeforeText">
      <summary>
        <para>Displays an element before a text label.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.GroupElementLocation.Default">
      <summary>
        <para>Specifies the default position of an element relative to a text label.</para>
        <para>Currently, the Default option is equivalent to the BeforeText option.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.HideException">
      <summary>
        <para>Prevents default actions when handling specific events. This class supports internal infrastructure and is not intended for use in code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.HideException.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Utils.HideException"/> class instance.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.HKeyPrefix">
      <summary>
        <para>Provides values that specify whether or not to underline characters that are preceded with an ampersand symbol (&amp;) in certain controls.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HKeyPrefix.Default">
      <summary>
        <para>Underline the character that is preceded by the ampersand symbol (&amp;) when a user presses ALT.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HKeyPrefix.Hide">
      <summary>
        <para>Do not underline the character that is preceded by the ampersand symbol (&amp;).</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HKeyPrefix.None">
      <summary>
        <para>Show the ampersand symbol (&amp;).</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HKeyPrefix.Show">
      <summary>
        <para>Underline the character preceded by the ampersand symbol (&amp;).</para>
        <para />
      </summary>
    </member>
    <member name="N:DevExpress.Utils.Html">
      <summary>
        <para>Exposes classes that allow you to create HTML &amp; CSS templates.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Html.DxHtmlPainterArgs">
      <summary>
        <para>Stores information about a region where an instance of an HTML template <see href="https://docs.devexpress.com/WindowsForms/404153/common-features/html-css-based-desktop-ui/custom-draw-with-html-templates">should be painted</see>. You need to manually create and set up DxHtmlPainterArgs objects only when you paint templates on top of non-DevExpress controls, or DevExpress controls that currently do not support custom-drawn templates.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.DxHtmlPainterArgs"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.Appearance">
      <summary>
        <para>Gets or sets the object that stores appearance-related settings of the parent control.</para>
      </summary>
      <value>Stores appearance-related settings of the parent control.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.Bounds">
      <summary>
        <para>Gets or sets the bounds of a region where an HTML template can be drawn.</para>
      </summary>
      <value>Specifies bounds of a region where an HTML template can be drawn.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.Cache">
      <summary>
        <para>Gets or sets the object that exposes DirectX-compatible drawing methods and stores brushes and pens.</para>
      </summary>
      <value>Stores pens and brushes, and allows you to call drawing methods.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.HtmlImages">
      <summary>
        <para>Gets or sets the collection of images that can be assigned to HTML elements.</para>
      </summary>
      <value>Stores images that can be assigned to HTML elements.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.InteractivityKey">
      <summary>
        <para>Gets or sets the key that identifies this currently painted HTML template instance. You can later check keys to obtain a correct template instance (for example, when you need to pass control mouse events to a template).</para>
      </summary>
      <value>The unique key assigned to the HTML template instance.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.LookAndFeel">
      <summary>
        <para>Gets or sets the object that stores look-and-feel settings of the parent control.</para>
      </summary>
      <value>Stores look-and-feel settings of the parent control.</value>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterArgs.SetFieldValue(System.String,System.Object)">
      <summary>
        <para>Allows you to assign the required data portion to the target HTML element.</para>
      </summary>
      <param name="fieldName">The name of a data field to which the HTML element is bound.</param>
      <param name="value">Data assigned to the HTML element.</param>
    </member>
    <member name="P:DevExpress.Utils.Html.DxHtmlPainterArgs.State">
      <summary>
        <para>This is an internal property that should not be used in your code.</para>
      </summary>
      <value />
    </member>
    <member name="T:DevExpress.Utils.Html.DxHtmlPainterContext">
      <summary>
        <para>Allows you to transfer mouse events from a control to an instance of an HTML template <see href="https://docs.devexpress.com/WindowsForms/404153/common-features/html-css-based-desktop-ui/custom-draw-with-html-templates">painted on top of this control</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterContext.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.DxHtmlPainterContext"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterContext.CalcHitInfo(System.Drawing.Point,System.Object)">
      <summary>
        <para>Returns the hit information about an HTML element located at the given coordinates.</para>
      </summary>
      <param name="point">The coordinates of a point to check. The (0,0) coordinates belong to the top left corner of a template.</param>
      <param name="interactivityKey">The ID that allows you to obtain the specific instance of a custom-drawn template.</param>
      <returns>Contains hit information related to the element that is located underneath the target point.</returns>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterContext.GetCursor(DevExpress.Utils.Html.DxHtmlHitInfo)">
      <summary>
        <para>Returns the cursor assigned to this HTML element in a CSS stylesheet.</para>
      </summary>
      <param name="hitInfo">The hit information related to the target HTML element.</param>
      <returns>The cursor related to the target HTML element.</returns>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterContext.GetCursor(System.Drawing.Point,System.Object)">
      <summary>
        <para>Finds an HTML element located at the given coordinates, and retrieves a cursor associated with this element.</para>
      </summary>
      <param name="pt">The coordinates of a template instance to check.</param>
      <param name="interactivityKey">The ID that allows you to identify the required instance of a custom-drawn template.</param>
      <returns>The cursor associated with this element.</returns>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterContext.OnMouseLeave(System.EventArgs,System.Object)">
      <summary>
        <para>Transfers the MouseLeave mouse event to the target HTML element. This allows the element to change its visual state from “hovered” to “normal”.</para>
      </summary>
      <param name="e">The EventArgs object utilized by the origin MouseLeave event (the MouseLeave event of the parent control).</param>
      <param name="interactivityKey">The ID that allows you to identify the specific instance of a custom-drawn template.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.DxHtmlPainterContext.OnMouseMove(System.Windows.Forms.MouseEventArgs,System.Object)">
      <summary>
        <para>Transfers the MouseMove mouse event to the target HTML element. This allows the element to change its visual state from “normal” to “hovered”.</para>
      </summary>
      <param name="e">The EventArgs object utilized by the origin MouseMove event (the MouseMove event of the parent control).</param>
      <param name="interactivityKey">The ID that allows you to identify the specific instance of a custom-drawn template.</param>
    </member>
    <member name="T:DevExpress.Utils.Html.HtmlTemplate">
      <summary>
        <para>An HTML-CSS template used to render a UI of DevExpress controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.HtmlTemplate"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.#ctor(DevExpress.Utils.Html.HtmlTemplate)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.HtmlTemplate"/> class with settings from the source HtmlTemplate object.</para>
      </summary>
      <param name="source">The object whose settings are used to initialize the newly created object.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.HtmlTemplate"/> class with specified settings.</para>
      </summary>
      <param name="template">The HTML markup used to initialize the <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Template">HtmlTemplate.Template</see> property.</param>
      <param name="styles">The CSS code used to initialize the <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Styles">HtmlTemplate.Styles</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.Assign(DevExpress.Utils.Html.HtmlTemplate)">
      <summary>
        <para>Copies settings of the specified object to the current object.</para>
      </summary>
      <param name="source">The object whose settings are copied to the current object.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.Clone">
      <summary>
        <para>Returns a copy of the current object.</para>
      </summary>
      <returns>A copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplate.IsEmpty">
      <summary>
        <para>Returns whether the <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Template">HtmlTemplate.Template</see> and <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Styles">HtmlTemplate.Styles</see> properties are set to empty values.</para>
      </summary>
      <value>true if the current object has empty <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Template">HtmlTemplate.Template</see> and <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Styles">HtmlTemplate.Styles</see> property values; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplate.Name">
      <summary>
        <para>The object’s name.</para>
      </summary>
      <value>The object’s name.</value>
    </member>
    <member name="E:DevExpress.Utils.Html.HtmlTemplate.PropertyChanged">
      <summary>
        <para>Fires when the <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Template">HtmlTemplate.Template</see> or <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Styles">HtmlTemplate.Styles</see> property is changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.Set(System.String,System.String)">
      <summary>
        <para>Assigns the specified HTML-CSS template to the current object.</para>
      </summary>
      <param name="template">The HTML markup to assign to the <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Template">HtmlTemplate.Template</see> property.</param>
      <param name="styles">The CSS code to assign to the <see cref="P:DevExpress.Utils.Html.HtmlTemplate.Styles">HtmlTemplate.Styles</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplate.ShouldSerialize">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly in your code.</para>
      </summary>
      <returns />
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplate.Styles">
      <summary>
        <para>Gets or sets the template’s CSS code that specifies the appearance settings, size, padding, and layout options of UI elements.</para>
      </summary>
      <value>The template’s CSS code.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplate.Tag">
      <summary>
        <para>Gets or sets an object that stores custom data.</para>
      </summary>
      <value>An object that stores custom data.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplate.Template">
      <summary>
        <para>Gets or sets the template’s HTML markup used to build a control’s UI.</para>
      </summary>
      <value>The template in HTML markup.</value>
    </member>
    <member name="T:DevExpress.Utils.Html.HtmlTemplateCollection">
      <summary>
        <para>The collection of HTML templates that can be used as an external template storage by other controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.HtmlTemplateCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.#ctor(System.Collections.Generic.IList{DevExpress.Utils.Html.HtmlTemplate})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Html.HtmlTemplateCollection"/> class with specified settings.</para>
      </summary>
      <param name="list">The list of templates that should be stored inside this newly created collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.AddRange(DevExpress.Utils.Html.HtmlTemplate[])">
      <summary>
        <para>Adds an array of HTML templates to this collection.</para>
      </summary>
      <param name="templates">The array of templates to add.</param>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.AddTemplate(System.String,System.String)">
      <summary>
        <para>Initializes a new HTML template and places it into this collection.</para>
      </summary>
      <param name="template">A string that stores the entire HTML markup of a newly created template.</param>
      <param name="styles">A string that stores the stylesheet (CSS styles) for the newly created template.</param>
      <returns>The new template created with the given markup and stylesheet strings.</returns>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.Assign(DevExpress.Utils.Html.HtmlTemplateCollection)">
      <summary>
        <para>Copies all settings from the target HtmlTemplateCollection to this HtmlTemplateCollection.</para>
      </summary>
      <param name="collection">The source HtmlTemplateCollection whose settings should be copied.</param>
    </member>
    <member name="E:DevExpress.Utils.Html.HtmlTemplateCollection.Changed">
      <summary>
        <para>Occurs when this HtmlTemplateCollection was modified (for example, a new template was added to this collection).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.Clone">
      <summary>
        <para>Copies this HtmlTemplateCollection.</para>
      </summary>
      <returns>The copy of this HtmlTemplateCollection.</returns>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplateCollection.Container">
      <summary>
        <para>The parent container of this collection.</para>
      </summary>
      <value>The parent of this collection.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplateCollection.Count">
      <summary>
        <para>Returns the total number of HTML templates stored by this HtmlTemplateCollection.</para>
      </summary>
      <value>The number of child HtmlTemplateCollection templates.</value>
    </member>
    <member name="M:DevExpress.Utils.Html.HtmlTemplateCollection.Dispose">
      <summary>
        <para>Disposes of this HtmlTemplateCollection and releases all resources used by it.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Html.HtmlTemplateCollection.Disposed">
      <summary>
        <para>Occurs when this HtmlTemplateCollection is disposed of.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplateCollection.Items">
      <summary>
        <para>Allows you to access templates stored inside this HtmlTemplateCollection.</para>
      </summary>
      <value>The list of templates stored by this collection.</value>
    </member>
    <member name="P:DevExpress.Utils.Html.HtmlTemplateCollection.Site">
      <summary>
        <para>Gets or sets an <see cref="T:System.ComponentModel.ISite"/> for the object.</para>
      </summary>
      <value>The <see cref="T:System.ComponentModel.ISite"/> for the object.</value>
    </member>
    <member name="T:DevExpress.Utils.HyperlinkClickEventArgs">
      <summary>
        <para>Provides data for events that occur when users click a hyperlink.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.HyperlinkClickEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.HyperlinkClickEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.HyperlinkClickEventArgs.#ctor(DevExpress.Utils.Text.Internal.StringBlock,System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.HyperlinkClickEventArgs"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.HyperlinkClickEventArgs.Link">
      <summary>
        <para>Get or sets the URL of the clicked hyperlink.</para>
      </summary>
      <value>The hyperlink value.</value>
    </member>
    <member name="P:DevExpress.Utils.HyperlinkClickEventArgs.MouseArgs">
      <summary>
        <para>Gets or sets mouse coordinates calculated from the toolbar’s upper left corner.</para>
      </summary>
      <value>Mouse coordinates of the clicked link.</value>
    </member>
    <member name="P:DevExpress.Utils.HyperlinkClickEventArgs.Text">
      <summary>
        <para>Gets or sets the hyperlink alt text. Note that modifying this text does not change the item caption.</para>
      </summary>
      <value>The hyperlink alt text.</value>
    </member>
    <member name="T:DevExpress.Utils.ImageCollection">
      <summary>
        <para>The collection of <see cref="T:System.Drawing.Image"/> objects to be used within DevExpress controls.</para>
        <para>The ImageCollection is also used as a part of the <see cref="T:DevExpress.Utils.SharedImageCollection"/> component.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ImageCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ImageCollection"/> class with the specified settings.</para>
      </summary>
      <param name="allowModifyImages">true to permit image modification; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ImageCollection"/> class with the specified container.</para>
      </summary>
      <param name="container">An object that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.AddImage(System.Drawing.Image,System.String)">
      <summary>
        <para>Adds an image with the specified name to the collection.</para>
      </summary>
      <param name="image">An Image to be added to the collection.</param>
      <param name="name">A string that specifies the image’s name. You can then retrieve images by name via the <see cref="P:DevExpress.Utils.ImageCollection.Images">ImageCollection.Images</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.AddImage(System.Drawing.Image)">
      <summary>
        <para>Appends the specified image to the collection.</para>
      </summary>
      <param name="image">The image to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.AddImage(System.Object,System.Drawing.Image)">
      <summary>
        <para>Appends the specified image to the specified list.</para>
      </summary>
      <param name="images">An object that represents the collection of images.</param>
      <param name="image">The image to add to the specified collection.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.AddImageStrip(System.Drawing.Image)">
      <summary>
        <para>Adds the images from the specified horizontal image strip to the collection.</para>
      </summary>
      <param name="image">The image(s) to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.AddImageStripVertical(System.Drawing.Image)">
      <summary>
        <para>Adds the images from the specified vertical image strip to the collection.</para>
      </summary>
      <param name="image">The image(s) to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.AllowDPIAware">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.BeginInit">
      <summary>
        <para>Notifies the image collection that initialization is starting.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.ImageCollection.Changed">
      <summary>
        <para>Fires after the image collection has been changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.Clear">
      <summary>
        <para>Removes all images from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DestroyImageListImage(System.Drawing.Image)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Image,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the image.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.</param>
      <param name="image">The <see cref="T:System.Drawing.Image"/> to draw.</param>
      <param name="images">An object that represents the image source. This parameter is in effect if the image parameter is null.</param>
      <param name="index">An integer value that identifies the image within the collection. This parameter is in effect if the image parameter is null.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.</param>
      <param name="enabled">true, to draw an image in enabled state; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Image,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Draws the image using the specified paint settings.</para>
      </summary>
      <param name="cache">The object that allows you to paint shapes and lines, and stores recently used pens, fonts, and brushes.</param>
      <param name="image">The Image to draw.</param>
      <param name="images">The source of images. This parameter is in effect if the image parameter is null.</param>
      <param name="index">Identifies the image within the images collection. This parameter is in effect if the image parameter is null.</param>
      <param name="bounds">The drawing area.</param>
      <param name="matrix">The color-adjustment matrix that contains coordinates for the RGBAW space.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Image,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified image using the specified paint settings.</para>
      </summary>
      <param name="cache">Provides the paint surface and storage of the recently used pens, fonts and brushes.</param>
      <param name="image">The <see cref="T:System.Drawing.Image"/> to draw.</param>
      <param name="images">An object that represents the source of images. This parameter is in effect if the image parameter is null.</param>
      <param name="index">An integer value that identifies the image within the collection. This parameter is in effect if the image parameter is null.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.</param>
      <param name="attributes">Contains information about how image colors are manipulated during rendering.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Draws the specified image using the specified paint settings.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.</param>
      <param name="images">An object that represents the image source.</param>
      <param name="index">An integer value that identifies the image within the collection.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.</param>
      <param name="palette">An ISvgPaletteProvider object specifying colors used to paint vector images.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean,DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Draws the specified image using the specified paint settings.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.</param>
      <param name="images">An object that represents the image source.</param>
      <param name="index">An integer value that identifies the image within the collection.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.</param>
      <param name="enabled">true, to draw an image in enabled state; otherwise, false.</param>
      <param name="palette">An ISvgPaletteProvider object specifying colors used to paint vector images.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the image.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.</param>
      <param name="images">An object that represents the image source.</param>
      <param name="index">An integer value that identifies the image within the collection.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.</param>
      <param name="enabled">true to draw an image in enabled state; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix,DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Draws the image using the specified paint settings.</para>
      </summary>
      <param name="cache">The object that allows you to paint shapes and lines, and stores recently used pens, fonts, and brushes.</param>
      <param name="images">The source of images.</param>
      <param name="index">Identifies the image from the images collection that should be painted.</param>
      <param name="bounds">The drawing area.</param>
      <param name="matrix">The color-adjustment matrix that contains coordinates for the RGBAW space.</param>
      <param name="palette">Specifies colors used to paint vector images.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Draws the image using the specified paint settings.</para>
      </summary>
      <param name="cache">The object that allows you to paint shapes and lines, and stores recently used pens, fonts, and brushes.</param>
      <param name="images">The source of images.</param>
      <param name="index">Identifies the image from the images collection that should be painted.</param>
      <param name="bounds">The drawing area.</param>
      <param name="matrix">The color-adjustment matrix that contains coordinates for the RGBAW space.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes,DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Draws the specified image using the specified paint settings.</para>
      </summary>
      <param name="cache">Provides the paint surface and storage of the recently used pens, fonts and brushes.</param>
      <param name="images">An object that represents the image source.</param>
      <param name="index">An integer value that identifies the image within the collection.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.</param>
      <param name="attributes">Contains information about how image colors are manipulated during rendering.</param>
      <param name="palette">An ISvgPaletteProvider object specifying colors used to paint vector images.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified image using the specified paint settings.</para>
      </summary>
      <param name="cache">Provides the paint surface and storage of the recently used pens, fonts and brushes.</param>
      <param name="images">An object that represents the source of images.</param>
      <param name="index">An integer value that identifies the image within the collection.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.</param>
      <param name="attributes">Contains information about how image colors are manipulated during rendering.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the specified image at the specified location.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that specifies the storage for the most  used pens, fonts and brushes.</param>
      <param name="images">An object that represents the source of the images.</param>
      <param name="index">A zero-based integer that specifies the index of the image within the images.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsInfoArgs,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean)">
      <summary>
        <para>Draws the specified image in the specified state and at the specified location.</para>
      </summary>
      <param name="info">A DevExpress.Utils.Drawing.GraphicsInfoArgs object.</param>
      <param name="images">An object that represents the source of the images.</param>
      <param name="index">A zero-based integer that specifies the index of the image within the images.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.</param>
      <param name="enabled">true to draw the image in the enabled state; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.EndInit">
      <summary>
        <para>Notifies the image collection that initialization is complete.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.ExportToFile(System.String)">
      <summary>
        <para>Saves the contents of the current collection to a file.</para>
      </summary>
      <param name="fileName">A string that specifies the name of the file to which the contents of the image collection is saved.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(System.Object,System.Int32,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable{System.Drawing.Size},System.Nullable{System.Single},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns the image at the specified position in the target image list.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <param name="index">A zero-based integer that specifies the index of the image in the images.</param>
      <param name="palette">An ISvgPaletteProvider object that specifies colors used to paint vector images.</param>
      <param name="size">A vector image size.</param>
      <param name="scaleFactor">An integer value that specifies the scale factor.</param>
      <param name="svgImageColorizationMode">A SvgImageColorizationMode enumeration value that specifies whether the image should be colorized with default colorization engine settings.</param>
      <returns>An <see cref="T:System.Drawing.Image"/> descendant that represents the image at the specified position within the specified image list. null (Nothing in Visual Basic) if the image isn’t found.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(System.Object,System.Int32,System.Nullable{System.Single})">
      <summary>
        <para>Returns the image at the specified position in the specified image list.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <param name="index">A zero-based integer that specifies the index of the image in the images.</param>
      <param name="scaleFactor">An integer value that specifies the scale factor.</param>
      <returns>An <see cref="T:System.Drawing.Image"/> descendant that represents the image at the specified position within the specified image list. null (Nothing in Visual Basic) if the image isn’t found.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(System.Object,System.String,System.Nullable{System.Single})">
      <summary>
        <para>Returns the image with the specified key in the specified image list.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <param name="id">A string value that is the key of the image to be returned.</param>
      <param name="scaleFactor">An integer value that specifies the scale factor.</param>
      <returns>An <see cref="T:System.Drawing.Image"/> descendant that represents the image at the specified position within the specified image list. null (Nothing in Visual Basic) if the image isn’t found.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListImageCount(System.Object)">
      <summary>
        <para>Returns the number of images within the specified source of images.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <returns>An integer value that specifies the number of images within the specified image source.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListImageSize(System.Object,System.Int32,System.Nullable{System.Single})">
      <summary>
        <para>Returns the size of the image at the specified position in the image list.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <param name="index">The index of the required image in the images list.</param>
      <param name="scaleFactor">An integer value that specifies a custom scale factor.</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure that specifies the size of a specific image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListSize(System.Drawing.Image,System.Object,System.Int32)">
      <summary>
        <para>Returns the size of the specified image or of an image in the image list addressed by a specific index.</para>
      </summary>
      <param name="image">An image whose size is returned.</param>
      <param name="images">An object that represents the source of images. This parameter is in effect if the image parameter is set to null.</param>
      <param name="index">The index of the required image in the images list.</param>
      <returns>A <see cref="T:System.Drawing.Size"/> value that specifies the size of a specific image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.GetImageListSize(System.Object,System.Nullable{System.Single})">
      <summary>
        <para>Returns the size of the images in the specified image list.</para>
      </summary>
      <param name="images">An object that represents the source of the images.</param>
      <param name="scaleFactor">An integer value that specifies a custom scale factor.</param>
      <returns>A structure that specifies the height and width of the images in the specified list.</returns>
    </member>
    <member name="E:DevExpress.Utils.ImageCollection.GetImageSize">
      <summary>
        <para>When the <see cref="P:DevExpress.Utils.ImageCollection.IsDpiAware">ImageCollection.IsDpiAware</see> option is enabled, the GetImageSize event allows you to customize the size of images returned by the <see cref="T:DevExpress.Utils.ImageCollection"/>. This event is fired on finishing an <see cref="T:DevExpress.Utils.ImageCollection"/> object initialization.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.ImageFromFile(System.String)">
      <summary>
        <para>Returns the image stored in the specified file.</para>
      </summary>
      <param name="fileName">A string that specifies the full path to the file.</param>
      <returns>A <see cref="T:System.Drawing.Image"/> object that represents the image stored in the specified file; null if the image cannot be loaded.</returns>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection.Images">
      <summary>
        <para>Provides access to the collection of images.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Images"/> object that represents the collection of images.</value>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection.ImageSize">
      <summary>
        <para>Gets or sets the size of images in the image collection.</para>
        <para>For the <see cref="T:DevExpress.Utils.SharedImageCollection"/>, this property specifies the size of images fetched from an image strip (at design time or via the <see cref="M:DevExpress.Utils.ImageCollection.AddImageStrip(System.Drawing.Image)">ImageCollection.AddImageStrip</see> and <see cref="M:DevExpress.Utils.ImageCollection.AddImageStripVertical(System.Drawing.Image)">ImageCollection.AddImageStripVertical</see> methods).</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> structure which specifies the height and width of the images in the list.</value>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection.ImageStream">
      <summary>
        <para>Gets or sets the handle to the <see cref="T:System.Windows.Forms.ImageListStreamer"/> associated with the current image collection.</para>
      </summary>
      <value>A handle to the <see cref="T:System.Windows.Forms.ImageListStreamer"/> for the current image collection. null (Nothing in Visual Basic) if the current image collection is empty.</value>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.InsertGalleryImage(System.String,System.String,System.Drawing.Image,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.InsertImage(System.Drawing.Image,System.String,System.Type,System.Int32,System.String)">
      <summary>
        <para>Inserts an image from project resources.</para>
      </summary>
      <param name="image">An image to be inserted.</param>
      <param name="name">The name of the image to be inserted.</param>
      <param name="resourceType">The type of the class where the image to be inserted is defined.</param>
      <param name="index">An integer value that specifies the position at which the image needs to be inserted in the image collection.</param>
      <param name="resName">The name of the class where the image to be inserted is defined.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.InsertImage(System.Drawing.Image,System.String,System.Type,System.Int32)">
      <summary>
        <para>Inserts an image from project resources.</para>
      </summary>
      <param name="image">An image to be inserted.</param>
      <param name="name">The name of the image to be inserted.</param>
      <param name="resourceType">The type of the class where the image to be inserted is defined.</param>
      <param name="index">An integer value that specifies the position at which the image needs to be inserted in the image collection.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.InsertImage(System.Int32,System.String,System.String,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection.IsDpiAware">
      <summary>
        <para>Gets or sets the value that specifies that when requesting an image from the ImageCollection, another <see href="https://docs.devexpress.com/WindowsForms/116666/common-features/high-dpi-support">DPI-specific</see> image corresponding to the requested image is returned instead.</para>
      </summary>
      <value>The DefaultBoolean.True value if a requested image is replaced with a DPI-specific image; DefaultBoolean.False or DefaultBoolean.Default if this feature is disabled.</value>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.IsImageExists(System.Drawing.Image,System.Object,System.Int32)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="image">The <see cref="T:System.Drawing.Image"/>.</param>
      <param name="images">An object that represents the image source.</param>
      <param name="index">An integer value that specifies the position of the image within the collection.</param>
      <returns>The Boolean value.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageClone(System.Drawing.Image)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageExists(System.Object,System.Int32)">
      <summary>
        <para>Determines whether the image exists at the specified position within the specified source of images.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <param name="index">A zero-based integer that specifies the index of the image within the images.</param>
      <returns>true if the image exists at the specified position within the specified source of images; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageScaled(System.Object,System.Int32)">
      <summary>
        <para>Returns whether the specified collection contains DPI-specific images.</para>
      </summary>
      <param name="images">An image collection to check for DPI-specific images.</param>
      <param name="index">An integer value specifying a zero-based index to check whether an image with this index exists in the specified collection.</param>
      <returns>true if the specified collection contains DPI-specific images; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageScaled(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.IsSvgImageExists(System.Object,System.Int32)">
      <summary>
        <para>Returns whether an image with the specified index exists in the specified collection.</para>
      </summary>
      <param name="images">An object that represents the source of images.</param>
      <param name="index">The index of the required image in the images list.</param>
      <returns>true if an image exists; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.RegisterAssemblies(System.String[])">
      <summary>
        <para>Registers specific external image-containing assemblies within your application.</para>
      </summary>
      <param name="assemblies">A String array that contains names of the assemblies that should be registered.</param>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection.RegisteredAssemblies">
      <summary>
        <para>Provides access to external image-containing assemblies, registered by this <see cref="T:DevExpress.Utils.ImageCollection"/>.</para>
      </summary>
      <value>A DevExpress.Utils.ImageCollectionRegisteredAssemblies object that stores registered assemblies.</value>
    </member>
    <member name="E:DevExpress.Utils.ImageCollection.ResolveImage">
      <summary>
        <para>When requesting an image from the ImageCollection, the ResolveImage event fires when the project resources do not contain a DPI-specific image that matches the requested image and allows you to provide this DPI-specific image manually. This event is in effect when the <see cref="P:DevExpress.Utils.ImageCollection.IsDpiAware">ImageCollection.IsDpiAware</see> option is enabled and the requested image was loaded into the ImageCollection from the project resources.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection.SupportAnimation(System.Object,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection.TransparentColor">
      <summary>
        <para>Gets or sets the color to treat as transparent.</para>
      </summary>
      <value>The <see cref="T:System.Drawing.Color"/> which represents the color that is not rendered when the image is drawn.</value>
    </member>
    <member name="T:DevExpress.Utils.ImageCollection`2">
      <summary>
        <para>A base class that provides API for the <see cref="T:DevExpress.Utils.SvgImageCollection">DevExpress.Utils.SvgImageCollection</see> component.</para>
      </summary>
      <typeparam name="TImage">The type of images stored inside a descendant class (DevExpress.Utils.Svg.SvgImage in case of SvgImageCollection objects).</typeparam>
      <typeparam name="TInfo">The type of the image info for images stored inside a descendant class (DevExpress.Utils.SvgImageInfo in case of SvgImageCollection objects).</typeparam>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.#ctor">
      <summary>
        <para>Initializes a new instance of the ImageCollection class descendant with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the ImageCollection class descendant with the specified settings.</para>
      </summary>
      <param name="container">An IContainer that specifies an object that owns this image collection descendant.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Add(`0)">
      <summary>
        <para>Adds a specific image to this collection.</para>
      </summary>
      <param name="image">The image to add.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Add(System.String,`0)">
      <summary>
        <para>Adds a specific image to this collection.</para>
      </summary>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="image">The image to add.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Add(System.String,System.String,System.String)">
      <summary>
        <para>Adds an image from the resource assembly to this collection.</para>
      </summary>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="assemblyImageResourceName">The complete image name that includes the assembly name and the extension.</param>
      <param name="assemblyName">The assembly name.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Add(System.String,System.String,System.Type)">
      <summary>
        <para>Adds a resource image to this collection.</para>
      </summary>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="resourceName">The image name as it appears in resources.</param>
      <param name="resourceType">The resource class type.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Add(System.String,System.String)">
      <summary>
        <para>Adds an image to this collection by its URI.</para>
      </summary>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="imageUri">The URI of the added image. See <see href="https://docs.devexpress.com/WindowsForms/16864/whats-installed/image-gallery-and-context-dependent-images">Image Gallery and Context-Dependent Images</see> article to learn more.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        <para>Adds multiple images to this collection.</para>
      </summary>
      <param name="images">An IEnumerable object that contains multiple images to be added.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.BeginInit">
      <summary>
        <para>Starts the collection’s initialization.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.ImageCollection`2.Changed">
      <summary>
        <para>Fires when the collection changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Clear">
      <summary>
        <para>Removes all images from this collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Contains(`0)">
      <summary>
        <para>Checks whether this collection contains the target image.</para>
      </summary>
      <param name="item">The image to check.</param>
      <returns>true if the collection has this image; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.ContainsKey(System.String)">
      <summary>
        <para>Checks whether this collection has an image with the specific name.</para>
      </summary>
      <param name="key">The image name to check.</param>
      <returns>true if the collection has an image with such name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.CopyTo(`0[],System.Int32)">
      <summary>
        <para>Copies all collection images to the specific array.</para>
      </summary>
      <param name="array">An array to which the collection should copy its images.</param>
      <param name="arrayIndex">An Int32 value that specifies the copied images’ starting position within the array.</param>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.Count">
      <summary>
        <para>Returns the current number of images in this collection.</para>
      </summary>
      <value>The image number.</value>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.EndInit">
      <summary>
        <para>Finalizes the collection initialization.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.Int32,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of a specific size. This raster image is produced from a source vector image, and colorized according to the provided palette. Throws the <see cref="T:System.ArgumentOutOfRangeException"/> if the collection has no vector image with the given index.</para>
      </summary>
      <param name="index">An index of a source vector image within this collection.</param>
      <param name="palette">An ISvgPaletteProvider object that specifies a palette according to which the produced raster image should be colorized. See this article to learn why and how images change their colors depending on skins and palettes: <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">How To: Draw and Use SVG Images</see>.</param>
      <param name="size">The size of the produced raster image.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>The raster image produced from the source SVG image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.Int32,DevExpress.Utils.Design.ISvgPaletteProvider,System.Single,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of a specific size, scaled according to the size multiplier. This raster image is produced from a source vector image. Throws the <see cref="T:System.ArgumentOutOfRangeException"/> if the collection has no vector image with the given index.</para>
      </summary>
      <param name="index">The image index within the collection.</param>
      <param name="palette">An ISvgPaletteProvider object that specifies a palette according to which the produced raster image should be colorized. See this article to learn why and how images change their colors depending on skins and palettes: <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">How To: Draw and Use SVG Images</see>.</param>
      <param name="scaleFactor">The size multiplier.</param>
      <param name="size">The size the produced image has if the scaleFactor is 1. Otherwise, the image is scaled.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>The raster image produced from the source vector image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.Int32,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of the desired size. The image is produced from a source vector image. Throws the System.ArgumentOutOfRangeException if the collection has no vector image with the given index.</para>
      </summary>
      <param name="index">An Index of a source vector image within the collection.</param>
      <param name="size">The size of a produced image.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>The raster image produced from a vector image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.Int32,System.Single,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of the desired size, scaled according to the size multiplier. The image is produced from a source vector image. Throws the <see cref="T:System.ArgumentOutOfRangeException"/> if the collection has no vector image with the given index.</para>
      </summary>
      <param name="index">The index of a source vector image within this collection.</param>
      <param name="scaleFactor">The size multiplier.</param>
      <param name="size">The size the produced image has if the scaleFactor is 1. Otherwise, the image is scaled.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>The raster image produced from the source vector image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.String,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of a specific size. This raster image is produced from a source vector image, and colorized according to the provided palette. Returns null if the collection has no vector image with the given name.</para>
      </summary>
      <param name="name">The image name within the collection.</param>
      <param name="palette">An ISvgPaletteProvider object that specifies a palette according to which the produced raster image should be colorized. See this article to learn why and how images change their colors depending on skins and palettes: <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">How To: Draw and Use SVG Images</see>.</param>
      <param name="size">A Size structure that is the size of a produced image.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>An Image that is the raster image produced from a vector image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.String,DevExpress.Utils.Design.ISvgPaletteProvider,System.Single,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of a specific size, scaled according to the size multiplier. This raster image is produced from a source vector image and colorized according to the provided palette. Returns null if the collection has no vector image with the given name.</para>
      </summary>
      <param name="name">The vector image name within the collection.</param>
      <param name="palette">An ISvgPaletteProvider object that specifies a palette according to which the produced raster image should be colorized. See this article to learn why and how images change their colors depending on skins and palettes: <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">How To: Draw and Use SVG Images</see>.</param>
      <param name="scaleFactor">The size multiplier.</param>
      <param name="size">The size the produced image has if the scaleFactor is 1. Otherwise, the image is scaled.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>The raster image produced from a vector image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.String,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of a specified size. The image is produced from a source vector image. Returns null if the collection has no vector image with the given name.</para>
      </summary>
      <param name="name">The vector image name within the collection.</param>
      <param name="size">The size of the produced image.</param>
      <param name="imageColorizationMode">The colorization mode for the source SVG image.</param>
      <returns>The raster image produced from the vector image.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.GetImage(System.String,System.Single,System.Nullable{System.Drawing.Size},System.Nullable{DevExpress.Utils.SvgImageColorizationMode})">
      <summary>
        <para>Returns a regular raster image of the desired size, scaled according to the size multiplier. The image is produced from a source vector image. Returns null if the collection has no vector image with the given name.</para>
      </summary>
      <param name="name">The vector image name within the collection.</param>
      <param name="scaleFactor">The size multiplier.</param>
      <param name="size">The default size of the produced image (when the scaleFactor is 1). The size is scaled if the scaleFactor is not 1.</param>
      <param name="imageColorizationMode">The colorization mode for the source vector image.</param>
      <returns>The raster image produced from a source vector image.</returns>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.ImageColorizationMode">
      <summary>
        <para>Gets or sets colorization mode for SVG images in the current collection.</para>
      </summary>
      <value>Colorization mode for SVG images in the current collection.</value>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.ImageInfos">
      <summary>
        <para>Returns the Info objects for all images owned by this collection.</para>
      </summary>
      <value>The collection that stores info objects for every ImageCollection image.</value>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.ImageSize">
      <summary>
        <para>Gets or sets the default size for raster images rendered based on vector images. This setting is used if a control does not specify the size.</para>
      </summary>
      <value>The default image size.</value>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.IndexOf(`0)">
      <summary>
        <para>Returns the collection index of the specific image.</para>
      </summary>
      <param name="item">The image whose index is to be obtained.</param>
      <returns>The image index inside this collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Insert(System.Int32,`0)">
      <summary>
        <para>Adds the specific image to this collection, , and places this image to the specific position.</para>
      </summary>
      <param name="index">The position the added image should have inside this collection.</param>
      <param name="item">The image to be added.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Insert(System.Int32,System.String,`0)">
      <summary>
        <para>Adds the specific image to this collection, and places it to the specific position.</para>
      </summary>
      <param name="index">The position the added image should have inside this collection.</param>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="image">The image to add.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Insert(System.Int32,System.String,System.String,System.String)">
      <summary>
        <para>Adds an image from the assembly to this collection, and places this image to the specific position.</para>
      </summary>
      <param name="index">The position the added image should have inside this collection.</param>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="assemblyImageResourceName">The complete image name that includes the assembly name and the extension.</param>
      <param name="assemblyName">The assembly name.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Insert(System.Int32,System.String,System.String,System.Type)">
      <summary>
        <para>Adds an image from resources, and places this image to the specific position.</para>
      </summary>
      <param name="index">The position the added image should have inside this collection.</param>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="resourceName">The image name as it appears in resources.</param>
      <param name="resourceType">The resource class type.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Insert(System.Int32,System.String,System.String)">
      <summary>
        <para>Adds an image to this collection by its URI, and places this image to the specific position.</para>
      </summary>
      <param name="index">The position the added image should have inside this collection.</param>
      <param name="key">The name that the added image will have in this collection.</param>
      <param name="imageUri">The URI of the added image. See <see href="https://docs.devexpress.com/WindowsForms/16864/whats-installed/image-gallery-and-context-dependent-images">Image Gallery and Context-Dependent Images</see> article to learn more.</param>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.Item(System.Int32)">
      <summary>
        <para>Returns a collection image by its index.</para>
      </summary>
      <param name="index">The image index inside this collection.</param>
      <value>The image that occupies the given position in this collection.</value>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.Item(System.String)">
      <summary>
        <para>Returns a collection image by its name.</para>
      </summary>
      <param name="key">The image name.</param>
      <value>The image that has the given name.</value>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.Keys">
      <summary>
        <para>Returns names for all images kept in this collection.</para>
      </summary>
      <value>An IEnumerable object that stores all image names.</value>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.Remove(`0)">
      <summary>
        <para>Removes the image from this collection.</para>
      </summary>
      <param name="image">The image to remove.</param>
      <returns>true if the image was successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.RemoveAt(System.Int32)">
      <summary>
        <para>Removes an image with the specific index from this collection.</para>
      </summary>
      <param name="index">The index of an image to be removed.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.RemoveAt(System.String)">
      <summary>
        <para>Removes an image with the specific name from this collection.</para>
      </summary>
      <param name="key">The name of an image to be removed.</param>
    </member>
    <member name="P:DevExpress.Utils.ImageCollection`2.ScaledImageSize">
      <summary>
        <para>Returns the actual (DPI-aware) size of images stored in this <see cref="T:DevExpress.Utils.SvgImageCollection"/>.</para>
      </summary>
      <value>A Size structure that is the actual image size.</value>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.SetKeyName(`0,System.String)">
      <summary>
        <para>Renames the target <see cref="T:DevExpress.Utils.SvgImageCollection"/> image.</para>
      </summary>
      <param name="item">An SvgImage that is the image to be renamed.</param>
      <param name="key">The new image name.</param>
    </member>
    <member name="M:DevExpress.Utils.ImageCollection`2.SetKeyName(System.Int32,System.String)">
      <summary>
        <para>Renames the target <see cref="T:DevExpress.Utils.SvgImageCollection"/> image.</para>
      </summary>
      <param name="index">Tthe position of an image that needs to be renamed.</param>
      <param name="key">The new image name.</param>
    </member>
    <member name="T:DevExpress.Utils.Images">
      <summary>
        <para>Represents a collection of <see cref="T:System.Drawing.Image"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Images.#ctor(DevExpress.Utils.ImageCollection,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Images"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Utils.ImageCollection"/> object representing the <see cref="T:DevExpress.Utils.Images"/> object’s owner.</param>
      <param name="allowModifyImages">true to permit image modification; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.#ctor(DevExpress.Utils.ImageCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Images"/> class with the specified owner.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Utils.ImageCollection"/> object that represents the image collection which owns this object.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.Add(System.Drawing.Image,System.String)">
      <summary>
        <para>Adds an image with the specified name to the collection.</para>
      </summary>
      <param name="image">An image to add to the collection.</param>
      <param name="name">A string that specifies the name of the image,</param>
      <returns>An integer value that specifies the position at which the image has been added.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.Add(System.Drawing.Image)">
      <summary>
        <para>Appends the specified image to the current collection of images.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object to append to the collection.</param>
      <returns>An integer value indicating the position at which the new element was inserted. -1 if the specified image is null (Nothing in Visual Basic) or empty.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.AddImageStrip(System.Drawing.Image)">
      <summary>
        <para>Adds images from the specified horizontal image strip to the collection.</para>
      </summary>
      <param name="sourceImage">The image(s) to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.AddImageStripVertical(System.Drawing.Image)">
      <summary>
        <para>Adds images from the specified vertical image strip to the collection.</para>
      </summary>
      <param name="sourceImage">The image(s) to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.AddRange(System.Collections.IList)">
      <summary>
        <para>Adds images from the specified list to the current collection.</para>
      </summary>
      <param name="images">A IList object that contains images to be added to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.AddRange(System.Object[])">
      <summary>
        <para>Adds an array of images to the current collection.</para>
      </summary>
      <param name="images">An array of images to be added to the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.Clear">
      <summary>
        <para>Clears the current collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Images.Contains(System.Object)">
      <summary>
        <para>Gets whether the collection contains the specified element.</para>
      </summary>
      <param name="value">An object to locate in the collection.</param>
      <returns>A Boolean value that specifies whether the collection contains the specified element.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to a compatible one-dimensional Array, starting at the specified index of the target array.</para>
      </summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied from the collection. The Array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the array in which copying begins.</param>
    </member>
    <member name="P:DevExpress.Utils.Images.Count">
      <summary>
        <para>Gets the number of items in the collection.</para>
      </summary>
      <value>An integer value that specifies the number of items in the collection.</value>
    </member>
    <member name="M:DevExpress.Utils.Images.GetEnumerator">
      <summary>
        <para>Returns an enumerator for the collection.</para>
      </summary>
      <returns>An IEnumerator for the collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.GetImageFromCollection(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns an image from the image collection at the specified position within the specified height and width.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object which resolution settings will be applied to the resulting image.</param>
      <param name="width">An integer value that specifies the width of the resulting image.</param>
      <param name="height">An integer value that specifies the height of the resulting image.</param>
      <param name="wIndex">An integer value that specifies the vertical position of the resulting image in the images collection.</param>
      <param name="hIndex">An integer value that specifies the horizontal position of the resulting image in the images collection.</param>
      <returns>A <see cref="T:System.Drawing.Image"/> object which represents an image at the specified position of the specified size.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.IndexOf(System.Object)">
      <summary>
        <para>Searches for the specified Object and returns the zero-based index of the first occurrence within the collection.</para>
      </summary>
      <param name="value">The zero-based index of the first occurrence of value within the collection, if found; otherwise, -1.</param>
      <returns>The Object to locate in the collection.</returns>
    </member>
    <member name="P:DevExpress.Utils.Images.InnerImages">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An InnerImagesList object.</value>
    </member>
    <member name="M:DevExpress.Utils.Images.Insert(System.Drawing.Image,System.String,System.Type,System.Int32,System.String)">
      <summary>
        <para>Inserts an image from project resources.</para>
      </summary>
      <param name="image">An image to be inserted.</param>
      <param name="name">The name of the image to be inserted.</param>
      <param name="resourceType">The type of the class where the image to be inserted is defined.</param>
      <param name="index">An integer value that specifies the position at which the image needs to be inserted in the image collection.</param>
      <param name="resName">The name of the class where the image to be inserted is defined.</param>
      <returns>An integer value that specifies the index of the inserted image in the image collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.Insert(System.Drawing.Image,System.String,System.Type,System.Int32)">
      <summary>
        <para>Inserts an image from project resources.</para>
      </summary>
      <param name="image">An image to be inserted.</param>
      <param name="name">The name of the image to be inserted.</param>
      <param name="resourceType">The type of the class where the image to be inserted is defined.</param>
      <param name="index">An integer value that specifies the position at which the image needs to be inserted in the image collection.</param>
      <returns>An integer value that specifies the index of the inserted image in the image collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.Insert(System.Int32,System.Object,System.String)">
      <summary>
        <para>Inserts an image with the assigned name into the collection at the specified position.</para>
      </summary>
      <param name="index">An integer value specifying the zero-based position at which the specified image is inserted.</param>
      <param name="value">An image to insert into the collection.</param>
      <param name="name">A string that specifies the name to be associated with the image.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts an image into the collection at the specified position.</para>
      </summary>
      <param name="index">An integer value specifying the zero-based position at which the specified image is inserted.</param>
      <param name="value">An image to insert into the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.Insert(System.String,System.String,System.String,System.Int32)">
      <summary>
        <para>Inserts an image from the target assembly.</para>
      </summary>
      <param name="assemblyName">A String value that is the name of the source assembly that stores the required image.</param>
      <param name="name">A String value that is the image name.</param>
      <param name="path">A String value that is the path to the source assembly.</param>
      <param name="index">An Int32 value that is the position within the <see cref="T:DevExpress.Utils.Images"/> collection at which the target image should be placed.</param>
      <returns>An Int32 value that is the index of the successfully inserted image.</returns>
    </member>
    <member name="M:DevExpress.Utils.Images.InsertGalleryImage(System.String,System.String,System.Drawing.Image,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Images.IsFixedSize">
      <summary>
        <para>Gets a value indicating whether the collection has a fixed size.</para>
      </summary>
      <value>false.</value>
    </member>
    <member name="P:DevExpress.Utils.Images.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the collection is read-only.</para>
      </summary>
      <value>false.</value>
    </member>
    <member name="P:DevExpress.Utils.Images.IsSynchronized">
      <summary>
        <para>Gets a value indicating whether access to the collection is synchronized (thread safe).</para>
      </summary>
      <value>true.</value>
    </member>
    <member name="P:DevExpress.Utils.Images.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to individual items in the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the desired item’s position within the collection. If it’s negative or exceeds the last available index, an exception is raised.</param>
      <value>A <see cref="T:System.Drawing.Image"/> object which represents the image at the specified position.</value>
    </member>
    <member name="P:DevExpress.Utils.Images.Item(System.String)">
      <summary>
        <para>Provides access to the images in the collection by their names.</para>
      </summary>
      <param name="name">A string that specifies the name of the image to locate in the collection.</param>
      <value>An image with the specified name.</value>
    </member>
    <member name="P:DevExpress.Utils.Images.Keys">
      <summary>
        <para>Gets the collection of names assigned to the images in the current collection.</para>
      </summary>
      <value>A StringCollection of names assigned to the images in the current collection.</value>
    </member>
    <member name="M:DevExpress.Utils.Images.Remove(System.Object)">
      <summary>
        <para>Removes the specified image from the collection.</para>
      </summary>
      <param name="value">An image to remove from the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.RemoveAt(System.Int32)">
      <summary>
        <para>Removes an image at the specified position from the collection.</para>
      </summary>
      <param name="index">A zero-based index of the required image.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.RemoveByName(System.String)">
      <summary>
        <para>Removes an image with the specified name from the collection.</para>
      </summary>
      <param name="name">A string that specifies the name of the required image.</param>
    </member>
    <member name="M:DevExpress.Utils.Images.SetKeyName(System.Int32,System.String)">
      <summary>
        <para>Assigns a name to the image located at the specified position within the collection.</para>
      </summary>
      <param name="index">An integer value that specifies the zero-based index of the required image.</param>
      <param name="name">A string that specifies the name to be assigned to the image.</param>
    </member>
    <member name="P:DevExpress.Utils.Images.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access to the collection.</para>
      </summary>
      <value>The current object.</value>
    </member>
    <member name="M:DevExpress.Utils.Images.ToArray">
      <summary>
        <para>Copies the elements of the <see cref="T:DevExpress.Utils.Images"/> to a new array of <see cref="T:System.Drawing.Image"/> objects.</para>
      </summary>
      <returns>An array of <see cref="T:System.Drawing.Image"/> objects containing the copies of the elements of the <see cref="T:DevExpress.Utils.Images"/>.</returns>
    </member>
    <member name="T:DevExpress.Utils.KeyShortcut">
      <summary>
        <para>A class used by various controls to provide shortcut keys.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.#ctor">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class and sets the shortcut to the <see cref="F:System.Windows.Forms.Keys.None"/> value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.#ctor(System.Windows.Forms.Keys)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.</para>
      </summary>
      <param name="key">The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key">KeyShortcut.Key</see> property. Values of the <see cref="T:System.Windows.Forms.Keys"/> type can be combined using the OR operator.</param>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.#ctor(System.Windows.Forms.Shortcut)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.</para>
      </summary>
      <param name="shortcut">The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key">KeyShortcut.Key</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.KeyShortcut.AltKeyName">
      <summary>
        <para>Gets the name of the ALT key which is dependent upon the end-user’s regional settings.</para>
      </summary>
      <value>A string which specifies the name of the ALT key.</value>
    </member>
    <member name="P:DevExpress.Utils.KeyShortcut.ControlKeyName">
      <summary>
        <para>Gets the name of the CONTROL key which is dependent upon the end-user’s regional settings.</para>
      </summary>
      <value>A string which specifies the name of the CONTROL key.</value>
    </member>
    <member name="F:DevExpress.Utils.KeyShortcut.Empty">
      <summary>
        <para>Gets the static <see cref="T:DevExpress.Utils.KeyShortcut"/> object whose <see cref="P:DevExpress.Utils.KeyShortcut.Key">KeyShortcut.Key</see> property is set to <see cref="F:System.Windows.Forms.Keys.None"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.Equals(System.Object)">
      <summary>
        <para>Tests whether the shortcuts of the current and specified <see cref="T:DevExpress.Utils.KeyShortcut"/> objects are identical.</para>
      </summary>
      <param name="value">The object representing the <see cref="T:DevExpress.Utils.KeyShortcut"/> object.</param>
      <returns>true if the function parameter represents a <see cref="T:DevExpress.Utils.KeyShortcut"/> object and its shortcut is equal to the shortcut of the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current object.</para>
      </summary>
      <returns>The hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.GetKeyDisplayText(System.Windows.Forms.Keys)">
      <summary>
        <para>Returns the text representation of the specified System.Windows.Forms.Keys object.</para>
      </summary>
      <param name="key">The object whose text representation is to be obtained.</param>
      <returns>The text representation of the specified Keys object.</returns>
    </member>
    <member name="P:DevExpress.Utils.KeyShortcut.IsExist">
      <summary>
        <para>Tests whether the current shortcut specifies a valid key combination.</para>
      </summary>
      <value>true if the current shortcut specifies a valid key combination; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.KeyShortcut.Key">
      <summary>
        <para>Gets the shortcut used to activate particular functionality.</para>
      </summary>
      <value>The <see cref="T:System.Windows.Forms.Keys"/> value representing the shortcut.</value>
    </member>
    <member name="P:DevExpress.Utils.KeyShortcut.ShiftKeyName">
      <summary>
        <para>Gets the name of the SHIFT key which is dependent upon the end-user’s regional settings.</para>
      </summary>
      <value>A string which specifies the name of the SHIFT key.</value>
    </member>
    <member name="M:DevExpress.Utils.KeyShortcut.ToString">
      <summary>
        <para>Gets the text representation of the current shortcut.</para>
      </summary>
      <returns>The text representation of the current shortcut.</returns>
    </member>
    <member name="N:DevExpress.Utils.Layout">
      <summary>
        <para>Provides simplified form layout panels: the <see cref="T:DevExpress.Utils.Layout.StackPanel">DevExpress.Utils.Layout.StackPanel</see> and <see cref="T:DevExpress.Utils.Layout.TablePanel">DevExpress.Utils.Layout.TablePanel</see> objects.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Layout.StackPanel">
      <summary>
        <para>A panel that arranges its child elements in a single line, either vertically or horizontally.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.StackPanel.#ctor">
      <summary>
        <para>Initializes a new instance of the StackPanel class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.StackPanel.GetStretched(System.Windows.Forms.Control)">
      <summary>
        <para>Returns whether the control from the panel Controls collection occupies all available panel space.</para>
      </summary>
      <param name="control">A Control whose stretch mode is to be obtained.</param>
      <returns>true if the control stretches; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Layout.StackPanel.GetViewInfo">
      <summary>
        <para>Retrieves the object that provides current StackPanel settings.</para>
      </summary>
      <returns>A StackPanelObjectInfoArgs object that provides current StackPanel settings.</returns>
    </member>
    <member name="P:DevExpress.Utils.Layout.StackPanel.LayoutDirection">
      <summary>
        <para>Gets or sets the direction along which this stack panel arranges its child controls.</para>
      </summary>
      <value>Specifies the layout direction for child stack panel items.</value>
    </member>
    <member name="M:DevExpress.Utils.Layout.StackPanel.SetStretched(System.Windows.Forms.Control,System.Boolean)">
      <summary>
        <para>Forces the control lying on the stack panel to occupy the entire free space available in this panel. The size of a stretched control cannot exceed this control’s MaximumSize. The control is strethed in the direction that matches the panel orientation (i.e., vertically for TopDown and BottomUp panels).</para>
      </summary>
      <param name="control">A control from the panel’s Controls collection.</param>
      <param name="value">true, to stretch the control; otherwise, false.</param>
    </member>
    <member name="T:DevExpress.Utils.Layout.TablePanel">
      <summary>
        <para>A panel with a table layout, where each cell can host a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.#ctor">
      <summary>
        <para>Initializes a new instance of the TablePanel class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanel.AutoSizeDefaultTableElementLength">
      <summary>
        <para>Gets or sets the size of empty rows/columns of the <see cref="F:DevExpress.Utils.Layout.TablePanelEntityStyle.AutoSize"/> type.</para>
      </summary>
      <value>The size for empty rows/columns of the <see cref="F:DevExpress.Utils.Layout.TablePanelEntityStyle.AutoSize"/> type, in pixels.</value>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanel.Columns">
      <summary>
        <para>Provides access to the collection of the panel’s columns (<see cref="T:DevExpress.Utils.Layout.TablePanelColumn"/>).</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Utils.Layout.TablePanelColumn"/> objects.</value>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.GetColumn(System.Windows.Forms.Control)">
      <summary>
        <para>If a target control lies in a Table Panel cell, this method returns the index of a column that owns this cell.</para>
      </summary>
      <param name="control">The Control to check.</param>
      <returns>The index of a parent column.</returns>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.GetColumnSpan(System.Windows.Forms.Control)">
      <summary>
        <para>If a target control lies in a Table Panel cell and stretches horizontally across multiple cells, this method returns the number of columns this control occupies.</para>
      </summary>
      <param name="control">The Control to check.</param>
      <returns>The number of columns across which this Control spans.</returns>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.GetRow(System.Windows.Forms.Control)">
      <summary>
        <para>If a target control lies in a Table Panel cell, this method returns the index of a row that owns this cell.</para>
      </summary>
      <param name="control">The control to check.</param>
      <returns>The index of a parent row.</returns>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.GetRowSpan(System.Windows.Forms.Control)">
      <summary>
        <para>If a target control lies in a Table Panel cell and stretches vertically across multiple cells, this method returns the number of rows this control occupies.</para>
      </summary>
      <param name="control">The Control to check.</param>
      <returns>The number of rows across which this Control spans.</returns>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.GetViewInfo">
      <summary>
        <para>Retrieves the object that provides current TablePanel settings.</para>
      </summary>
      <returns>A TablePanelObjectInfoArgs object that provides current TablePanel settings.</returns>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanel.Rows">
      <summary>
        <para>Provides access to the collection of the panel’s rows (<see cref="T:DevExpress.Utils.Layout.TablePanelRow"/>).</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Utils.Layout.TablePanelRow"/> objects.</value>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.SetCell(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>
        <para>Moves a control to a specific cell. Note that you should first add the control to the panel’s Controls collection.</para>
      </summary>
      <param name="control">The Control to move.</param>
      <param name="row">The new index of a row.</param>
      <param name="column">The new index of a column.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.SetColumn(System.Windows.Forms.Control,System.Int32)">
      <summary>
        <para>Places the control into a cell that belongs to this column. Note that this method can be called only for controls from the panel’s Controls collection.</para>
      </summary>
      <param name="control">The control to move.</param>
      <param name="value">The new index of a Panel column.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)">
      <summary>
        <para>Stretches the control horizontally across the given number of cells. Note that this method can only be called for controls from the panel’s Controls collection.</para>
      </summary>
      <param name="control">The stretched control.</param>
      <param name="value">The number of rows occupied by this control.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.SetRow(System.Windows.Forms.Control,System.Int32)">
      <summary>
        <para>Places the control into a cell that belongs to this row. Note that this method can be called only for controls from the panel’s Controls collection.</para>
      </summary>
      <param name="control">The control to move.</param>
      <param name="value">The new index of a Panel row.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)">
      <summary>
        <para>Stretches the control vertically across the given number of cells. Note that this method can only be called for controls from the panel’s Controls collection.</para>
      </summary>
      <param name="control">The stretched control.</param>
      <param name="value">The number of rows occupied by this control.</param>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanel.ShowGrid">
      <summary>
        <para>Gets or sets whether this TablePanel should draw its grid lines at runtime.</para>
      </summary>
      <value>Specifies whether this panel should show its grid lines at runtime. The DefaultBoolean.Default setting is equal to DefaultBoolean.False.</value>
    </member>
    <member name="T:DevExpress.Utils.Layout.TablePanelColumn">
      <summary>
        <para>A column in the <see cref="T:DevExpress.Utils.Layout.TablePanel"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelColumn.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelColumn"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelColumn.#ctor(DevExpress.Utils.Layout.TablePanelEntityStyle,System.Single,System.Boolean,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelColumn"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelColumn.#ctor(DevExpress.Utils.Layout.TablePanelEntityStyle,System.Single,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelColumn"/> class with specified settings.</para>
      </summary>
      <param name="style">The column’s size type.</param>
      <param name="width">The column’s width.</param>
      <param name="visible">The column’s visibility state.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelColumn.#ctor(DevExpress.Utils.Layout.TablePanelEntityStyle,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelColumn"/> class with specified settings.</para>
      </summary>
      <param name="style">The column’s size type.</param>
      <param name="width">The column’s width.</param>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanelColumn.Width">
      <summary>
        <para>Gets or sets the column’s width.</para>
      </summary>
      <value>The column’s width.</value>
    </member>
    <member name="T:DevExpress.Utils.Layout.TablePanelEntity">
      <summary>
        <para>The base class for columns and rows in the <see cref="T:DevExpress.Utils.Layout.TablePanel"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanelEntity.Style">
      <summary>
        <para>Gets or sets the size type of the current row/column.</para>
      </summary>
      <value>The size type of the current row/column.</value>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanelEntity.Tag">
      <summary>
        <para>Gets or sets the unique ID for the current column or row.</para>
      </summary>
      <value>Any object that serves as the unique column or row ID.</value>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelEntity.ToString">
      <summary>
        <para>Returns the text representation of the current row/column.</para>
      </summary>
      <returns>The text representation of the current row/column.</returns>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanelEntity.Visible">
      <summary>
        <para>Gets or sets whether the row/column is visible.</para>
      </summary>
      <value>The row/column’s visibility.</value>
    </member>
    <member name="T:DevExpress.Utils.Layout.TablePanelEntityStyle">
      <summary>
        <para>Enumerates size types for rows and columns in the <see cref="T:DevExpress.Utils.Layout.TablePanel"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Layout.TablePanelEntityStyle.Absolute">
      <summary>
        <para>A row/column has a fixed width/height, in pixels. If the last row/column is of the Absolute size type and the TableLayout provides more space than needed, the row/column is stretched to fit this space.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Layout.TablePanelEntityStyle.AutoSize">
      <summary>
        <para>Rows/columns are automatically resized to match their contents. Width and Height settings of these columns/rows are ignored.</para>
        <para>The <see cref="P:DevExpress.Utils.Layout.TablePanel.AutoSizeDefaultTableElementLength"/> property specifies the size for empty rows/columns of this type.</para>
        <para>You can also enable the TablePanel’s AutoSize property to automatically resize the panel to fit its contents.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Layout.TablePanelEntityStyle.Relative">
      <summary>
        <para>Rows/columns of this size type divide the available space according to the ratio specified by their sizes. When you enable the TablePanel’s AutoSize setting, Relative mode is equivalent to AutoSize mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Layout.TablePanelEntityStyle.Separator">
      <summary>
        <para>Rows and columns of this style serve as visual delimiters between their neighboring rows and columns. Separators cannot be resized and ignore their <see cref="P:DevExpress.Utils.Layout.TablePanelColumn.Width">TablePanelColumn.Width</see> and <see cref="P:DevExpress.Utils.Layout.TablePanelRow.Height">TablePanelRow.Height</see> properties.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Layout.TablePanelRow">
      <summary>
        <para>A row in the <see cref="T:DevExpress.Utils.Layout.TablePanel"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelRow.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelRow"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelRow.#ctor(DevExpress.Utils.Layout.TablePanelEntityStyle,System.Single,System.Boolean,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelRow"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelRow.#ctor(DevExpress.Utils.Layout.TablePanelEntityStyle,System.Single,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelRow"/> class with specified settings.</para>
      </summary>
      <param name="style">The row’s size type.</param>
      <param name="height">The row’s height.</param>
      <param name="visible">The row’s visibility state.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.TablePanelRow.#ctor(DevExpress.Utils.Layout.TablePanelEntityStyle,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.TablePanelRow"/> class with specified settings.</para>
      </summary>
      <param name="style">The row’s size type.</param>
      <param name="height">The row’s height.</param>
    </member>
    <member name="P:DevExpress.Utils.Layout.TablePanelRow.Height">
      <summary>
        <para>Gets or sets the row’s height.</para>
      </summary>
      <value>The row’s height.</value>
    </member>
    <member name="T:DevExpress.Utils.Layout.XtraLayoutPanelBase">
      <summary>
        <para>The base class for the <see cref="T:DevExpress.Utils.Layout.StackPanel"/> and <see cref="T:DevExpress.Utils.Layout.TablePanel"/> classes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.XtraLayoutPanelBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Layout.XtraLayoutPanelBase"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.AutoScroll">
      <summary>
        <para>Gets or sets whether the panel enables scrollbars that allow you to scroll to any controls placed outside the panel’s visible boundaries.</para>
      </summary>
      <value>true, to automatically show scrollbars; false, to hide scrollbars.</value>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.AutoScrollMargin">
      <summary>
        <para>Gets or sets the distance between child controls and the edges of the XtraLayoutPanel. The size of auto-scroll margins is added to the combined size of child controls inside this panel to determine whether scroll bars are needed.</para>
      </summary>
      <value>The auto-scroll margin size.</value>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.AutoScrollMinSize">
      <summary>
        <para>Gets or sets the minimum screen size allocated to the automatic scroll bars.</para>
      </summary>
      <value>The minimum height and width of the scrollable area, in pixels.</value>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.AutoTabOrder">
      <summary>
        <para>Gets or sets whether the panel maintains an automatic tab order of its child controls.</para>
      </summary>
      <value>true, if the panel automatically maintains the tab order of its controls according to the controls’ positions; false, if the tab order is specified by the Control.TabIndex property of the controls.</value>
    </member>
    <member name="M:DevExpress.Utils.Layout.XtraLayoutPanelBase.CalcBestSize">
      <summary>
        <para>Calculates the panel size required to fit the panel’s content.</para>
      </summary>
      <returns>The required panel size.</returns>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.LabelVertAlignment">
      <summary>
        <para>Gets or sets how <see cref="T:DevExpress.XtraEditors.LabelControl"/>s are vertically aligned in relation to the text editors displayed to the label’s right (to the label’s left in right-to-left locales).</para>
      </summary>
      <value>The label’s vertical position relative to the adjacent text editor.</value>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.LayoutEngine">
      <summary>
        <para>Gets the panel’s LayoutEngine object.</para>
      </summary>
      <value>The LayoutEngine for the panel’s contents.</value>
    </member>
    <member name="M:DevExpress.Utils.Layout.XtraLayoutPanelBase.ResumeLayout">
      <summary>
        <para>Unlocks the panel that was previously frozen by the <see cref="M:DevExpress.Utils.Layout.XtraLayoutPanelBase.SuspendLayout">SuspendLayout()</see> method.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Layout.XtraLayoutPanelBase.ResumeLayout(System.Boolean)">
      <summary>
        <para>Resumes the layout behavior for the panel.</para>
      </summary>
      <param name="performLayout">true, to execute pending layout requests; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.Layout.XtraLayoutPanelBase.SuspendLayout">
      <summary>
        <para>Temporarily freezes a panel to avoid exessive immediate updates. Call this method before you modify a panel layout in code. When all modifications are done, call the ResumeLayout method to unlock the panel.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Layout.XtraLayoutPanelBase.UseSkinIndents">
      <summary>
        <para>Gets or sets whether Stack and Table panels obtain their margins and paddings from the current skin.</para>
      </summary>
      <value>true if Stack and Table panels obtain their margins and paddings from the current skin; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.Locations">
      <summary>
        <para>Contains values that specify how a specific element is positioned relative to another element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Locations.Bottom">
      <summary>
        <para>An element is located at the bottom edge of another element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Locations.Default">
      <summary>
        <para>The same as the <see cref="F:DevExpress.Utils.Locations.Top">Locations.Top</see> option.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Locations.Left">
      <summary>
        <para>An element is located at the left edge of another element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Locations.Right">
      <summary>
        <para>An element is located at the right edge of another element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Locations.Top">
      <summary>
        <para>An element is located at the top edge of another element.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.MagnifierDialog">
      <summary>
        <para>The Magnifier that allows users to pick colors from anywhere around the screen.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialog"/> class with the default settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,DevExpress.Utils.MagnifierDialogArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialog"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An IWin32Window object that owns this Magnifier.</param>
      <param name="args">A <see cref="T:DevExpress.Utils.MagnifierDialogArgs"/> object that stores Magnifier settings.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean,DevExpress.Utils.ColorFormat,System.Boolean,System.Boolean)">
      <summary>
        <para>Displays the MagnifierDialog with custom parameters.</para>
      </summary>
      <param name="owner">A form that owns this dialog.</param>
      <param name="initialZoomFactor">The initial zoom ratio.</param>
      <param name="closeOnMouseClick">true if the dialog should close when a user clicks the left mouse button, false if left clicks should not close the dialog. In the latter case, a user should press Esc to hide the magnifier.</param>
      <param name="pickColorToClipboard">Specifies whether a color under the magnifier crosshair should be copied to the clipboard when a user clicks the left mouse button.</param>
      <param name="colorFormat">Specifies whether the magnifier should store clicked colors as Hexadecimal or ARGB values.</param>
      <param name="showPixelGrid">true to show a pixel grid inside the magnifier; otherwise, false.</param>
      <param name="showColors">Specifies whether the magnifier should display the previously clicked and currently hovered colors in its upper right corner.</param>
      <returns>A structure that stores the last remembered magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean,DevExpress.Utils.ColorFormat,System.Boolean)">
      <summary>
        <para>Displays the <see cref="T:DevExpress.Utils.MagnifierDialog"/> with specific parameters.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> interface descendant that owns this <see cref="T:DevExpress.Utils.MagnifierDialog"/>.</param>
      <param name="initialZoomFactor">An Int32 value that specifies the <see cref="T:DevExpress.Utils.MagnifierDialog"/>‘s initial zoom level.</param>
      <param name="closeOnMouseClick">true if the <see cref="T:DevExpress.Utils.MagnifierDialog"/> should automatically close when a user presses the left mouse button; otherwise, false.</param>
      <param name="pickColorToClipboard">true to copy a clicked color to the clipboard; otherwise, false.</param>
      <param name="colorFormat">A ColorFormat enumeration value that specifies whether the <see cref="T:DevExpress.Utils.MagnifierDialog"/> should return selected colors as Hexadecimal or ARGB values.</param>
      <param name="showPixelGrid">true, to show a pixel grid inside the Magnifier; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores selected colors and zoom level.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean,DevExpress.Utils.ColorFormat)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialog"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An IWin32Window object that owns this Magnifier.</param>
      <param name="initialZoomFactor">A Single value that is the initial Magnifier zoom level. Users can zoom in and out using a mouse scroll wheel.</param>
      <param name="closeOnMouseClick">true if the Magnifier should automatically close immediately after a user clicks the left mouse button to select a color; false if the Magnifier closes only when user presses “Esc” or clicks the right mouse button.</param>
      <param name="pickColorToClipboard">true if the selected color should be copied to the clipboard; otherwise, false.</param>
      <param name="colorFormat">A ColorFormat that specifies whether the Magnifier displays remembered and hovered colors in RGB or HEX format.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean)">
      <summary>
        <para>Displays the <see cref="T:DevExpress.Utils.MagnifierDialog"/> with specific parameters.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> interface descendant that owns this <see cref="T:DevExpress.Utils.MagnifierDialog"/>.</param>
      <param name="initialZoomFactor">An Int32 value that specifies the <see cref="T:DevExpress.Utils.MagnifierDialog"/>‘s initial zoom level.</param>
      <param name="closeOnMouseClick">true if the <see cref="T:DevExpress.Utils.MagnifierDialog"/> should automatically close when a user presses the left mouse button; otherwise, false.</param>
      <param name="pickColorToClipboard">true to copy a clicked color to the clipboard; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores selected colors and zoom level.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialog"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An IWin32Window object that owns this Magnifier.</param>
      <param name="initialZoomFactor">A Single value that is the initial Magnifier zoom level. Users can zoom in and out using a mouse scroll wheel.</param>
      <param name="closeOnMouseClick">true if the Magnifier should automatically close immediately after a user clicks the left mouse button to select a color; false if the Magnifier closes only when user presses “Esc” or clicks the right mouse button.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialog"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An IWin32Window object that owns this Magnifier.</param>
      <param name="initialZoomFactor">A Single value that is the initial Magnifier zoom level. Users can zoom in and out using a mouse scroll wheel.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialog"/> class with the specified settings.</para>
      </summary>
      <param name="owner">An IWin32Window object that owns this Magnifier.</param>
      <returns>A <see cref="T:DevExpress.Utils.MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.</returns>
    </member>
    <member name="T:DevExpress.Utils.MagnifierDialogArgs">
      <summary>
        <para>Provides settings that allow you to invoke the <see cref="T:DevExpress.Utils.MagnifierDialog"/> with specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.MagnifierDialogArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.MagnifierDialogArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogArgs.CloseOnMouseClick">
      <summary>
        <para>Specifies whether a Magnifier should automatically close immediately after a user clicks the left mouse button to select a color.</para>
      </summary>
      <value>true if the Magnifier should automatically close immediately after a user clicks a left mouse button to select a color; false if the Magnifier closes only when user presses “Esc” or clicks the right mouse button.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogArgs.ColorFormat">
      <summary>
        <para>Gets or sets whether the Magnifier displays hovered and remembered colors in RGB or HEX format.</para>
      </summary>
      <value>A ColorFormat enumeration value that specifies whether the Magnifier displays hovered and remembered colors in RGB or HEX formats.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogArgs.InitialZoomFactor">
      <summary>
        <para>Gets or sets the Magnifier start-up zoom level. End-users can scroll in and out by using a mouse scroll wheel.</para>
      </summary>
      <value>A Single value that specifies the Magnifier start-up zoom level.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogArgs.PickColorToClipboard">
      <summary>
        <para>Gets or sets whether or not a color chosen by a user should be automatically copied to the clipboard.</para>
      </summary>
      <value>true, to copy a selected color to the clipboard; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogArgs.ShowColors">
      <summary>
        <para>Gets or sets whether the magnifier should display the currenly hovered and last clicked colors in its upper right corner. Colors are displayed as RGB or Hex values depending on the <see cref="P:DevExpress.Utils.MagnifierDialogArgs.ColorFormat">ColorFormat</see> property value.</para>
      </summary>
      <value>true to display color codes in the upper right corner of the magnifier, false if color codes should be hidden.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogArgs.ShowPixelGrid">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.Utils.MagnifierDialog"/> should display a pixel grid inside its client area.</para>
      </summary>
      <value>true, to display a pixel grid; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.MagnifierDialogResult">
      <summary>
        <para>An object that stores colors chosen by a user in the <see cref="T:DevExpress.Utils.MagnifierDialog"/> and the Magnifier’s last remembered zoom level.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogResult.HoverColor">
      <summary>
        <para>Retrieves the last color under the Magnifier crosshair.</para>
      </summary>
      <value>A Color that was the last color under the Magnifier crosshair before the Magnifier closed.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogResult.SelectedColor">
      <summary>
        <para>Retrieves the last color picked by a user. A user must click the left mouse button to select a color.</para>
      </summary>
      <value>A nullable Color value that is the last color picked by a user.</value>
    </member>
    <member name="P:DevExpress.Utils.MagnifierDialogResult.ZoomFactor">
      <summary>
        <para>Retrieves the last remembered Magnifier zoom level.</para>
      </summary>
      <value>A Single value that is the last remembered Magnifier zoom level.</value>
    </member>
    <member name="N:DevExpress.Utils.Menu">
      <summary>
        <para>Contains classes that are used to implement context menus in DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Menu.CommandPopupMenu`1">
      <summary>
        <para>Base class for the popup (context) menu of Office-inspired controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.CommandPopupMenu`1"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.#ctor(System.EventHandler)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.CommandPopupMenu`1"/> class with the specified caption and the handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">DXSubMenuItem.BeforePopup</see> event.</para>
      </summary>
      <param name="beforePopup">An event handler that will be invoked when the menu is about to be displayed. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">DXSubMenuItem.BeforePopup</see> event.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.DisableMenuItem(`0,System.Boolean)">
      <summary>
        <para>Find a menu item specified by its Id and disable it.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
      <param name="recursive">true to search nested menus recursively; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.DisableMenuItem(`0)">
      <summary>
        <para>Find a menu item specified by its Id and disable it.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.EnableMenuItem(`0,System.Boolean)">
      <summary>
        <para>Find a menu item specified by its Id and enable it.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
      <param name="recursive">true to search nested menus recursively; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.EnableMenuItem(`0)">
      <summary>
        <para>Find a menu item specified by its Id and enable it.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.GetDXMenuItemById(DevExpress.Utils.Menu.DXPopupMenu,`0,System.Boolean)">
      <summary>
        <para>Searches for a menu item specified by its ID within a specified menu object.</para>
      </summary>
      <param name="menu">A <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> object that is the menu from which a search starts.</param>
      <param name="id">An integer that is the position of the menu item within the menu object.</param>
      <param name="recursive">true, to search nested menus recursively; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> object if the menu with a specified identifier is found; otherwise null (or Nothing in Visual Basic)</returns>
    </member>
    <member name="P:DevExpress.Utils.Menu.CommandPopupMenu`1.Id">
      <summary>
        <para>Gets or sets menu identifier.</para>
      </summary>
      <value>An object serving as a menu identifier.</value>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveMenuCheckItem(`0,System.Int32)">
      <summary>
        <para>Moves a menu item with a check mark to a specified position.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
      <param name="to">An integer that is the position of a menu item within the menu object.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveMenuItem(`0,System.Int32)">
      <summary>
        <para>Moves a menu item to a specified position.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
      <param name="to">An integer that is the position of a menu item within the menu object.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveMenuItem(DevExpress.Utils.Menu.DXMenuItem,System.Int32)">
      <summary>
        <para>Moves a menu item to a specified position.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> object that is the menu item.</param>
      <param name="to">An integer that is the position of a menu item within the menu object.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveSubMenuItem(`0,System.Int32)">
      <summary>
        <para>Moves a submenu item to a specified position.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
      <param name="to">An integer that is the position of a menu item within the menu object.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.RemoveMenuItem(`0,System.Boolean)">
      <summary>
        <para>Find a menu item specified by its Id and remove it.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
      <param name="recursive">true, to search nested menus recursively; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.RemoveMenuItem(`0)">
      <summary>
        <para>Find a menu item specified by its Id and remove it.</para>
      </summary>
      <param name="id">An object serving as a menu identifier.</param>
    </member>
    <member name="T:DevExpress.Utils.Menu.DXButtonGroupItem">
      <summary>
        <para>A group of buttons that can be displayed within a <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXButtonGroupItem.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Utils.Menu.DXButtonGroupItem"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Menu.DXMenuCheckItem">
      <summary>
        <para>Represents a menu item that can be checked and unchecked.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuCheckItem"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(System.String,System.Boolean,System.Drawing.Image,System.EventHandler)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuCheckItem"/> class with the specified caption, image, check state and event handler.</para>
      </summary>
      <param name="caption">A string that specifies the menu item’s caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="check">A Boolean value that specifies the menu item’s check state. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked">DXMenuCheckItem.Checked</see> property.</param>
      <param name="image">An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image">DXMenuItem.Image</see> property.</param>
      <param name="checkedChanged">An event handler that will be invoked when the check state is toggled. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuCheckItem.CheckedChanged">DXMenuCheckItem.CheckedChanged</see> event.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuCheckItem"/> class with the specified caption and check state.</para>
      </summary>
      <param name="caption">A string that specifies the menu item’s caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="check">A Boolean value that specifies the menu item’s check state. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked">DXMenuCheckItem.Checked</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuCheckItem"/> class with the specified caption.</para>
      </summary>
      <param name="caption">A string that specifies the menu item’s caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked">
      <summary>
        <para>Gets or sets a value indicating whether the menu item is checked.</para>
      </summary>
      <value>true if the menu item is checked; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXMenuCheckItem.CheckedChanged">
      <summary>
        <para>Occurs when the menu item’s check state is toggled.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Menu.DXMenuItem">
      <summary>
        <para>Represents a regular menu item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,DevExpress.Utils.Menu.DXMenuItemPriority)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified caption and display priority.</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="priority">A DXMenuItemPriority enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority">DXMenuItem.Priority</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,DevExpress.Utils.Menu.DXMenuItemPriority)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified caption, display priority and Click event handler.</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="click">An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</param>
      <param name="priority">A DXMenuItemPriority enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority">DXMenuItem.Priority</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,DevExpress.Utils.Svg.SvgImage,DevExpress.Utils.Menu.DXMenuItemPriority)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified settings.</para>
      </summary>
      <param name="caption">The menu item’s caption.</param>
      <param name="click">The EventHandler object that handles the menu item’s Click event.</param>
      <param name="svgImage">The <see cref="P:DevExpress.Utils.Menu.DXMenuItem.SvgImage">DXMenuItem.SvgImage</see> property value.</param>
      <param name="priority">The <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority">DXMenuItem.Priority</see> property value.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Menu.DXMenuItemPriority)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified settings.</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="click">An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</param>
      <param name="image">An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image">DXMenuItem.Image</see> property.</param>
      <param name="imageDisabled">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled">DXMenuItem.ImageDisabled</see> property.</param>
      <param name="largeImage">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImage">DXMenuItem.LargeImage</see> property.</param>
      <param name="largeImageDisabled">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImageDisabled">DXMenuItem.LargeImageDisabled</see> property.</param>
      <param name="priority">A DXMenuItemPriority enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority">DXMenuItem.Priority</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified settings.</para>
      </summary>
      <param name="caption">A string used to initialize the item’s <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="click">A handler for the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</param>
      <param name="image">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image">DXMenuItem.Image</see> property.</param>
      <param name="imageDisabled">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled">DXMenuItem.ImageDisabled</see> property.</param>
      <param name="largeImage">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImage">DXMenuItem.LargeImage</see> property.</param>
      <param name="largeImageDisabled">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImageDisabled">DXMenuItem.LargeImageDisabled</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image,System.Drawing.Image)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified settings.</para>
      </summary>
      <param name="caption">A string used to initialize the item’s <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="click">A handler for the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</param>
      <param name="image">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image">DXMenuItem.Image</see> property.</param>
      <param name="imageDisabled">An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled">DXMenuItem.ImageDisabled</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified caption, image and Click event handler</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="click">An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</param>
      <param name="image">An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image">DXMenuItem.Image</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified caption and Click event handler</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="click">An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> class with the specified caption.</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.AllowGlyphSkinning">
      <summary>
        <para>Gets or sets whether the current <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> icon should be painted in the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>‘s foreground color.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> icon should be painted in the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>‘s foreground color; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Appearance">
      <summary>
        <para>Provides access to the appearance settings used to paint the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> in the normal state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.AppearanceDisabled">
      <summary>
        <para>Provides access to the appearance settings used to paint the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> in the disbled state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.AppearanceHovered">
      <summary>
        <para>Provides access to the appearance settings used to paint the <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> in the hovered state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.BeginGroup">
      <summary>
        <para>Gets or sets whether the current menu item starts a group.</para>
      </summary>
      <value>true if the menu item starts a group; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.BindCommand(System.Linq.Expressions.Expression{System.Action},System.Object,System.Func{System.Object})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.BindCommand(System.Object,System.Func{System.Object})">
      <summary>
        <para>Binds the specific parameterized command to this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <param name="command">An Object that is the command to be bound to this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.BindCommand``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Object,System.Func{``0})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <typeparam name="T">The type of a ViewModel that stores a bindable command.</typeparam>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Caption">
      <summary>
        <para>Specifies the text displayed within the menu item.</para>
      </summary>
      <value>A string that specifies the text displayed within the menu item.</value>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXMenuItem.Click">
      <summary>
        <para>Occurs when the menu item’s functionality needs to be invoked.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.CloseMenuOnClick">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.CloseOwnerMenuOnlyOnClick">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Collection">
      <summary>
        <para>Gets the menu item collection which owns the current menu item.</para>
      </summary>
      <value>A DevExpress.Utils.Menu.DXMenuItemCollection collection which owns the current menu item.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Command">
      <summary>
        <para>Gets or sets the ICommand whose Execute(Object) method will be called when the Click event is invoked.</para>
      </summary>
      <value>The command.</value>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXMenuItem.CommandCanExecuteChanged">
      <summary>
        <para>Occurs when the CanExecute(Object) status of the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Command"/> has changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXMenuItem.CommandChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Command"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.CommandParameter">
      <summary>
        <para>Gets or sets the parameter that is passed to the command specified by the Command property.</para>
      </summary>
      <value>The parameter.</value>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXMenuItem.CommandParameterChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.CommandParameter"/> property has changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.Dispose">
      <summary>
        <para>Releases all the resources used by the current object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Enabled">
      <summary>
        <para>Gets or sets whether the menu item is enabled.</para>
      </summary>
      <value>true if the menu item is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.GenerateClickEvent">
      <summary>
        <para>Invokes the event handler assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click">DXMenuItem.Click</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.GetImage(DevExpress.Utils.Design.ISvgPaletteProvider)">
      <summary>
        <para>Returns the actual raster image displayed by this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <param name="palette">An ISvgPaletteProvider that colorizes SVG icons depending on the currently applied <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">DevExpress skin</see>.</param>
      <returns>An Image displayed by this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.GetImageSize">
      <summary>
        <para>Returns the size of the image displayed by this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <returns>A Size structure that specifies the size of the image displayed by this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXMenuItem.GetIsRightToLeft">
      <summary>
        <para>Returns whether the current menu item is actually aligned to support locales using right-to-left fonts.</para>
      </summary>
      <returns>true if the current item is actually aligned to support locales using right-to-left fonts; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.HasImage">
      <summary>
        <para>Returns whether or not this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> has an image assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> has an image assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Image">
      <summary>
        <para>Gets or sets an image displayed within the menu item,</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object that specifies the image displayed within the menu item.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled">
      <summary>
        <para>Gets or sets an image representing the menu item in the disabled state.</para>
      </summary>
      <value>An Image object representing the menu item in the disabled state.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.ImageOptions">
      <summary>
        <para>Provides access to settings that allow you to set up raster and <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector</see> icons for this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <value>An DevExpress.Utils.Menu.DXMenuItemImageOptions object that stores image-related options.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.IsRightToLeft">
      <summary>
        <para>Gets or sets whether the menu item is aligned to support locales using right-to-left fonts.</para>
      </summary>
      <value>true if the menu item is aligned to support locales using right-to-left fonts; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.LargeImage">
      <summary>
        <para>Gets or sets a large image for the current menu item.</para>
      </summary>
      <value>An Image object that is a large image for the current menu item.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.LargeImageDisabled">
      <summary>
        <para>Gets or sets a large image displayed in the current menu item when it is in the disabled state.</para>
      </summary>
      <value>An Image object that is a large image displayed in the current menu item when it is in the disabled state.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Owner">
      <summary>
        <para>Gets or sets the object that owns this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <value>An object that owns this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Priority">
      <summary>
        <para>Gets or sets the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>.</para>
      </summary>
      <value>A DXMenuItemPriority enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Shortcut">
      <summary>
        <para>Gets or sets a shortcut displayed within the menu item</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.Shortcut"/> value that specifies a shortcut.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.ShowHotKeyPrefix">
      <summary>
        <para>Gets or sets whether the ampersand (‘&amp;’) character, when it is found in the item’s <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see>, acts as a shortcut prefix, or it is displayed as is.</para>
      </summary>
      <value>true if the ampersand (‘&amp;’) character, when it is found in the item’s <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see>, acts as a shortcut prefix; false if the ampersand (‘&amp;’) is displayed as is.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.SuperTip">
      <summary>
        <para>Gets or sets a super tip for this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object assigned to this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.SvgImage">
      <summary>
        <para>Gets or sets the <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector image</see> that is this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> icon.</para>
      </summary>
      <value>An SvgImage object that is the vector image assigned to this <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Tag">
      <summary>
        <para>Gets or sets the data associated with the menu item.</para>
      </summary>
      <value>An object that contains the information which is associated with the menu item.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXMenuItem.Visible">
      <summary>
        <para>Gets or sets whether the menu item is visible.</para>
      </summary>
      <value>true if the menu item is visible; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.Menu.DXPopupMenu">
      <summary>
        <para>A base class for popup menus in DevExpress .NET controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor(DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This method supports internal infrastructure and is not intended to be used in code.</para>
      </summary>
      <param name="scaleDPI" />
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor(System.EventHandler,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This method supports internal infrastructure and is not intended to be used in code.</para>
      </summary>
      <param name="beforePopup" />
      <param name="scaleDPI" />
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor(System.Windows.Forms.Control,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This method supports internal infrastructure and is not intended to be used in code.</para>
      </summary>
      <param name="contextOwnerControl" />
      <param name="scaleDPI" />
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.Alignment">
      <summary>
        <para>Gets or sets the menu’s alignment relative to the mouse cursor.</para>
      </summary>
      <value>The ContentAlignment value that is the alignment of the menu relative to the mouse cursor.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.AllowToolbarTransparency">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXPopupMenu.CloseUp">
      <summary>
        <para>Fires after the menu has been closed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ContextOwnerControl">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.DeviceDpi">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from code.</para>
      </summary>
      <value />
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.EnsureMenuDPI(DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>This method supports internal infrastructure and is not intended to be used in code.</para>
      </summary>
      <param name="scaleDPI" />
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.GenerateCloseUpEvent">
      <summary>
        <para>Fires a specific event that typically occurs after the menu has disappeared.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.GetIsRightToLeft">
      <summary>
        <para>Returns whether the menu items are actually aligned to support locales using right-to-left fonts.</para>
      </summary>
      <returns>true if menu items are actually aligned to support locales using right-to-left fonts; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.HidePopup">
      <summary>
        <para>Hides the current popup menu.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.IsDesignTimeMenu">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.IsRightToLeft">
      <summary>
        <para>Gets or sets whether the menu is aligned to support locales using right-to-left fonts.</para>
      </summary>
      <value>true if the menu is aligned to support locales using right-to-left fonts; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXPopupMenu.ItemClick">
      <summary>
        <para>Fires whenever a user clicks any item that belongs to this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Menu.DXPopupMenu.MaxSubMenuLevel">
      <summary>
        <para>Specifies the maximum menu depth for all <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> descendants in this solution. Menus with a nesting level that exceeds this value will be unable to expand certain sub-menu items.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.MenuViewType">
      <summary>
        <para>Gets or sets how the current menu is displayed (as a menu, floating bar or <see cref="T:DevExpress.XtraBars.Ribbon.RibbonMiniToolbar"/>).</para>
      </summary>
      <value>A MenuViewType value</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.MultiColumn">
      <summary>
        <para>Gets or sets whether items in this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> can be displayed in multiple columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not items in this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> can be displayed in multiple columns.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.OptionsMultiColumn">
      <summary>
        <para>Provides access to the set of properties that manage multi-column item layout in this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/>.</para>
      </summary>
      <value>A DevExpress.Utils.Menu.OptionsMultiColumn object that stores properties which manage multi-column item layout in this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.OwnerPopup">
      <summary>
        <para>Gets or sets the object that created the current popup menu. For internal use.</para>
      </summary>
      <value>An object that created the current popup menu.</value>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXPopupMenu.PopupHide">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ScaleDPI">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from code.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ScaleFactor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from code.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ShowCaption">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> should display its caption. This setting is in effect only when the menu is associated with the Bar Manager.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ShowItemToolTips">
      <summary>
        <para>Gets or sets whether this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> items should display their hints.</para>
      </summary>
      <value>true if these <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> items should display their hints; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.ShowPopup(System.Windows.Forms.Control,System.Drawing.Point,System.Boolean)">
      <summary>
        <para>Displays the <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> at specific coordinates. For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXPopupMenu.ShowPopup(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>
        <para>Displays the <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> at specific coordinates.</para>
      </summary>
      <param name="control">A Control that is the parent control for this <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/>.</param>
      <param name="location">A Point structure that specifies the menu location.</param>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ToolbarHideDistance">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ToolbarRowCount">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Menu.DXSubMenuItem">
      <summary>
        <para>Specifies a submenu.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXSubMenuItem"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor(System.String,System.EventHandler)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXSubMenuItem"/> class with the specified caption and the handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">DXSubMenuItem.BeforePopup</see> event.</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
      <param name="beforePopup">A handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">DXSubMenuItem.BeforePopup</see> event.</param>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Menu.DXSubMenuItem"/> class with the specified caption.</para>
      </summary>
      <param name="caption">A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption">DXMenuItem.Caption</see> property.</param>
    </member>
    <member name="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">
      <summary>
        <para>Allows you to dynamically provide sub-items for the current <see cref="T:DevExpress.Utils.Menu.DXSubMenuItem"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.GenerateBeforePopupEvent">
      <summary>
        <para>Invokes the event handler assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">DXSubMenuItem.BeforePopup</see> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Menu.DXSubMenuItem.Items">
      <summary>
        <para>Gets a collection of items displayed when the current submenu is expanded.</para>
      </summary>
      <value>A DevExpress.Utils.Menu.DXMenuItemCollection object which contains menu items displayed when the submenu is expanded.</value>
    </member>
    <member name="T:DevExpress.Utils.Menu.IDXDropDownControl">
      <summary>
        <para>Contains methods to operate on <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.IDXDropDownControl.Hide">
      <summary>
        <para>Hides the current popup control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Menu.IDXDropDownControl.Show(DevExpress.Utils.Menu.IDXMenuManager,System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>
        <para>Displays the current popup control using a menu manager.</para>
      </summary>
      <param name="manager">An IDXMenuManager object that displays a popup control in a specific manner.</param>
      <param name="control">A parent control for the current popup control.</param>
      <param name="pos">A position where a popup control will be displayed.</param>
    </member>
    <member name="P:DevExpress.Utils.Menu.IDXDropDownControl.Visible">
      <summary>
        <para>Gets whether the current popup control is visible.</para>
      </summary>
      <value>true if the current popup control is visible; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.Menu.MenuViewType">
      <summary>
        <para>Contains values that specify how a <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> is displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Menu.MenuViewType.Menu">
      <summary>
        <para>A menu is displayed as a regular popup menu.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Menu.MenuViewType.RibbonMiniToolbar">
      <summary>
        <para>A menu is displayed as a <see cref="T:DevExpress.XtraBars.Ribbon.RibbonMiniToolbar"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Menu.MenuViewType.Toolbar">
      <summary>
        <para>A menu is displayed as a popup bar.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.MVVM">
      <summary>
        <para>Contains classes used to build MVVM-aware applications.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.MVVM.MVVMContext">
      <summary>
        <para>Generates View Models and manages their lifecycle.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.MVVM.MVVMContextCompositionRoot">
      <summary>
        <para>Allows you to bind data types created by <see href="https://docs.devexpress.com/WindowsForms/113955/build-an-application/winforms-mvvm">DevExpress MVVM Framework</see> at runtime to a dependency injection framework.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.RatingContextButton">
      <summary>
        <para>A context item that allows an end-user to rate the content using the grading scale.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.RatingContextButton.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.RatingContextButton"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.CheckedGlyph">
      <summary>
        <para>Gets or sets the glyph representing checked points.</para>
      </summary>
      <value>An Image that specifies the glyph representing checked points.</value>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.FillPrecision">
      <summary>
        <para>Gets or sets whether the rating can be specified with precision up to integers, integers and half-integers, or decimals.</para>
      </summary>
      <value>A DevExpress.XtraEditors.RatingItemFillPrecision enumeration value that specifies the rating precision.</value>
    </member>
    <member name="M:DevExpress.Utils.RatingContextButton.GetActualCheckedGlyph(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns the Image object specifying the checked point glyph actually assigned.</para>
      </summary>
      <param name="provider">An ISkinProvider object.</param>
      <returns>The Image object specifying the checked point glyph actually assigned.</returns>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.HasCheckedGlyph">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.RatingContextButton"/> has a checked point glyph assigned.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.RatingContextButton"/> has a checked point glyph assigned; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.ImageOptions">
      <summary>
        <para>Provides access to all properties related to the <see cref="T:DevExpress.Utils.RatingContextButton"/> grading scale glyphs.</para>
      </summary>
      <value>A DevExpress.Utils.RatingContextButtonImageOptions object that stores all icon-related settings.</value>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.ImageOptionsCollection">
      <summary>
        <para>Provides access to individual image-related property sets for every <see cref="T:DevExpress.Utils.RatingContextButton"/> visual state - Normal, Hovered, and Checked.</para>
      </summary>
      <value>A DevExpress.Utils.RatingContextButtonImageOptionsCollection object that stores image-related settings for this <see cref="T:DevExpress.Utils.RatingContextButton"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.ItemCount">
      <summary>
        <para>Gets or sets the number of points in the grading scale.</para>
      </summary>
      <value>An integer value that specifies the number of points in the grading scale.</value>
    </member>
    <member name="P:DevExpress.Utils.RatingContextButton.Rating">
      <summary>
        <para>Gets or sets the rating specified by the current item.</para>
      </summary>
      <value>A decimal value that specifies the content rating.</value>
    </member>
    <member name="T:DevExpress.Utils.SharedImageCollection">
      <summary>
        <para>An image collection that allows you to share images between controls on multiple forms.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SharedImageCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SharedImageCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SharedImageCollection.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SharedImageCollection"/> class with the specified container.</para>
      </summary>
      <param name="container">An object that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.</param>
    </member>
    <member name="P:DevExpress.Utils.SharedImageCollection.AllowModifyingResources">
      <summary>
        <para>Gets or sets whether or not <see cref="T:DevExpress.Utils.SharedImageCollection"/>s are allowed to modify the project resource file.</para>
      </summary>
      <value>true if <see cref="T:DevExpress.Utils.SharedImageCollection"/>s are allowed to modify the project resource file; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.SharedImageCollection.BeginInit">
      <summary>
        <para>Notifies the image collection that initialization has started</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SharedImageCollection.EndInit">
      <summary>
        <para>Notifies the image collection that initialization is complete.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SharedImageCollection.HasChanges">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.SharedImageCollection.ImageSizeResourceName">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.SharedImageCollection.ImageSource">
      <summary>
        <para>Gets or sets the inner collection of images for the <see cref="T:DevExpress.Utils.SharedImageCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ImageCollection"/> object that is the inner collection of images.</value>
    </member>
    <member name="P:DevExpress.Utils.SharedImageCollection.InstanceCount">
      <summary>
        <para>Gets the number of existing <see cref="T:DevExpress.Utils.SharedImageCollection"/> instances.</para>
      </summary>
      <value>An integer value that is the number of existing <see cref="T:DevExpress.Utils.SharedImageCollection"/> instances.</value>
    </member>
    <member name="P:DevExpress.Utils.SharedImageCollection.ParentControl">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.SharedImageCollection.TimestampResourceName">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.SharedImageCollectionImageSizeMode">
      <summary>
        <para>The enumeration specifies the size of images being displayed within an object, when images are obtained from a <see cref="T:DevExpress.Utils.SharedImageCollection"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.SharedImageCollectionImageSizeMode.UseCollectionImageSize">
      <summary>
        <para>The size of an image being displayed by an object is determined by the ImageSize property of the bound <see cref="T:DevExpress.Utils.SharedImageCollection"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.SharedImageCollectionImageSizeMode.UseImageSize">
      <summary>
        <para>The size of an image being displayed by an object is determined by the size of the corresponding Image item in the bound <see cref="T:DevExpress.Utils.SharedImageCollection"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.SimpleContextItemCollectionOptions">
      <summary>
        <para>The base class for simple context items’ options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SimpleContextItemCollectionOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SimpleContextItemCollectionOptions"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SimpleContextItemCollectionOptions.#ctor(DevExpress.Utils.IContextItemCollectionOptionsOwner)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SimpleContextItemCollectionOptions"/> class with specified settings.</para>
      </summary>
      <param name="owner">An object that implements the IContextItemCollectionOptionsOwner interface and that owns a new <see cref="T:DevExpress.Utils.ContextItemCollectionOptions"/>.</param>
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.BottomPanelColor">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.BottomPanelPadding">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.CenterPanelColor">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.CenterPanelPadding">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.FarPanelColor">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.FarPanelPadding">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.NearPanelColor">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.NearPanelPadding">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.TopPanelColor">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="P:DevExpress.Utils.SimpleContextItemCollectionOptions.TopPanelPadding">
      <summary>
        <para>Simple context items do not support this setting.</para>
      </summary>
      <value />
    </member>
    <member name="T:DevExpress.Utils.SuperToolTip">
      <summary>
        <para>Represents a tooltip that supports multiple text and image regions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SuperToolTip.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SuperToolTip"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.AllowHtmlText">
      <summary>
        <para>Gets or sets whether HTML formatting is allowed in this tooltip.</para>
      </summary>
      <value><see cref="F:DevExpress.Utils.DefaultBoolean.True"/>, to enable HTML formatting; <see cref="F:DevExpress.Utils.DefaultBoolean.False"/>, to disable; <see cref="F:DevExpress.Utils.DefaultBoolean.Default"/>, to use the <see cref="P:DevExpress.Utils.ToolTipController.AllowHtmlText">ToolTipController.AllowHtmlText</see> setting.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.Appearance">
      <summary>
        <para>This class does not support this proprty. Use a tooltip region’s Appearance property to specify appearance settings for the region.</para>
      </summary>
      <value>An object that specifies appearance settings.</value>
    </member>
    <member name="M:DevExpress.Utils.SuperToolTip.Assign(DevExpress.Utils.SuperToolTip)">
      <summary>
        <para>Copies the settings and contents of the specified tooltip to the current object.</para>
      </summary>
      <param name="source">A source <see cref="T:DevExpress.Utils.SuperToolTip"/> object.</param>
    </member>
    <member name="M:DevExpress.Utils.SuperToolTip.Clone">
      <summary>
        <para>Returns a copy of the current object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object which is a copy of the current tooltip.</returns>
    </member>
    <member name="F:DevExpress.Utils.SuperToolTip.DefaultDistanceBetweenItems">
      <summary>
        <para>The default distance between items. This constant specifies the default value for the <see cref="P:DevExpress.Utils.SuperToolTip.DistanceBetweenItems">SuperToolTip.DistanceBetweenItems</see> property.</para>
      </summary>
      <value>An integer value that specifies the default distance between items.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.DistanceBetweenItems">
      <summary>
        <para>Specifies the distance between tooltip regions (title, content, footer, etc.).</para>
      </summary>
      <value>An integer which specifies the distance between tooltip regions (title, content, footer, etc.).</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.FixedTooltipWidth">
      <summary>
        <para>Gets or sets whether the tooltip width is fixed or corresponds to the content.</para>
      </summary>
      <value>true, if the tooltip width is fixed; false, if the tooltip is automatically resized to fit its content.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.IsEmpty">
      <summary>
        <para>Gets whether this tooltip contains regions.</para>
      </summary>
      <value>true if the <see cref="P:DevExpress.Utils.SuperToolTip.Items"/> collection is empty; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.SuperToolTip.IsNullOrEmpty(DevExpress.Utils.SuperToolTip)">
      <summary>
        <para>Determines whether the specified tooltip exists and has content.</para>
      </summary>
      <param name="toolTip">A super tooltip to check.</param>
      <returns>true if the target super tooltip does not exist or has no content; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.Items">
      <summary>
        <para>Gets the collection of objects that represent regions (title, content, etc.) in a super tooltip.</para>
      </summary>
      <value>The collection of objects that represent regions (title, content, etc.) in a super tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.LookAndFeel">
      <summary>
        <para>This class does not support this property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.MaxWidth">
      <summary>
        <para>Specifies the tooltip maximum width in pixels.</para>
      </summary>
      <value>An integer value that specifies the tooltip’s maximum width.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.OwnerAllowHtmlText">
      <summary>
        <para>Gets whether the tooltip controller allows you to use the <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML tags</see> to format the text in this tooltip.</para>
      </summary>
      <value>true if the tooltip controller allows you to use the <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML tags</see> to format the text in this tooltip; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.Padding">
      <summary>
        <para>Gets or sets the padding (space between the content of the tooltip and its edge).</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.Padding"/> structure that specifies the space between the content of the tooltip and its edge.</value>
    </member>
    <member name="P:DevExpress.Utils.SuperToolTip.RightToLeft">
      <summary>
        <para>Gets or sets whether tooltip’s visual elements are aligned to support locales using right-to-left fonts.</para>
      </summary>
      <value>true if tooltip’s visual elements are aligned to support locales using right-to-left fonts; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.SuperToolTip.Setup(DevExpress.Utils.SuperToolTipSetupArgs)">
      <summary>
        <para>Creates tooltip items based on the specified setup information.</para>
      </summary>
      <param name="info">A DevExpress.Utils.SuperToolTipSetupArgs object which contains initialization information.</param>
    </member>
    <member name="M:DevExpress.Utils.SuperToolTip.ToString">
      <summary>
        <para>Gets the textual representation of the current <see cref="T:DevExpress.Utils.SuperToolTip"/>.</para>
      </summary>
      <returns>A string which specifies the tooltip’s textual representation.</returns>
    </member>
    <member name="T:DevExpress.Utils.SvgImageCollection">
      <summary>
        <para>Stores <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector images</see> added by you and provides these images to DevExpress controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SvgImageCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SvgImageCollection"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.SvgImageCollection.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.SvgImageCollection"/> class with the specified settings.</para>
      </summary>
      <param name="container">An IContainer that specifies an object that owns this <see cref="T:DevExpress.Utils.SvgImageCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.SvgImageCollection.Clear(System.Boolean)">
      <summary>
        <para>Clears this collection and optionally disposes of its images.</para>
      </summary>
      <param name="disposeImages">true to dispose of collection images; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Utils.SvgImageCollection.FromResources(System.Reflection.Assembly)">
      <summary>
        <para>Generates a new <see cref="T:DevExpress.Utils.SvgImageCollection"/> instance filled with images from a project assembly.</para>
      </summary>
      <param name="assembly">An Assembly that contains the target embedded resource images.</param>
      <returns>An <see cref="T:DevExpress.Utils.SvgImageCollection"/> object that contains images from a project assembly.</returns>
    </member>
    <member name="M:DevExpress.Utils.SvgImageCollection.FromResources(System.String,System.Reflection.Assembly)">
      <summary>
        <para>Generates a new <see cref="T:DevExpress.Utils.SvgImageCollection"/> instance filled with images from a project assembly.</para>
      </summary>
      <param name="resourceBaseName">A String value that specifies the path to assembly images within a project.</param>
      <param name="assembly">An Assembly that contains the target embedded resource images.</param>
      <returns>A <see cref="T:DevExpress.Utils.SvgImageCollection"/> object that contains images from a project assembly.</returns>
    </member>
    <member name="P:DevExpress.Utils.SvgImageCollection.ImageInfos">
      <summary>
        <para>Returns the SvgImageInfo objects for all images owned by this <see cref="T:DevExpress.Utils.SvgImageCollection"/>.</para>
      </summary>
      <value>A DevExpress.Utils.SvgImageInfoCollection object that stores information for all the <see cref="T:DevExpress.Utils.SvgImageCollection"/> images.</value>
    </member>
    <member name="N:DevExpress.Utils.Taskbar">
      <summary>
        <para>Contains classes implementing the functionality of the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/>.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.Taskbar.Core">
      <summary>
        <para>Contains classes supporting the functionality of the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryPosition">
      <summary>
        <para>Defines the set of values that specify the position of the Frequent/Recent category in the Jump List.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryPosition.Bottom">
      <summary>
        <para>The Frequent/Recent category is displayed at the bottom of the Jump List.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryPosition.Top">
      <summary>
        <para>The Frequent/Recent category is displayed at the top of the Jump List.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility">
      <summary>
        <para>Defines the set of values that specify whether the Frequent category or Recent category is displayed in the Jump List, or none of them are displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility.FrequentlyUsedFiles">
      <summary>
        <para>The Frequent Category is displayed in the Jump List. This category contains the list of files that are frequently opened with the current application.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility.None">
      <summary>
        <para>Neither Frequent nor Recent category is displayed in the Jump List.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility.RecentFiles">
      <summary>
        <para>The Recent Category is displayed in the Jump List. This category contains the list of files that are recently opened with the current application.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode">
      <summary>
        <para>Contains values that specify the type of progress indicator to be displayed within taskbar buttons.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Error">
      <summary>
        <para>The same as the Normal mode, but the progress bar turns red to indicate that an error has occurred.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Indeterminate">
      <summary>
        <para>An indeterminate marquee-style progress indicator, which cycles repeatedly along the length of the taskbar button.</para>
        <para />
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.NoProgress">
      <summary>
        <para>Stops displaying progress and returns the button to its regular state.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Normal">
      <summary>
        <para>The determinate progress indicator that grows in size from left to right. Advance the progress value with the <see cref="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressCurrentValue">TaskbarAssistant.ProgressCurrentValue</see> property.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Paused">
      <summary>
        <para>The same as the Normal mode, but the progress turns yellow to indicate that progress is currently stopped.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.IJumpListItem">
      <summary>
        <para>This interface supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.JumpListCategory">
      <summary>
        <para>Represents a custom category in a Jump List.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListCategory.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListCategory.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/> class with the specified settings.</para>
      </summary>
      <param name="caption">A string value that is used to initialize the <see cref="P:DevExpress.Utils.Taskbar.JumpListCategory.Caption">JumpListCategory.Caption</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListCategory.Caption">
      <summary>
        <para>Gets or sets a caption of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/>.</para>
      </summary>
      <value>A caption of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListCategory.JumpItems">
      <summary>
        <para>Gets or sets a collection of tasks in the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/>.</para>
      </summary>
      <value>A collection of tasks in the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/>.</value>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.JumpListCategoryCollection">
      <summary>
        <para>Represents the collection of <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategoryCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryCollection.Dispose">
      <summary>
        <para>Releases all resources used by elements of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategoryCollection"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection">
      <summary>
        <para>Represents the collection of items in a Jump List category.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection.Dispose">
      <summary>
        <para>Releases all resources used by elements of the <see cref="T:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.JumpListItemSeparator">
      <summary>
        <para>Represents the separator that separates tasks in the <see cref="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListTasksCategory">TaskbarAssistant.JumpListTasksCategory</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemSeparator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemSeparator"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemSeparator.ToString">
      <summary>
        <para>Converts an object to its string representation.</para>
      </summary>
      <returns>This method returns “Separator”.</returns>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.JumpListItemTask">
      <summary>
        <para>Represents a task in a Jump List.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/> class with the specified settings.</para>
      </summary>
      <param name="caption">A string value that is used to initialize the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Caption">JumpListItemTask.Caption</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Arguments">
      <summary>
        <para>Gets or sets the arguments for a command file specified in the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Path">JumpListItemTask.Path</see> property.</para>
      </summary>
      <value>The arguments for a command file specified in the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Path">JumpListItemTask.Path</see> property.</value>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.BindCommand(System.Linq.Expressions.Expression{System.Action},System.Object,System.Func{System.Object})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.BindCommand(System.Object,System.Func{System.Object})">
      <summary>
        <para>Binds the specific parameterized command to this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</para>
      </summary>
      <param name="command">An Object that is the command to be bound to this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.BindCommand``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Object,System.Func{``0})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <typeparam name="T">The type of a ViewModel that stores a bindable command.</typeparam>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Caption">
      <summary>
        <para>Gets or sets a caption of the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</para>
      </summary>
      <value>A caption of the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</value>
    </member>
    <member name="E:DevExpress.Utils.Taskbar.JumpListItemTask.Click">
      <summary>
        <para>Fires when a task has been clicked.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.Clone">
      <summary>
        <para>Creates a new object that is a copy of the current <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</para>
      </summary>
      <returns>A new object that is a copy of the current <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Collection">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Command">
      <summary>
        <para>Gets or sets the ICommand whose Execute(Object) method will be called when the Click event is invoked.</para>
      </summary>
      <value>The command.</value>
    </member>
    <member name="E:DevExpress.Utils.Taskbar.JumpListItemTask.CommandCanExecuteChanged">
      <summary>
        <para>Occurs when the CanExecute(Object) status of the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Command"/> has changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Taskbar.JumpListItemTask.CommandChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Command"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.CommandParameter">
      <summary>
        <para>Gets or sets the parameter that is passed to the command specified by the Command property.</para>
      </summary>
      <value>The parameter.</value>
    </member>
    <member name="E:DevExpress.Utils.Taskbar.JumpListItemTask.CommandParameterChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.CommandParameter"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Description">
      <summary>
        <para>Gets or sets the task description shown in the tooltip.</para>
      </summary>
      <value>A String value that specifies the task description shown in the tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.IconIndex">
      <summary>
        <para>Gets or sets the index of an icon contained in the image source specified by the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.IconPath">JumpListItemTask.IconPath</see> property or in the resources of the <see cref="P:DevExpress.Utils.Taskbar.TaskbarAssistant.IconsAssembly">TaskbarAssistant.IconsAssembly</see> assembly.</para>
      </summary>
      <value>The index of an icon that is contained in the assembly resources.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.IconPath">
      <summary>
        <para>Gets or sets the path to an assembly or an image that is used to specify the icon for the current task.</para>
      </summary>
      <value>A string value that specifies the path to an assembly or an image that is used to specify the icon for the current task.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Path">
      <summary>
        <para>Gets or sets the full path to a destination folder or a file that is launched by the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</para>
      </summary>
      <value>The full path to a destination folder or a file that is launched by the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</value>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.RaiseClick">
      <summary>
        <para>Raises the <see cref="E:DevExpress.Utils.Taskbar.JumpListItemTask.Click">JumpListItemTask.Click</see> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.ShowCommand">
      <summary>
        <para>Gets or sets whether the program starts minimized, maximized, or normally.</para>
      </summary>
      <value>The WindowShowCommand enumeration value that specifies whether the program starts minimized, maximized, or normally. The default value is WindowShowCommand.Normal.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.WorkingDirectory">
      <summary>
        <para>Gets or sets the current directory for a process launched with a click on the current task.</para>
      </summary>
      <value>The current directory for a process that is launched with a click on the <see cref="T:DevExpress.Utils.Taskbar.JumpListItemTask"/>.</value>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.TaskbarAssistant">
      <summary>
        <para>Provides methods to manipulate an application taskbar button, Jump List and thumbnail preview.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.Assign(System.Windows.Forms.Control)">
      <summary>
        <para>Assigns the specified parent control to the current <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> component.</para>
      </summary>
      <param name="parent">A Control to be assigned the current <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> component.</param>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"></see> object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.Default">
      <summary>
        <para>Gets the default <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> component.</para>
      </summary>
      <value>The default <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> component.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.DesignTimeManager">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.FlashWindow(DevExpress.Utils.Taskbar.FlashFlags,System.Int32,System.Int32)">
      <summary>
        <para>Flashes the parent window. It does not change the window’s active state.</para>
      </summary>
      <param name="opt">A FlashFlags enumeration value that specifies the flash status (flash the window caption, flash the taskbar button, flash continuously until the window comes to the foreground, etc.). The enumeration supports bitwise operations, you can enable multiple flags.</param>
      <param name="count">An integer value that specifies the number of flashes.</param>
      <param name="timeout">An integer value that specifies the flash rate, in milliseconds. 0 to use the default cursor blink rate.</param>
      <returns>true if the window caption was drawn as active before the call; otherwise, false</returns>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.IconsAssembly">
      <summary>
        <para>Gets or sets the name of the assembly that contains icons (in resources) for Jump List tasks.</para>
      </summary>
      <value>A string value that specifies the name of the assembly that contains icons (in resources) for Jump List tasks.</value>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.Initialize">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListCustomCategories">
      <summary>
        <para>Provides access to the collection of custom categories in the Jump List.</para>
      </summary>
      <value>The collection of custom categories in the Jump List.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListKnownCategoryPosition">
      <summary>
        <para>Gets or sets the position of the Frequent or Recent category in the Jump List.</para>
      </summary>
      <value>The position of the Frequent or Recent category in the Jump List.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListKnownCategoryVisibility">
      <summary>
        <para>Gets or sets which category (Recent or Frequent) is enabled in the Jump List.</para>
      </summary>
      <value>A value that specifies which category (Recent or Frequent) is enabled in the Jump List.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListTasksCategory">
      <summary>
        <para>Provides access to the collection of items within the standard Tasks category in the Jump List.</para>
      </summary>
      <value>The collection of items within the standard Tasks category in the Jump List.</value>
    </member>
    <member name="F:DevExpress.Utils.Taskbar.TaskbarAssistant.MaxThumbnailButtonsCount">
      <summary>
        <para>The maximum number of thumbnail buttons in the live thumbnail preview. This field is equal to 7.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.OverlayIcon">
      <summary>
        <para>Gets or sets a small overlay icon displayed over the application icon.</para>
      </summary>
      <value>A small overlay icon displayed over the application icon.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ParentControl">
      <summary>
        <para>Gets or sets the Control to which the current <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> is bound.</para>
      </summary>
      <value>A System.Windows.Forms.Control object to which the current <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> is bound.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressCurrentValue">
      <summary>
        <para>Gets or sets the current value of a progress indicator within an application’s taskbar button.</para>
      </summary>
      <value>The current value of a progress indicator within an application’s taskbar button.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressMaximumValue">
      <summary>
        <para>Gets or sets the maximum value of a progress indicator within an application’s taskbar button.</para>
      </summary>
      <value>The maximum value of a progress indicator within an application’s taskbar button.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressMode">
      <summary>
        <para>Gets or sets the type of progress indicator within the taskbar button.</para>
      </summary>
      <value>A value that specifies the type of progress indicator within the taskbar button.</value>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.Refresh">
      <summary>
        <para>Updates the application taskbar button.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ThumbnailButtons">
      <summary>
        <para>Provides access to the collection of buttons displayed in the toolbar in the live thumbnail preview.</para>
      </summary>
      <value>A collection of toolbar buttons in the live thumbnail preview.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ThumbnailClipRegion">
      <summary>
        <para>Gets or sets the region of the application window that is used as a thumbnail in the live thumbnail preview.</para>
      </summary>
      <value>The region of the application window that is used as a thumbnail in the live thumbnail preview.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.UseSingleJumpListForAllAppInstances">
      <summary>
        <para>Gets or sets whether a single instance of the Jump List is used for all instances of the current application.</para>
      </summary>
      <value>true, if a single instance of the Jump List is used for all instances of the current application; false if every application instance uses its own Jump List instance.</value>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.Taskbar.ThumbnailButton.Click">ThumbnailButton.Click</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs.#ctor(System.IntPtr,DevExpress.Utils.Taskbar.ThumbnailButton)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs.Handle">
      <summary>
        <para>Gets the window handle that the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> is bound to.</para>
      </summary>
      <value>The window handle that the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> is bound to.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs.ThumbButton">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> that raised the event.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> that raised the event.</value>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.ThumbnailButton">
      <summary>
        <para>A button within the live thumbnail preview window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.ThumbnailButton.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.ThumbnailButton.#ctor(System.Drawing.Bitmap,System.String,System.IntPtr)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.Taskbar.ThumbnailButton.Click">
      <summary>
        <para>Fires when the button is clicked.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.DismissOnClick">
      <summary>
        <para>Gets or sets whether a click on this button automatically closes the live thumbnail preview.</para>
      </summary>
      <value>true if the live thumbnail preview is automatically closed on clicking the button; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Enabled">
      <summary>
        <para>Gets or sets whether the button is enabled.</para>
      </summary>
      <value>true if the button is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Image">
      <summary>
        <para>Gets or sets the image displayed within the button.</para>
      </summary>
      <value>The image displayed within the button.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.IsInteractive">
      <summary>
        <para>Gets or sets whether the button’s pressed state is visually indicated.</para>
      </summary>
      <value>true if the button’s pressed state is visually indicated; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Tooltip">
      <summary>
        <para>Gets or sets the button’s tooltip.</para>
      </summary>
      <value>The button’s tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Visible">
      <summary>
        <para>Gets or sets whether the button is visible.</para>
      </summary>
      <value>true if the button is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.WindowHandle">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Taskbar.ThumbnailButtonCollection">
      <summary>
        <para>Represents the collection of <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.ThumbnailButtonCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButtonCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Taskbar.ThumbnailButtonCollection.Dispose">
      <summary>
        <para>Disposes the current object and releases all the allocated resources.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.TextOptions">
      <summary>
        <para>Contains options that specify how text is rendered.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.#ctor(DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.TextOptions"/> class with the specified owner, the text settings are set to default values.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which becomes the owner of the current object.</param>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.#ctor(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,DevExpress.Utils.WordWrap,DevExpress.Utils.Trimming,DevExpress.Utils.HKeyPrefix)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.TextOptions"/> class with the specified alignments, word wrapping and text trimming options.</para>
      </summary>
      <param name="hAlignment">A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the horizontal alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HAlignment">TextOptions.HAlignment</see> property.</param>
      <param name="vAlignment">A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the vertical alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.VAlignment">TextOptions.VAlignment</see> property.</param>
      <param name="wordWrap">A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies word wrapping mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.WordWrap">TextOptions.WordWrap</see> property.</param>
      <param name="trimming">A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.Trimming">TextOptions.Trimming</see> property.</param>
      <param name="hotKeyPrefix">A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value that specifies the hotkey prefix for the text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HotkeyPrefix">TextOptions.HotkeyPrefix</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.#ctor(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,DevExpress.Utils.WordWrap,DevExpress.Utils.Trimming)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.TextOptions"/> class with the specified alignments, word wrapping and text trimming options.</para>
      </summary>
      <param name="hAlignment">A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the horizontal alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HAlignment">TextOptions.HAlignment</see> property.</param>
      <param name="vAlignment">A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the vertical alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.VAlignment">TextOptions.VAlignment</see> property.</param>
      <param name="wordWrap">A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies word wrapping mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.WordWrap">TextOptions.WordWrap</see> property.</param>
      <param name="trimming">A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.Trimming">TextOptions.Trimming</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.Assign(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Copies settings from the specified object to the current <see cref="T:DevExpress.Utils.TextOptions"/> object.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Utils.TextOptions"/> object whose settings are copied to the current object.</param>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.BeginUpdate">
      <summary>
        <para>Prevents a text’s visual updates when <see cref="P:DevExpress.PivotGrid.Printing.PrintAppearanceObject.TextOptions"/> are modified, until the <see cref="M:DevExpress.Utils.TextOptions.EndUpdate"/> or <see cref="M:DevExpress.Utils.TextOptions.CancelUpdate"/> method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.CancelUpdate">
      <summary>
        <para>Enables a text’s visual updates if the text was previously locked by the <see cref="M:DevExpress.Utils.TextOptions.BeginUpdate"/> method. Does not cause the text’s immediate visual update.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.DefaultOptions">
      <summary>
        <para>Gets an object that specifies the default text options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object that specifies the default text options.</value>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsCenteredWithEllipsis">
      <summary>
        <para>Gets an object whose settings force text to be centered.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object with its settings set to the corresponding values.</value>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsMultiLine">
      <summary>
        <para>Gets an object whose settings allow text to wrap.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object with its settings set to the corresponding values.</value>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsNoWrap">
      <summary>
        <para>Gets an object whose settings prevent text from wrapping.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object with its settings set to the corresponding values.</value>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsNoWrapEx">
      <summary>
        <para>Gets an object whose settings force text to be centered and prevent it from wrapping.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object with its settings set to the corresponding values.</value>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.DefaultStringFormat">
      <summary>
        <para>Gets an object that contains the default formatting settings.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.StringFormat"/> object containing the default formatting settings.</value>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.EndUpdate">
      <summary>
        <para>Enables a text’s visual updates if the text was previously locked by the <see cref="M:DevExpress.Utils.TextOptions.BeginUpdate"/> method. Causes the text’s immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.ForceUseGenericDefaultStringFormat">
      <summary>
        <para>Specifies how the default string format referred to by the <see cref="P:DevExpress.Utils.TextOptions.DefaultStringFormat">TextOptions.DefaultStringFormat</see> property is constructed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.GetDXStringFormat">
      <summary>
        <para>Returns an object that contains text alignment information and OpenType features.</para>
      </summary>
      <returns>An object that contains text layout information, display manipulations, and OpenType features.</returns>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.GetDXStringFormat(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Returns an object that contains text alignment information and OpenType features.</para>
      </summary>
      <param name="defaultOptions">An object with text options.</param>
      <returns>An object that contains text layout information, display manipulations, and OpenType features.</returns>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.GetStringFormat">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.StringFormat"/> object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions">TextOptions.DefaultOptions</see> object.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.StringFormat"/> object whose properties are set to match the appropriate values.</returns>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.GetStringFormat(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.StringFormat"/> object whose settings reflect the alignment, word wrapping and text trimming options of the specified <see cref="T:DevExpress.Utils.TextOptions"/> object.</para>
      </summary>
      <param name="defaultOptions">A <see cref="T:DevExpress.Utils.TextOptions"/> object whose settings are used to initialize the corresponding settings of the <see cref="T:System.Drawing.StringFormat"/> object that is to be returned.</param>
      <returns>A <see cref="T:System.Drawing.StringFormat"/> object whose properties are set to match the appropriate values.</returns>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.GetStringFormatInfo">
      <summary>
        <para>Returns a StringFormatInfo object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions">TextOptions.DefaultOptions</see> object.</para>
      </summary>
      <returns>A StringFormatInfo object whose properties are set to match the appropriate values.</returns>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.GetStringFormatInfo(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Returns a StringFormatInfo object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions">TextOptions.DefaultOptions</see> object.</para>
      </summary>
      <param name="defaultOptions">A <see cref="T:DevExpress.Utils.TextOptions"/> object whose settings are used to initialize the corresponding settings of the StringFormatInfo object that is to be returned.</param>
      <returns>A StringFormatInfo object whose properties are set to match the appropriate values.</returns>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.HAlignment">
      <summary>
        <para>Gets or sets the horizontal alignment of text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the text horizontal alignment.</value>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.HorzAlignmentToStringAlignment(DevExpress.Utils.HorzAlignment)">
      <summary>
        <para>Converts the specified <see cref="T:DevExpress.Utils.HorzAlignment"/> value to a corresponding <see cref="T:System.Drawing.StringAlignment"/> value.</para>
      </summary>
      <param name="align">A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that is to be converted.</param>
      <returns>A <see cref="T:System.Drawing.StringAlignment"/> value that corresponds to the specified <see cref="T:DevExpress.Utils.HorzAlignment"/> value.</returns>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.HotkeyPrefix">
      <summary>
        <para>Gets or sets whether to underline characters that are preceded with an ampersand symbol (&amp;). This option is supported by a set of controls.</para>
      </summary>
      <value>A value that specifies how to interpret an ampersand character (&amp;) in text.</value>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.IsEqual(DevExpress.Utils.TextOptions)">
      <summary>
        <para>Tests whether two objects have the same property values.</para>
      </summary>
      <param name="options">The <see cref="T:DevExpress.Utils.TextOptions"/> object to which the current object is compared.</param>
      <returns>true if the current object has the same property values as the specified object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.Reset">
      <summary>
        <para>Resets all the text settings to their default values.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.RightToLeft">
      <summary>
        <para>Gets or sets whether the text is directed from right to left.</para>
      </summary>
      <value>true if the text is directed from right to left; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.SetHAlignment(DevExpress.Utils.HorzAlignment)">
      <summary>
        <para>Specifies a text’s horizontal alignment within a control.</para>
      </summary>
      <param name="value">The text’s horizontal alignment.</param>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.SetHAlignmentCore(DevExpress.Utils.HorzAlignment)">
      <summary>
        <para>This is an internal method that should not be called directly from your code.</para>
      </summary>
      <param name="horzAlignment" />
    </member>
    <member name="M:DevExpress.Utils.TextOptions.SetHotKeyPrefix(DevExpress.Utils.HKeyPrefix)">
      <summary>
        <para>Sets the <see cref="P:DevExpress.Utils.TextOptions.HotkeyPrefix">TextOptions.HotkeyPrefix</see> property without the property changed notifications.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value which represents the hotkey prefix for the text.</param>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.ToString">
      <summary>
        <para>Returns the text representation of the current object.</para>
      </summary>
      <returns>The text representation of the current object.</returns>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.Trimming">
      <summary>
        <para>Gets or sets text trimming mode.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode.</value>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.UpdateDefaultOptions(DevExpress.Utils.TextOptions)">
      <summary>
        <para>For internal use. Copies settings from the specified object to the current object.</para>
      </summary>
      <param name="defaultOptions">A <see cref="T:DevExpress.Utils.TextOptions"/> object whose settings are copied to the current object.</param>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.VAlignment">
      <summary>
        <para>Gets or sets the vertical alignment of text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VertAlignment"/> value that specifies the text vertical alignment.</value>
    </member>
    <member name="M:DevExpress.Utils.TextOptions.VertAlignmentToStringAlignment(DevExpress.Utils.VertAlignment)">
      <summary>
        <para>Converts the specified <see cref="T:DevExpress.Utils.VertAlignment"/> value to a corresponding <see cref="T:System.Drawing.StringAlignment"/> value.</para>
      </summary>
      <param name="align">A <see cref="T:DevExpress.Utils.VertAlignment"/> value that is to be converted.</param>
      <returns>A <see cref="T:System.Drawing.StringAlignment"/> value that corresponds to the specified <see cref="T:DevExpress.Utils.VertAlignment"/> value.</returns>
    </member>
    <member name="P:DevExpress.Utils.TextOptions.WordWrap">
      <summary>
        <para>Gets or sets text wrapping mode.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies text wrapping mode.</value>
    </member>
    <member name="T:DevExpress.Utils.ThumbnailImageEventArgs">
      <summary>
        <para>Provides data for events that maintain the Asynchronous Image Load feature.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.#ctor(System.Int32,DevExpress.Utils.AsyncImageLoader,DevExpress.Utils.ImageLoadInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ThumbnailImageEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="dataSourceIndex">The index of the currently processed item among other items. This value is used to initialize the <see cref="P:DevExpress.Utils.ThumbnailImageEventArgs.DataSourceIndex">ThumbnailImageEventArgs.DataSourceIndex</see> property.</param>
      <param name="loader">An object that performs image load.</param>
      <param name="info">An object that stores detailed information about the item.</param>
    </member>
    <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.CreateThumbnailImage(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <para>Creates a thumbnail image of the specific size. This image will be later assigned to an item that supports the asynchronous image load feature.</para>
      </summary>
      <param name="image">An Image that will be transformed to the thumbnail image.</param>
      <param name="size">A Size structure that is the size of the thumbnail image.</param>
      <returns>An Image created by this method.</returns>
    </member>
    <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.CreateThumbnailImage(System.Drawing.Image)">
      <summary>
        <para>Creates a thumbnail image that will be assigned to an item that supports the asynchronous image load feature.</para>
      </summary>
      <param name="image">An Image that will be transformed to the thumbnail image.</param>
      <returns>An Image created by this method.</returns>
    </member>
    <member name="P:DevExpress.Utils.ThumbnailImageEventArgs.DataSourceIndex">
      <summary>
        <para>Gets the index of the currently processed item among other items in the source (the item’s index in the bound data source for data-aware controls, e.g., <see cref="T:DevExpress.XtraGrid.GridControl"/>).</para>
      </summary>
      <value>An Int32 value that specifies the index of the currently processed item among other items in the source.</value>
    </member>
    <member name="P:DevExpress.Utils.ThumbnailImageEventArgs.DesiredThumbnailSize">
      <summary>
        <para>Stores the desired size of thumbnail images, generated using the ThumbnailImageEventArgs.CreateThumbnailImage method.</para>
      </summary>
      <value>A Size structure that is the desired size of thumbnail images, generated using the ThumbnailImageEventArgs.CreateThumbnailImage method.</value>
    </member>
    <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.ResetImageCache">
      <summary>
        <para>Resets the image cache and causes all items that are not currently visible to reload their images when displayed again.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ThumbnailImageEventArgs.ThumbnailImage">
      <summary>
        <para>Gets or sets the image that will be assigned to an item that fired this event.</para>
      </summary>
      <value>An Image that will be assigned to an item that fired this event.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControlInfo">
      <summary>
        <para>Contains tooltip information.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,DevExpress.Utils.ToolTipIconType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified identifier, tooltip text and icon type.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType">ToolTipControlInfo.IconType</see></param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.Boolean,DevExpress.Utils.ToolTipIconType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified identifier, tooltip text, icon type and delay flag.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
      <param name="immediateToolTip">A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip">ToolTipControlInfo.ImmediateToolTip</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType">ToolTipControlInfo.IconType</see></param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String,DevExpress.Utils.ToolTipIconType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified identifier, tooltip text, title and icon type.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
      <param name="title">A string that specifies a tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title">ToolTipControlInfo.Title</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType">ToolTipControlInfo.IconType</see></param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String,System.Boolean,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.DefaultBoolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified settings.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
      <param name="title">A string that specifies a tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title">ToolTipControlInfo.Title</see> property.</param>
      <param name="immediateToolTip">A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip">ToolTipControlInfo.ImmediateToolTip</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType">ToolTipControlInfo.IconType</see></param>
      <param name="allowHtmlText">A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.AllowHtmlText">ToolTipControlInfo.AllowHtmlText</see> property</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String,System.Boolean,DevExpress.Utils.ToolTipIconType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified identifier, tooltip text, title, icon type and delay flag.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
      <param name="title">A string that specifies a tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title">ToolTipControlInfo.Title</see> property.</param>
      <param name="immediateToolTip">A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip">ToolTipControlInfo.ImmediateToolTip</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType">ToolTipControlInfo.IconType</see></param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified identifier, tooltip text and title.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
      <param name="title">A string that specifies a tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title">ToolTipControlInfo.Title</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> class with the specified identifier and tooltip text.</para>
      </summary>
      <param name="_object">An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object">ToolTipControlInfo.Object</see> property.</param>
      <param name="text">A string that specifies a tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.AllowHtmlText">
      <summary>
        <para>Gets or sets whether HTML formatting is supported in tooltips.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.FlyoutControl">
      <summary>
        <para>Gets or sets a control shown within a flyout tooltip.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ForcedShow">
      <summary>
        <para>Gets or sets whether the tooltip should be forcibly shown for the same visual element via the ToolTipController.ShowHint method.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether the tooptip should be forcibly shown for the same visual element.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.HideHintOnMouseMove">
      <summary>
        <para>Gets or sets whether the shown tooltip hides when an end-user moves the mouse.</para>
      </summary>
      <value>A Boolean value specifying whether the shown tooltip hides when an end-user moves the mouse.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.IconType">
      <summary>
        <para>Gets or sets the kind of predefined icon to display in a tooltip.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value specifying the kind of predefined icon to display.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ImageOptions">
      <summary>
        <para>Provides access to options that specify the image displayed in the tooltip.</para>
      </summary>
      <value>An object that contains image options.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip">
      <summary>
        <para>Gets or sets whether a tooltip will be displayed immediately or after a delay.</para>
      </summary>
      <value>A Boolean value that specifies whether a tooltip will be displayed immediately after an event handler call.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.Interval">
      <summary>
        <para>Gets or sets the interval that must pass before a tooltip is displayed.</para>
      </summary>
      <value>An integer value that specifies the delay, in milliseconds.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControlInfo.Normalize">
      <summary>
        <para>Removes the ‘0x0’ character from the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text">ToolTipControlInfo.Text</see> and <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title">ToolTipControlInfo.Title</see> strings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.Object">
      <summary>
        <para>Gets or sets an object which uniquely identifies the currently processed element.</para>
      </summary>
      <value>An object which uniquely identifies the currently processed element.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ObjectBounds">
      <summary>
        <para>Gets or sets the bounds of the object for which a tooltip is displayed.</para>
      </summary>
      <value>The bounds of the object for which a tooltip is displayed.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.SuperTip">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/> that will be displayed if the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ToolTipType">ToolTipControlInfo.ToolTipType</see> property is set to SuperTip</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object that has been assigned to this property. The default value is null.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.Text">
      <summary>
        <para>Gets or sets the tooltip’s text.</para>
      </summary>
      <value>A string that specifies the tooltip’s text.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.Title">
      <summary>
        <para>Gets or sets the tooltip’s title.</para>
      </summary>
      <value>A string that specifies the tooltip’s title.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipAnchor">
      <summary>
        <para>Gets or sets whether the tooltip is anchored relative to the mouse pointer or the owning control.</para>
      </summary>
      <value>A DevExpress.Utils.ToolTipAnchor value that specifies whether the tooltip is anchored relative to the mouse pointer or the owning control.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipImage">
      <summary>
        <para>Gets or sets the image to display within the current tooltip.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object that specifies the image to display within the current tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipIndent">
      <summary>
        <para>Gets or sets the space, in pixels, between the tooltip and the associated visual element.</para>
      </summary>
      <value>An integer value specifying the space, in pixels, between the tooltip and the associated visual element. The default is 16.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipLocation">
      <summary>
        <para>Gets or sets the tooltip location.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipPosition">
      <summary>
        <para>Gets or sets the tooltip’s position in screen coordinates.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Point"/> structure that specifies the tooltip’s position, in pixels, relative to the top left corner of the screen.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipType">
      <summary>
        <para>Gets or sets the type of tooltip to be displayed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltip to be displayed.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipController">
      <summary>
        <para>Provides <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">tooltip</see> management for individual controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.#ctor">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.Utils.ToolTipController"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipController"/> class with the specified container.</para>
      </summary>
      <param name="container">A <see cref="T:System.ComponentModel.IContainer"/> that represents the container for the tooltip controller.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.Active">
      <summary>
        <para>Gets or sets whether the component’s functionality is enabled.</para>
      </summary>
      <value>true if displaying tooltips is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ActiveControlClient">
      <summary>
        <para>Gets the active control, if it implements the IToolTipControlClient interface.</para>
      </summary>
      <value>A DevExpress.Utils.IToolTipControlClient object.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ActiveObject">
      <summary>
        <para>Returns the object that identifies which of the bound control’s elements the tooltip is displayed for.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> object representing the bound control’s element that the tooltip is displayed for.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ActiveObjectInfo">
      <summary>
        <para>An object containing tooltip information for the current element of a bound control.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object containing tooltip information for the current element of a bound control.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.AddClientControl(System.Windows.Forms.Control,DevExpress.Utils.IToolTipControlClient)">
      <summary>
        <para>Enables the display of tooltips for the specified control implementing the DevExpress.Utils.IToolTipControlClient interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.AddClientControl(System.Windows.Forms.Control)">
      <summary>
        <para>Enables the display of tooltips for the specified control implementing the DevExpress.Utils.IToolTipControlClient interface.</para>
      </summary>
      <param name="control">The control, implementing the DevExpress.Utils.IToolTipControlClient interface, for which tooltips should be enabled.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.AllowHtmlText">
      <summary>
        <para>Gets or sets whether HTML formatting tags can be used to format text in tooltips.</para>
      </summary>
      <value>true if HTML tags can be used to format text in tooltips; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.Appearance">
      <summary>
        <para>Gets or sets the settings that control the appearance of a tooltip’s window and text.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.AppearanceTitle">
      <summary>
        <para>Provide the settings that control the appearance of a tooltip’s title.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.AutoPopDelay">
      <summary>
        <para>Gets or sets the timeframe during which a tooltip is visible on-screen.</para>
      </summary>
      <value>An integer value that specifies the duration of the tooltip, in ms.</value>
    </member>
    <member name="E:DevExpress.Utils.ToolTipController.BeforeShow">
      <summary>
        <para>Fires when a tooltip is about to be displayed. Allows you to dynamically specify the tooltip text, image, and appearance settings.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.ToolTipController.CalcSize">
      <summary>
        <para>Enables you to specify the position  and size of the tooltip window.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.CloseOnClick">
      <summary>
        <para>Gets or sets whether a tooltip is closed on a click.</para>
      </summary>
      <value>A value that specifies whether a click on a tooltip closes this tooltip.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.CreateShowArgs">
      <summary>
        <para>Returns a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing settings of  the current tooltip controller.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object with settings of the current tooltip controller.</returns>
    </member>
    <member name="E:DevExpress.Utils.ToolTipController.CustomDraw">
      <summary>
        <para>Enables a tooltip’s window to be custom painted.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.DefaultController">
      <summary>
        <para>Gets the default <see cref="T:DevExpress.Utils.ToolTipController"/> used for displaying tooltips.</para>
      </summary>
      <value>A default <see cref="T:DevExpress.Utils.ToolTipController"/> object.</value>
    </member>
    <member name="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo">
      <summary>
        <para>Allows you to display custom tooltips for any UI element of a control that implements the DevExpress.Utils.IToolTipControlClient interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.GetAllowHtmlText(System.Windows.Forms.Control)">
      <summary>
        <para>Returns whether HTML formatting is enabled in tooltips for the specified control.</para>
      </summary>
      <param name="control">A control for which this tooltip setting is to be obtained.</param>
      <returns>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips for the specified control.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.GetSuperTip(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the specified control.</para>
      </summary>
      <param name="control">The control whose SuperToolTip object is to be obtained.</param>
      <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the control.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.GetTitle(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a regular tooltip’s title displayed within the specified control.</para>
      </summary>
      <param name="control">A control whose regular tooltip’s title is to be obtained.</param>
      <returns>A string representing a regular tooltip’s title for the control.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.GetToolTip(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a regular tooltip for the specified control.</para>
      </summary>
      <param name="control">A control whose tooltip should be obtained.</param>
      <returns>A string representing a regular tooltip for the control.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.GetToolTipAnchor(System.Windows.Forms.Control)">
      <summary>
        <para>Gets whether the tooltip associated with the specified control is anchored relative to the mouse pointer or the owning control.</para>
      </summary>
      <param name="control">The control from which to retrieve how the associated tooltip is anchored.</param>
      <returns>A ToolTipAnchor value that specifies how the tooltip associated with the specified control is anchored.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.GetToolTipIconType(System.Windows.Forms.Control)">
      <summary>
        <para>Gets the type of the icon displayed within the specified control’s regular tooltip.</para>
      </summary>
      <param name="control">A control whose tooltip’s icon type is to be obtained.</param>
      <returns>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon displayed within the specified control’s regular tooltip.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.HideHint">
      <summary>
        <para>Hides the hint if it is being displayed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.HideHintCore">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.HtmlImages">
      <summary>
        <para>Gets or sets a collection of images that you can embed into captions/messages/tooltips in the control using the image <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML-inspired tag</see>.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.ImageCollection"></see> or <see cref="T:DevExpress.Utils.SvgImageCollection"></see> that contains images.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.HtmlTemplate">
      <summary>
        <para>An HTML &amp; CSS template applied to regular hints and Super Tooltips of controls whose tooltips are managed by this ToolTipController.</para>
      </summary>
      <value>The template applied to control tooltips.</value>
    </member>
    <member name="E:DevExpress.Utils.ToolTipController.HyperlinkClick">
      <summary>
        <para>Occurs when a user clicks a hyperlink within a control’s tooltip or super tooltip.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.IconSize">
      <summary>
        <para>Gets or sets the tooltip icon size.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Utils.ToolTipIconSize"/> enumeration value that specifies the icon size.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.IconType">
      <summary>
        <para>Gets or sets the tooltip icon type. This property is obsolete, use <see cref="P:DevExpress.XtraEditors.BaseControl.ToolTipIconType"/> instead.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumerator.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ImageIndex">
      <summary>
        <para>Gets or sets the index of an image to be displayed within tooltips.</para>
      </summary>
      <value>The integer value specifying the index of an image to be displayed within tooltips.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ImageList">
      <summary>
        <para>Gets or sets the source of the images that can be displayed within tooltips.</para>
      </summary>
      <value>An object that is the source of images that can be displayed within tooltips.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.InitialDelay">
      <summary>
        <para>Gets or sets the time interval between a visual element being hovered, and its tooltip being shown on-screen.</para>
      </summary>
      <value>Integer value that specifies the time a visual element needs to display its tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.IsDefaultToolTipLocation">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.KeepWhileHovered">
      <summary>
        <para>Gets or sets whether a displayed tooltip remains visible while the mouse cursor keeps moving (without pauses) towards the tooltip and while it hovers the tooltip.</para>
      </summary>
      <value>true if a tooltip remains displayed while the mouse cursor is over this tooltip; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ProcessNCMouseMove(System.Object,System.Drawing.Point)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.RemoveClientControl(System.Windows.Forms.Control)">
      <summary>
        <para>Disables displaying tooltips for the specified control implementing the DevExpress.Utils.IToolTipControlClient interface.</para>
      </summary>
      <param name="control">The control, implementing the DevExpress.Utils.IToolTipControlClient interface, for which the <see cref="T:DevExpress.Utils.ToolTipController"/>‘s functionality should be disabled.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ResetAutoPopupDelay">
      <summary>
        <para>Resets the timer which controls when a tooltip’s window is hidden.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ReshowDelay">
      <summary>
        <para>Gets or sets the time interval that must pass before another hint is displayed if another hint is currently visible.</para>
      </summary>
      <value>An integer value specifying the time interval in milliseconds.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.Rounded">
      <summary>
        <para>Gets or sets whether the tooltip’s corners are rounded.</para>
      </summary>
      <value>true to display hints with rounded corners; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.RoundRadius">
      <summary>
        <para>Gets or sets the radius of the rounded corners of the tooltip window.</para>
      </summary>
      <value>The radius of the rounded corners.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.SetAllowHtmlText(System.Windows.Forms.Control,DevExpress.Utils.DefaultBoolean)">
      <summary>
        <para>Sets whether HTML formatting is enabled in tooltips for the specified control.</para>
      </summary>
      <param name="control">A control for which the tooltip information is to be changed.</param>
      <param name="value">A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is enabled in tooltips for the specified control.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.SetSuperTip(System.Windows.Forms.Control,DevExpress.Utils.SuperToolTip)">
      <summary>
        <para>Associates a <see cref="T:DevExpress.Utils.SuperToolTip"/> object with the specified control.</para>
      </summary>
      <param name="control">A control for which to set the tooltip.</param>
      <param name="value">A <see cref="T:DevExpress.Utils.SuperToolTip"/> object to associate with the control.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.SetTitle(System.Windows.Forms.Control,System.String)">
      <summary>
        <para>Sets a regular tooltip’s title for the specified control.</para>
      </summary>
      <param name="control">A control for which to set a regular tooltip’s title.</param>
      <param name="value">A string representing a regular tooltip’s title.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.SetToolTip(System.Windows.Forms.Control,System.String)">
      <summary>
        <para>Sets a regular tooltip for the specified control.</para>
      </summary>
      <param name="control">A control for which to set the tooltip.</param>
      <param name="value">A string representing a regular tooltip’s text.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.SetToolTipAnchor(System.Windows.Forms.Control,DevExpress.Utils.ToolTipAnchor)">
      <summary>
        <para>Sets whether the tooltip associated with the specified control is anchored relative to the mouse pointer or the owning control.</para>
      </summary>
      <param name="control">The control from which to set how the tooltip is anchored.</param>
      <param name="value">A value that specifies whether the tooltip is anchored relative to the mouse pointer or the owning control.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.SetToolTipIconType(System.Windows.Forms.Control,DevExpress.Utils.ToolTipIconType)">
      <summary>
        <para>Sets the type of the icon displayed within the specified control’s regular tooltip.</para>
      </summary>
      <param name="control">A control for which the icon type is set.</param>
      <param name="value">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon that should be displayed within the specified control’s regular tooltip.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ShowBeak">
      <summary>
        <para>Tests whether callout beaks are displayed for hints.</para>
      </summary>
      <value>true if the callout beak is displayed when a hint appears; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControlInfo)">
      <summary>
        <para>Displays a hint using the specified tooltip information.</para>
      </summary>
      <param name="info">A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object containing information for displaying a hint.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Drawing.Point)">
      <summary>
        <para>Displays a hint relative to a specific point using specified settings.</para>
      </summary>
      <param name="eShow">A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.</param>
      <param name="cursorPosition">A point relative to which the hint should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Windows.Forms.Control)">
      <summary>
        <para>Displays a hint for a control using specified settings.</para>
      </summary>
      <param name="eShow">A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying the settings used to display tooltips.</param>
      <param name="control">The control for which to display the tooltip.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs)">
      <summary>
        <para>Displays a hint relative to the mouse cursor using specified settings.</para>
      </summary>
      <param name="eShow">A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,DevExpress.Utils.ToolTipLocation,System.Drawing.Point)">
      <summary>
        <para>Displays a hint at a specified position relative to a specific point.</para>
      </summary>
      <param name="toolTip">The text to display as a tooltip.</param>
      <param name="toolTipLocation">The position relative to the specified point at which the hint should be displayed.</param>
      <param name="cursorPosition">The point relative to which the hint should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,DevExpress.Utils.ToolTipLocation)">
      <summary>
        <para>Displays a hint at the specified position relative to the mouse cursor.</para>
      </summary>
      <param name="toolTip">The text to display as a tooltip.</param>
      <param name="toolTipLocation">The position relative to the mouse cursor at which the hint should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.Drawing.Point)">
      <summary>
        <para>Displays a hint relative to the specified point using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings</para>
      </summary>
      <param name="toolTip">The text to display as a tooltip.</param>
      <param name="cursorPosition">The point relative to which the tooltip should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,DevExpress.Utils.ToolTipLocation,System.Drawing.Point)">
      <summary>
        <para>Displays a hint with the specified text and title relative to the specified point.</para>
      </summary>
      <param name="toolTip">A string that represents a tooltip’s text.</param>
      <param name="title">A string that represents a tooltip’s title.</param>
      <param name="toolTipLocation">The position relative to the specified control at which the tooltip should be displayed.</param>
      <param name="cursorPosition">A point relative to which the hint should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,DevExpress.Utils.ToolTipLocation)">
      <summary>
        <para>Displays a hint with the specified text and title relative to the mouse cursor’s position.</para>
      </summary>
      <param name="toolTip">A string that represents a tooltip’s text.</param>
      <param name="title">A string that represents a tooltip’s title.</param>
      <param name="toolTipLocation">The position relative to the specified control at which the tooltip should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,System.Drawing.Point)">
      <summary>
        <para>Displays a hint with the specified text and title at the specified point using the current <see cref="T:DevExpress.Utils.ToolTipController"/> settings</para>
      </summary>
      <param name="toolTip">A string that represents a tooltip’s text.</param>
      <param name="title">A string that represents a tooltip’s title.</param>
      <param name="cursorPosition">A point relative to which the hint should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,System.Windows.Forms.Control,DevExpress.Utils.ToolTipLocation)">
      <summary>
        <para>Displays a hint with the specified text and title relative to the specified control.</para>
      </summary>
      <param name="toolTip">A string which represents the tooltip’s text.</param>
      <param name="title">A string which represents the tooltip’s title.</param>
      <param name="control">The control to display the tooltip for.</param>
      <param name="toolTipLocation">The position relative to the specified control at which the tooltip should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String)">
      <summary>
        <para>Displays a hint with the specified text and title relative to the mouse cursor using the current <see cref="T:DevExpress.Utils.ToolTipController"/> settings.</para>
      </summary>
      <param name="toolTip">A string that represents a tooltip’s text.</param>
      <param name="title">A string that represents a tooltip’s title.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.Windows.Forms.Control,DevExpress.Utils.ToolTipLocation)">
      <summary>
        <para>Displays a hint relative to a specific control.</para>
      </summary>
      <param name="toolTip">The text to display as a tooltip.</param>
      <param name="control">The control for which to display the tooltip.</param>
      <param name="toolTipLocation">The position relative to the specified control at which the tooltip should be displayed.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String)">
      <summary>
        <para>Displays a hint relative to the mouse cursor using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings.</para>
      </summary>
      <param name="toolTip">The text to display as a tooltip.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ShowShadow">
      <summary>
        <para>Gets or sets whether the tooltips are shown shadowed.</para>
      </summary>
      <value>true if the tooltips are shown shadowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.Style">
      <summary>
        <para>Gets the appearance settings used to paint the hints of bound controls.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the appearance settings used to paint the hints of bound controls.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ToolTipAnchor">
      <summary>
        <para>Gets or sets whether tooltips are anchored relative to the mouse pointer or relative to the owning control. This property is not in effect if you handle the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo">ToolTipController.GetActiveObjectInfo</see> event.</para>
      </summary>
      <value>A DevExpress.Utils.ToolTipAnchor value that specifies whether tooltips are anchored relative to the mouse pointer or relative to the owning control. By Default, tooltips are anchored relative to the mouse pointer.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ToolTipLocation">
      <summary>
        <para>Gets or sets the tooltip location.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumerator.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ToolTipStyle">
      <summary>
        <para>Gets or sets the look-and-feel of regular tooltips.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipStyle"/> value that specifies the look-and-feel of regular tooltips.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.ToolTipType">
      <summary>
        <para>Gets or sets the type of tooltips displayed by the controller.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltips to be displayed.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipController.UseWindowStyle">
      <summary>
        <para>Obsolete. Gets or sets whether the default style should be used for the hint.</para>
      </summary>
      <value>true if the default style is applied to the hint; false if the <see cref="P:DevExpress.Utils.ToolTipController.Style">ToolTipController.Style</see> is used</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow">ToolTipController.BeforeShow</see> event.</para>
      </summary>
      <param name="sender">The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing data related to the event.</param>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize">ToolTipController.CalcSize</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,DevExpress.Utils.ToolTipControllerShowEventArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="control">An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">An object which identifies the element that the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
      <param name="showArgs">A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object that provides additional event data. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ShowInfo">ToolTipControllerCalcSizeEventArgs.ShowInfo</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String,System.Drawing.Size,System.Drawing.Point)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="control">An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">An object which identifies the element which the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
      <param name="toolTip">A <see cref="T:System.String"/> value which specifies the tooltip’s contents. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip">ToolTipControllerCalcSizeEventArgs.ToolTip</see> property.</param>
      <param name="title">A <see cref="T:System.String"/> value which specifies the tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title">ToolTipControllerCalcSizeEventArgs.Title</see> property.</param>
      <param name="size">A <see cref="T:System.Drawing.Size"/> structure which specifies the tooltip’s bounds. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size">ToolTipControllerCalcSizeEventArgs.Size</see> property.</param>
      <param name="position">A <see cref="T:System.Drawing.Point"/> structure which specifies the screen coordinates of the top left tooltip corner. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position">ToolTipControllerCalcSizeEventArgs.Position</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="control">An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">An object which identifies the element for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
      <param name="toolTip">A <see cref="T:System.String"/> value which specifies the tooltip’s contents. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip">ToolTipControllerCalcSizeEventArgs.ToolTip</see> property.</param>
      <param name="title">A <see cref="T:System.String"/> value which specifies the tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title">ToolTipControllerCalcSizeEventArgs.Title</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position">
      <summary>
        <para>Gets or sets the coordinates of the top left tooltip corner.</para>
      </summary>
      <value>The <see cref="T:System.Drawing.Point"/> object specifying the coordinates of the top left tooltip corner relative to the desktop.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ShowInfo">
      <summary>
        <para>Gets the additional event data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object that provides additional event data.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size">
      <summary>
        <para>Gets or sets the tooltip dimensions.</para>
      </summary>
      <value>The <see cref="T:System.Drawing.Size"/> object specifying the width and height of a tooltip rectangle.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title">
      <summary>
        <para>Gets the tooltip’s title.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the tooltip’s title.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip">
      <summary>
        <para>Gets the text to be displayed within the tooltip.</para>
      </summary>
      <value>The <see cref="T:System.String"/> object specifying the text to be displayed within the tooltip.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize">ToolTipController.CalcSize</see> event.</para>
      </summary>
      <param name="sender">The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> object containing data related to the event.</param>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw">ToolTipController.CustomDraw</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.#ctor(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.ToolTipControllerShowEventArgs,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs"/> class.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most  used  pens, fonts and brushes. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Cache">ToolTipControllerCustomDrawEventArgs.Cache</see> property.</param>
      <param name="args">A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object which provides the information required to paint a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ShowInfo">ToolTipControllerCustomDrawEventArgs.ShowInfo</see> property.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which specifies the tooltip’s boundaries. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Bounds">ToolTipControllerCustomDrawEventArgs.Bounds</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Bounds">
      <summary>
        <para>Gets the bounding rectangle of the painted tooltip.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> structure which specifies the tooltip’s boundaries.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Cache">
      <summary>
        <para>Gets an object which specifies the storage for the most  used pens, fonts and brushes</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most  used  pens, fonts and brushes.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Handled">
      <summary>
        <para>Gets or sets whether an event was handled, if it was handled the default actions are not required.</para>
      </summary>
      <value>true if default painting isn’t required; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ShowInfo">
      <summary>
        <para>Gets an object which provides the information required to paint a tooltip.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object which provides the information required to paint a tooltip.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerCustomDrawEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw">ToolTipController.CustomDraw</see> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the tooltip controller which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerEventArgsBase">
      <summary>
        <para>The base class for classes providing data for <see cref="T:DevExpress.Utils.ToolTipController"/>‘s events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor(System.Windows.Forms.Control,System.Object)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.</para>
      </summary>
      <param name="control">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">
      <summary>
        <para>Gets or sets the control for which a tooltip controller’s event is fired.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.Control"/> object for which the event is fired.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">
      <summary>
        <para>Gets or sets the element of the control for which the tooltip should be displayed.</para>
      </summary>
      <value>An object defining the element for which to display the tooltip.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo">ToolTipController.GetActiveObjectInfo</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.#ctor(System.Windows.Forms.Control,System.Object,DevExpress.Utils.ToolTipControlInfo,System.Drawing.Point)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="control">The control for which a tooltip controller’s event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">The element of the control (or the type of the element) for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
      <param name="info">An object which uniquely identifies the current element for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.Info">ToolTipControllerGetActiveObjectInfoEventArgs.Info</see> property.</param>
      <param name="controlMousePosition">A <see cref="T:System.Drawing.Point"/> structure that specifies the position of the mouse cursor relative to the control’s upper left corner. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition">ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition">
      <summary>
        <para>Gets the position of the mouse cursor relative to the control’s upper left corner.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Point"/> structure that specifies the position of the mouse cursor relative to the control’s upper left corner.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.Info">
      <summary>
        <para>Gets or sets an object which uniquely identifies the visual element at the current position.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object which identifies the visual element at the current position.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo">ToolTipController.GetActiveObjectInfo</see> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the ToolTip Controller which fires this event.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Utils.ToolTipControllerShowEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow">ToolTipController.BeforeShow</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes properties with default values</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String,DevExpress.Utils.ToolTipLocation,System.Boolean,System.Boolean,System.Int32,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.ToolTipIconSize,System.Object,System.Int32,DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="control">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
      <param name="toolTip">A <see cref="T:System.String"/> value that specifies the tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip">ToolTipControllerShowEventArgs.ToolTip</see> property.</param>
      <param name="title">A <see cref="T:System.String"/> value that specifies the tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title">ToolTipControllerShowEventArgs.Title</see> property.</param>
      <param name="toolTipLocation">A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value that specifies the relative position of the tooltip window. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation">ToolTipControllerShowEventArgs.ToolTipLocation</see> property.</param>
      <param name="showBeak">true if the callout beak is displayed when a hint appears; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak">ToolTipControllerShowEventArgs.ShowBeak</see> property.</param>
      <param name="rounded">true if tooltip window’s corners are rounded; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded">ToolTipControllerShowEventArgs.Rounded</see> property.</param>
      <param name="roundRadius">The radius of the rounded corners. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius">ToolTipControllerShowEventArgs.RoundRadius</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of the predefined icon. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType">ToolTipControllerShowEventArgs.IconType</see> property.</param>
      <param name="iconSize">A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value that specifies the icon’s size. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize">ToolTipControllerShowEventArgs.IconSize</see> property.</param>
      <param name="imageList">An object that represents the source of the images that can be displayed within tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList">ToolTipControllerShowEventArgs.ImageList</see> property.</param>
      <param name="imageIndex">The index of the image to display in the tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex">ToolTipControllerShowEventArgs.ImageIndex</see> property.</param>
      <param name="appearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the tooltip’s appearance settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance">ToolTipControllerShowEventArgs.Appearance</see> property.</param>
      <param name="appearanceTitle">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle">ToolTipControllerShowEventArgs.AppearanceTitle</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String,DevExpress.Utils.ToolTipLocation,System.Boolean,System.Boolean,System.Int32,DevExpress.Utils.ToolTipStyle,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.ToolTipIconSize,System.Object,System.Int32,DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="control">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
      <param name="toolTip">A <see cref="T:System.String"/> value that specifies the tooltip’s text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip">ToolTipControllerShowEventArgs.ToolTip</see> property.</param>
      <param name="title">A <see cref="T:System.String"/> value that specifies the tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title">ToolTipControllerShowEventArgs.Title</see> property.</param>
      <param name="toolTipLocation">A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value that specifies the relative position of the tooltip window. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation">ToolTipControllerShowEventArgs.ToolTipLocation</see> property.</param>
      <param name="showBeak">true if the callout beak is displayed when a hint appears; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak">ToolTipControllerShowEventArgs.ShowBeak</see> property.</param>
      <param name="rounded">true if tooltip window’s corners are rounded; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded">ToolTipControllerShowEventArgs.Rounded</see> property.</param>
      <param name="roundRadius">The radius of the rounded corners. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius">ToolTipControllerShowEventArgs.RoundRadius</see> property.</param>
      <param name="style">The regular tooltip’s style, which controls the look-and-feel settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipStyle">ToolTipControllerShowEventArgs.ToolTipStyle</see> property.</param>
      <param name="iconType">A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of the predefined icon. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType">ToolTipControllerShowEventArgs.IconType</see> property.</param>
      <param name="iconSize">A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value that specifies the icon’s size. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize">ToolTipControllerShowEventArgs.IconSize</see> property.</param>
      <param name="imageList">An object that is the source of the images that can be displayed within tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList">ToolTipControllerShowEventArgs.ImageList</see> property.</param>
      <param name="imageIndex">The index of the image to display in the tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex">ToolTipControllerShowEventArgs.ImageIndex</see> property.</param>
      <param name="appearance">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the tooltip’s appearance settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance">ToolTipControllerShowEventArgs.Appearance</see> property.</param>
      <param name="appearanceTitle">An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the tooltip’s title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle">ToolTipControllerShowEventArgs.AppearanceTitle</see> property.</param>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> and <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> properties.</para>
      </summary>
      <param name="control">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">ToolTipControllerEventArgsBase.SelectedControl</see> property.</param>
      <param name="obj">The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">ToolTipControllerEventArgsBase.SelectedObject</see> property.</param>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AllowHtmlText">
      <summary>
        <para>Gets or sets whether HTML formatting tags can be used to format the tooltip’s text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting tags can be used to format the tooltip’s text.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance">
      <summary>
        <para>Gets the tooltip’s appearance settings. This property is not in effect for <see cref="T:DevExpress.Utils.SuperToolTip"/> objects.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the tooltip’s appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle">
      <summary>
        <para>Gets the appearance settings used to paint the tooltip’s title. This property is not in effect for <see cref="T:DevExpress.Utils.SuperToolTip"/> objects.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the appearance settings used to paint the tooltip’s title.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AutoHide">
      <summary>
        <para>Gets or sets whether the tooltip is hidden after a specific time ellapses.</para>
      </summary>
      <value>true if the tooltip is hidden after a specific time period ellapses; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.Equals(System.Object)">
      <summary>
        <para>Determines whether two objects are equal.</para>
      </summary>
      <param name="obj">The object specifying a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance.</returns>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.FlyoutControl">
      <summary>
        <para>Gets a control that should be shown within a flyout tooltip.</para>
      </summary>
      <value>A Control object.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current object.</para>
      </summary>
      <returns>The hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetToolTipLocation">
      <summary>
        <para>Gets the actual location of the tooltip window relative to the position where the tooltip should appear.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.</returns>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.HtmlImages">
      <summary>
        <para>Gets or sets a collection of images that you can embed into captions/messages/tooltips in the control using the image <see href="https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting">HTML-inspired tag</see>.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.ImageCollection"></see> or <see cref="T:DevExpress.Utils.SvgImageCollection"></see> that contains images.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.HtmlTemplate">
      <summary>
        <para>Gets or sets the HTML template that should be used for this specific control.</para>
      </summary>
      <value>The active HTML template.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize">
      <summary>
        <para>Gets the size of the predefined icon to display in the tooltip.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> enumeration value that specifies the icon size.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType">
      <summary>
        <para>Gets or sets the predefined icon to display in the tooltip.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumeration value that specifies the predefined icon to display in the tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex">
      <summary>
        <para>Gets or sets the index of an image from the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> to display in the tooltip.</para>
      </summary>
      <value>The index of a custom image to display in the tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList">
      <summary>
        <para>Gets or sets the source of images that can be displayed within tooltips.</para>
      </summary>
      <value>An object that represents the source of images that can be displayed within tooltips.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageOptions">
      <summary>
        <para>Provides access to options that specify the raster or vector image displayed in the processed tooltip.</para>
      </summary>
      <value>An object that specifies the image displayed in the processed tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ObjectBounds">
      <summary>
        <para>Gets or sets the bounds of the current object for which a tooltip is displayed.</para>
      </summary>
      <value>The bounds of the object for which a tooltip is displayed.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RightToLeft">
      <summary>
        <para>Gets or sets whether a tooltip’s visual elements are aligned to support locales using right-to-left fonts.</para>
      </summary>
      <value>true if tooltip’s visual elements are aligned to support locales using right-to-left fonts; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded">
      <summary>
        <para>Gets or sets whether the tooltip window has rounded corners.</para>
      </summary>
      <value>true if tooltip window’s corners are rounded; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius">
      <summary>
        <para>Gets or sets the radius of the rounded corners of the tooltip window.</para>
      </summary>
      <value>The radius of the rounded corners.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Show">
      <summary>
        <para>Gets or sets whether the tooltip should be displayed.</para>
      </summary>
      <value>true if the tooltip should be displayed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak">
      <summary>
        <para>Tests whether callout beaks are displayed for hints.</para>
      </summary>
      <value>true if the callout beak is displayed when a hint appears; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.SuperTip">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title">
      <summary>
        <para>Gets or sets the regular tooltip’s title.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the regular tooltip’s title.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip">
      <summary>
        <para>Gets or sets the text for the regular tooltip.</para>
      </summary>
      <value>The string that is the text to display in the regular tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipAnchor">
      <summary>
        <para>Gets or sets whether the tooltip is anchored relative to the mouse pointer or relative to the editor.</para>
      </summary>
      <value>A DevExpress.Utils.ToolTipAnchor value that specifies whether the tooltip is anchored relative to the mouse pointer or relative to the owning control. By Default, the behavior depends on the <see cref="P:DevExpress.Utils.ToolTipController.ToolTipAnchor">ToolTipController.ToolTipAnchor</see> property and the owning control’s ToolTipAnchor setting.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipImage">
      <summary>
        <para>Gets or sets the image to display within the current tooltip.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object that specifies the image to display within the current tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipIndent">
      <summary>
        <para>Gets or sets the space, in pixels, between the tooltip and the associated visual element.</para>
      </summary>
      <value>An integer value specifying the space, in pixels, between the tooltip and the associated visual element. The default is 16.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation">
      <summary>
        <para>Gets or sets the location of the tooltip window relative to the position where the tooltip should appear.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipStyle">
      <summary>
        <para>Gets or sets the look-and-feel settings of the regular tooltip displayed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipStyle"/> value that specifies the look-and-feel of regular tooltips.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipType">
      <summary>
        <para>Gets or sets the type of tooltip to be displayed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltip to be displayed.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipIconSize">
      <summary>
        <para>Enumerates values that specify the size of a predefined icon displayed within a tooltip.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconSize.Large">
      <summary>
        <para>A large icon.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconSize.Small">
      <summary>
        <para>A small icon.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ToolTipIconType">
      <summary>
        <para>Enumerates values that specify icon types to be displayed within tooltips.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Application">
      <summary>
        <para>A tooltip contains the default application icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Asterisk">
      <summary>
        <para>A tooltip contains the system asterisk icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Error">
      <summary>
        <para>A tooltip contains the system error icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Exclamation">
      <summary>
        <para>A tooltip contains the system exclamation icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Hand">
      <summary>
        <para>A tooltip contains the system hand icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Information">
      <summary>
        <para>A tooltip contains the system information icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.None">
      <summary>
        <para>A tooltip contains no predefined icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Question">
      <summary>
        <para>A tooltip contains the system question icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.Warning">
      <summary>
        <para>A tooltip contains the system warning icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipIconType.WindLogo">
      <summary>
        <para>A tooltip contains the Windows logo icon.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ToolTipItem">
      <summary>
        <para>Represents a region in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips#super-tooltips">super tooltip</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipItem"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.AllowHtmlText">
      <summary>
        <para>Gets or sets whether HTML formatting is allowed for the item’s text (<see cref="P:DevExpress.Utils.ToolTipItem.Text">ToolTipItem.Text</see>).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is allowed in the tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.DefaultImageToTextDistance">
      <summary>
        <para>Gets the default <see cref="P:DevExpress.Utils.ToolTipItem.ImageToTextDistance">ToolTipItem.ImageToTextDistance</see> property value.</para>
      </summary>
      <value>An integer value that is the default <see cref="P:DevExpress.Utils.ToolTipItem.ImageToTextDistance">ToolTipItem.ImageToTextDistance</see> property value.</value>
    </member>
    <member name="M:DevExpress.Utils.ToolTipItem.Dispose">
      <summary>
        <para>Releases all unmanaged resources used by the <see cref="T:DevExpress.Utils.ToolTipItem"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.Font">
      <summary>
        <para>Gets or sets the font used to paint the item’s text.</para>
      </summary>
      <value>The font used to display the <see cref="T:DevExpress.Utils.ToolTipItem"/>‘s text (specified in the <see cref="P:DevExpress.Utils.ToolTipItem.Text">ToolTipItem.Text</see> property).</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.Icon">
      <summary>
        <para>Gets or sets the icon displayed in the <see cref="T:DevExpress.Utils.ToolTipItem"/> object.</para>
      </summary>
      <value>An System.Drawing.Icon that is displayed in the <see cref="T:DevExpress.Utils.ToolTipItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.Image">
      <summary>
        <para>Gets or sets the image displayed in this tooltip region.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object that specifies an image displayed in this tooltip region.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.ImageAlign">
      <summary>
        <para>Gets or sets the image or icon alignment.</para>
      </summary>
      <value>The image or icon alignment.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.ImageIndex">
      <summary>
        <para>Gets or sets the index of the image in the <see cref="P:DevExpress.Utils.ToolTipItem.Images"/> collection.</para>
      </summary>
      <value>An integer value that specifies the index of the image in the <see cref="P:DevExpress.Utils.ToolTipItem.Images"/> collection.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.ImageOptions">
      <summary>
        <para>Provides access to properties that allow you to assign and customize an image for this tooltip item.</para>
      </summary>
      <value>A DevExpress.Utils.ToolTipItemImageOptions object that stores properties that allow you to assign and customize an image for this tooltip item.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.Images">
      <summary>
        <para>Gets or sets the collection of images that can be displayed in this tooltip region.</para>
      </summary>
      <value>An object that specifies the collection of images that can be displayed in this tooltip region.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.ImageToTextDistance">
      <summary>
        <para>Gets or sets the distance between the image and text in this tooltip region.</para>
      </summary>
      <value>The distance, in pixels, between the image and text in this tooltip region.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.IsEmpty">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Utils.ToolTipItem"/> is empty.</para>
      </summary>
      <value>true if <see cref="T:DevExpress.Utils.ToolTipItem"/> content (text, image and icon) is empty; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.LeftIndent">
      <summary>
        <para>Gets or sets the indent from the left edge of a <see cref="T:DevExpress.Utils.ToolTipItem"/>.</para>
      </summary>
      <value>The indent from the left edge of a <see cref="T:DevExpress.Utils.ToolTipItem"/>, in pixels.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.MaxWidth">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.OwnerAllowHtmlText">
      <summary>
        <para>Gets whether HTML tags can be used by the <see cref="T:DevExpress.Utils.SuperToolTip"/> object (the <see cref="T:DevExpress.Utils.ToolTipItem"/> owner).</para>
      </summary>
      <value>true to allow HTML tags in the <see cref="T:DevExpress.Utils.SuperToolTip"/> object (the <see cref="T:DevExpress.Utils.ToolTipItem"/> owner); otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItem.Text">
      <summary>
        <para>Gets or sets the tooltip item text.</para>
      </summary>
      <value>Specifies the text in a <see cref="T:DevExpress.Utils.ToolTipItem"/>.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipItemImageOptions">
      <summary>
        <para>Provides access to options that specify raster or vector image displayed in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips#super-tooltips">super tooltip</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipItemImageOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipItemImageOptions"/> class. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.Alignment">
      <summary>
        <para>Gets or sets whether the image is aligned at the left or right edge of the tooltip.</para>
      </summary>
      <value>Default or Right if the image is aligned at the right; Left if the image is aligned at the left.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.Image">
      <summary>
        <para>Gets or sets the raster image.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object that specifies the raster image.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.ImageIndex">
      <summary>
        <para>Gets or sets the index of the image in the <see cref="P:DevExpress.Utils.ToolTipItemImageOptions.Images"/> collection.</para>
      </summary>
      <value>An integer value that specifies the index of the image in the <see cref="P:DevExpress.Utils.ToolTipItemImageOptions.Images"/> collection.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.Images">
      <summary>
        <para>Gets or sets the collection of images that can be displayed in the tooltip.</para>
      </summary>
      <value>An object that specifies the collection of images that can be displayed in the tooltip.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.ImageToTextDistance">
      <summary>
        <para>Gets or sets the indentation of the text from the image.</para>
      </summary>
      <value>An integer value that specifies the indentation of the text from the image.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.ImageUri">
      <summary>
        <para>Gets or sets the universal resource identifier of an image.</para>
      </summary>
      <value>An object that specifies a universal resource identifier of an image.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.SvgImage">
      <summary>
        <para>Gets or sets the vector image.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.Svg.SvgImage"/> object that specifies the vector image.</value>
    </member>
    <member name="P:DevExpress.Utils.ToolTipItemImageOptions.SvgImageSize">
      <summary>
        <para>Gets or sets the size of the vector image.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> structures that specifies the vector image size.</value>
    </member>
    <member name="T:DevExpress.Utils.ToolTipLocation">
      <summary>
        <para>Specifies the location where a tooltip is displayed in relation to the mouse cursor position.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.BottomCenter">
      <summary>
        <para>A tooltip appears vertically aligned at the bottom, and horizontally centered relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.BottomLeft">
      <summary>
        <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the left relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.BottomRight">
      <summary>
        <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the right relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.Default">
      <summary>
        <para>The default tooltip location.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.Fixed">
      <summary>
        <para>A tooltip is shown in the location specified by the second parameter of the <see cref="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Drawing.Point)">ShowHint(ToolTipControllerShowEventArgs, Point)</see> overload.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.LeftBottom">
      <summary>
        <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the bottom relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.LeftCenter">
      <summary>
        <para>A tooltip appears horizontally aligned on the left, and vertically centered relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.LeftTop">
      <summary>
        <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the top relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.RightBottom">
      <summary>
        <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the bottom relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.RightCenter">
      <summary>
        <para>A tooltip appears horizontally aligned on the right, and vertically centered relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.RightTop">
      <summary>
        <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the top relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.TopCenter">
      <summary>
        <para>A tooltip appears vertically aligned at the top, and horizontally centered relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.TopLeft">
      <summary>
        <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the left relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipLocation.TopRight">
      <summary>
        <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the right relative to the mouse cursor position.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ToolTipSeparatorItem">
      <summary>
        <para>Represents a separator in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips#super-tooltips">super tooltip</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipSeparatorItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipSeparatorItem"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ToolTipStyle">
      <summary>
        <para>Enumerates paint styles for tooltips.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipStyle.Default">
      <summary>
        <para>The style of regular tooltips is automatically determined by the Windows OS and currently selected Windows theme.</para>
        <para>In Windows Vista and Windows 7, if no classic Windows theme is applied, tooltips are painted using the <see cref="F:DevExpress.Utils.ToolTipStyle.Windows7">ToolTipStyle.Windows7</see> style.</para>
        <para>In other cases, tooltips are painted using the <see cref="F:DevExpress.Utils.ToolTipStyle.WindowsXP">ToolTipStyle.WindowsXP</see> style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipStyle.Windows7">
      <summary>
        <para>Regular tooltips are painted as those in Windows 7 (this style is in effect when a program runs under Windows Vista or Windows 7, provided that no classic Windows theme is applied).</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipStyle.WindowsXP">
      <summary>
        <para>Regular tooltips are painted as those in Windows XP.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ToolTipTitleItem">
      <summary>
        <para>Represents a title in a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips#super-tooltips">super tooltip</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.ToolTipTitleItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipTitleItem"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.ToolTipType">
      <summary>
        <para>Enumerates tooltip types that are supported by controls.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipType.Default">
      <summary>
        <para>The default tooltip type. The actual tooltip type is determined by a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipType.Flyout">
      <summary>
        <para>A tooltip that allows you to display any control in the <see cref="T:DevExpress.Utils.FlyoutPanel"/> control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipType.Html">
      <summary>
        <para>A tooltip that utilizes the HTML template assigned to the controller’s <see cref="P:DevExpress.Utils.ToolTipController.HtmlTemplate">HtmlTemplate</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipType.Standard">
      <summary>
        <para>A regular tooltip that consists of the title and contents regions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.ToolTipType.SuperTip">
      <summary>
        <para>A <see cref="T:DevExpress.Utils.SuperToolTip"/> that supports multiple text and image regions.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.TrackBarContextButton">
      <summary>
        <para>A scrollable context item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.TrackBarContextButton.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.TrackBarContextButton"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.AllowUseMiddleValue">
      <summary>
        <para>Gets or sets whether the tick is displayed in the middle of the track and enables using a custom middle tick value.</para>
      </summary>
      <value>true if the tick is displayed in the middle of the track; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.Glyph">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.HoverGlyph">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.ImageOptionsCollection">
      <summary>
        <para>Provides access to individual image-related property sets for every <see cref="T:DevExpress.Utils.TrackBarContextButton"/> visual state.</para>
      </summary>
      <value>A DevExpress.Utils.ContextItemImageOptionsCollection object that stores image-related settings.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.Maximum">
      <summary>
        <para>Gets the maximum track value.</para>
      </summary>
      <value>An integer value that specifies the maximum track value.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.Middle">
      <summary>
        <para>Gets or sets the value located in the middle of the track.</para>
      </summary>
      <value>An integer value located in the middle of the track.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.Minimum">
      <summary>
        <para>Gets the minimum track value.</para>
      </summary>
      <value>An integer value that specifies the minimum track value.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.ShowZoomButtons">
      <summary>
        <para>Gets or sets whether the zoom buttons are displayed.</para>
      </summary>
      <value>true if the zoom buttons are displayed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.SmallChange">
      <summary>
        <para>Gets or sets the value to be added to or subtracted from the <see cref="P:DevExpress.Utils.TrackBarContextButton.Value">TrackBarContextButton.Value</see> property when one of the zoom buttons is clicked.</para>
      </summary>
      <value>An integer value to be added to or subtracted from the <see cref="P:DevExpress.Utils.TrackBarContextButton.Value">TrackBarContextButton.Value</see> property when a zoom button is clicked.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.TrackWidth">
      <summary>
        <para>Gets or sets the length, in pixels, of the track.</para>
      </summary>
      <value>An integer value that specifies the length, in pixels, of the track.</value>
    </member>
    <member name="P:DevExpress.Utils.TrackBarContextButton.Value">
      <summary>
        <para>Gets or sets the track value.</para>
      </summary>
      <value>An integer value that specifies the track value.</value>
    </member>
    <member name="T:DevExpress.Utils.Trimming">
      <summary>
        <para>List values that specify how the characters in a string that do not completely fit into a layout shape are trimmed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.Character">
      <summary>
        <para>Specifies that the text is trimmed to the nearest character.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.Default">
      <summary>
        <para>Trimming is determined by a control’s current settings. The default value is automatically set for a control if an end-user doesn’t specify a value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.EllipsisCharacter">
      <summary>
        <para>Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.EllipsisPath">
      <summary>
        <para>The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible. This mode is not supported if <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see> is enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.EllipsisWord">
      <summary>
        <para>Specifies that text is trimmed to the nearest word, and an ellipsis is inserted at the end of a trimmed line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.None">
      <summary>
        <para>Specifies no trimming.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Trimming.Word">
      <summary>
        <para>Specifies that text is trimmed to the nearest word.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.VisualEffects">
      <summary>
        <para>Contains controls that manage the visual effects of forms or other controls (e.g., the AdornerManager).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.AdornerElement">
      <summary>
        <para>The base class for all adorner elements (e.g., <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Appearances">
      <summary>
        <para>Provides access to multiple sets of appearance settings, applied in different <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> visual states.</para>
      </summary>
      <value>An DevExpress.Utils.VisualEffects.AdornerAppearanceCollection object that stores sets of appearance settings, applied in different <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> visual states.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.Assign(DevExpress.Utils.VisualEffects.IAdornerElement)">
      <summary>
        <para>Copies all settings from the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <param name="element">An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> object whose settings are to be copied to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.BindCommand(System.Linq.Expressions.Expression{System.Action},System.Object,System.Func{System.Object})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.BindCommand(System.Object,System.Func{System.Object})">
      <summary>
        <para>Binds the specific parameterized command to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <param name="command">An Object that is the command to be bound to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.BindCommand``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Object,System.Func{``0})">
      <summary>
        <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <param name="commandSelector">An Expression that selects the appropriate command from the source object.</param>
      <param name="source">An Object (typically, a ViewModel) where the commandSelector looks for the required command.</param>
      <param name="queryCommandParameter">A Func delegate that passes the specific Object to the command as a parameter.</param>
      <typeparam name="T">The type of a ViewModel that stores a bindable command.</typeparam>
      <returns>An IDisposable object. Disposing of this object unbinds the command from this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</returns>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerElement.Click">
      <summary>
        <para>Occurs when end-users clicks this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.Clone">
      <summary>
        <para>Duplicates this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <returns>An Object that is this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> object’s copy.</returns>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Command">
      <summary>
        <para>Gets or sets the ICommand whose Execute(Object) method will be called when the Click event is invoked.</para>
      </summary>
      <value>The command.</value>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerElement.CommandCanExecuteChanged">
      <summary>
        <para>Occurs when the CanExecute(Object) status of the <see cref="P:DevExpress.Utils.VisualEffects.AdornerElement.Command"/> has changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerElement.CommandChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.VisualEffects.AdornerElement.Command"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.CommandParameter">
      <summary>
        <para>Gets or sets the parameter that is passed to the command specified by the Command property.</para>
      </summary>
      <value>The parameter.</value>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerElement.CommandParameterChanged">
      <summary>
        <para>Occurs after the value of the <see cref="P:DevExpress.Utils.VisualEffects.AdornerElement.CommandParameter"/> property has changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.IsDisposing">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> is being disposed of.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> is being disposed of; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Properties">
      <summary>
        <para>Provides access to a set of <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> properties.</para>
      </summary>
      <value>An DevExpress.Utils.VisualEffects.AdornerElementDefaultProperties object that stores settings for this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.TabIndex">
      <summary>
        <para>Gets or sets the tab index for this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <value>An Int32 value that is the tab index for this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Tag">
      <summary>
        <para>Gets or sets any object associated with this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <value>An Object that is the tag for this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.TargetElement">
      <summary>
        <para>Gets or sets the UI element to which this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> is bound.</para>
      </summary>
      <value>An Object related to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.TargetElementRegion">
      <summary>
        <para>Gets or sets whether this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> should be aligned relatively to the target element’s header or child control.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.TargetElementRegion enumeration value that specifies whether this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> should be aligned relatively to the target element’s header or child control.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Visible">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> is visible.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> is visible; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.AdornerElementCollection">
      <summary>
        <para>Stores elements of the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.Add(DevExpress.Utils.VisualEffects.AdornerElement)">
      <summary>
        <para>Adds a specific <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to the current <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <param name="item">An AdornerElement to be added to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.AddRange(System.Collections.Generic.IEnumerable{DevExpress.Utils.VisualEffects.AdornerElement})">
      <summary>
        <para>Adds multiple <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s to this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <param name="items">An IEnumerable structure containing <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s to be added.</param>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerElementCollection.CollectionChanged">
      <summary>
        <para>Fires when the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> is modified.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.Contains(DevExpress.Utils.VisualEffects.AdornerElement)">
      <summary>
        <para>Checks whether or not this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> contains the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</para>
      </summary>
      <param name="item">The <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to be checked.</param>
      <returns>true if this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> contains the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.CopyTo(DevExpress.Utils.VisualEffects.AdornerElement[],System.Int32)">
      <summary>
        <para>Copies all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s from this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> to a target one-dimensional array, starting from the specific index of the target array.</para>
      </summary>
      <param name="array">An AdornerElement[] array to which all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> items should be copied.</param>
      <param name="arrayIndex">An Int32 value that is the index of the host array, starting from which copied elements should be arranged.</param>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetElements``1">
      <summary>
        <para>Gets all elements of the specific type that are stored within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <returns>A typed elements array.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetElementsBySource(System.Object)">
      <summary>
        <para>Gets all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s related to the target UI element.</para>
      </summary>
      <param name="source">An Object that is the source UI element, whose related adorner elements should be returned.</param>
      <returns>An AdornerElements array.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetElementsBySource``1(System.Object)">
      <summary>
        <para>Gets <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s of the specific type that are related to the target UI element.</para>
      </summary>
      <param name="source">An Object that is the source UI element, whose related adorner elements should be returned.</param>
      <returns>A one-dimensional array containing elements of the specific type.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetEnumerator">
      <summary>
        <para>Returns the object that iterates through the current <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <returns>An IEnumerator object that iterates through this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.IndexOf(DevExpress.Utils.VisualEffects.AdornerElement)">
      <summary>
        <para>Gets the current position of the target element within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <param name="item">An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> whose index is to be obtained.</param>
      <returns>An Int32 value that is the current position of the target element within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</returns>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElementCollection.IsReadOnly">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> can be modified.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> is in read-only mode; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerElementCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> located at the target position within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <param name="index">An Int32 value that is the element position within the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</param>
      <value>An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> located at the target position within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.Remove(DevExpress.Utils.VisualEffects.AdornerElement)">
      <summary>
        <para>Removes the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> from this <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/>.</para>
      </summary>
      <param name="item">An AdornerElement to be removed.</param>
      <returns>true if the element was successfully removed; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.AdornerUIManager">
      <summary>
        <para>The component that provides a transparent adorner layer for highlighting certain UI elements and/or displaying notifications for these elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> class with the specified settings.</para>
      </summary>
      <param name="container">An IContainer object that owns this newly created <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</param>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.AllowArrowKeysNavigation">
      <summary>
        <para>Gets or sets whether or not end-users can cycle through selectable adorner elements (e.g., <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guides</see>) by pressing arrow keys.</para>
      </summary>
      <value>true if end-users can use arrow keys to cycle through selectable adorner elements; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.AllowTabNavigation">
      <summary>
        <para>Gets or sets whether or not end-users can cycle through selectable adorner elements (e.g., <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guides</see>) by pressing Tab.</para>
      </summary>
      <value>true if end-users can use the Tab key to cycle through selectable adorner elements; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.BadgeAppearance">
      <summary>
        <para>Provides access to appearance settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>An AppearanceObject that stores appearance settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.BadgeProperties">
      <summary>
        <para>Provides access to properties that affect all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.BadgeProperties"/> object that stores properties common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.BeginUpdate">
      <summary>
        <para>Locks the current <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> and allows you to modify the control without immediately reflecting their changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.CalcHitInfo(System.Drawing.Point)">
      <summary>
        <para>Returns the HitInfo object for the target location.</para>
      </summary>
      <param name="location">The HitInfo object for the target location.</param>
      <returns>The AdornerUIHitInfo object allows you to identify which UI elements are at the coordinates.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"></see> object after it has been locked by the BeginUpdate method, without causing an immediate visual update.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.Click">
      <summary>
        <para>Fires when a user clicks any element owned by this Adorner Manager.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.CustomDrawBadge">
      <summary>
        <para>Allows you to paint any <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> manually.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.CustomDrawGuide">
      <summary>
        <para>Allows you to paint <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> objects manually.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.CustomDrawValidationHint">
      <summary>
        <para>Allows you to paint <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects manually.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Elements">
      <summary>
        <para>Provides zero-based indexed access to <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s of any type owned by this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElementCollection"/> object that stores all child <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> objects for this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> and forces it to repaint itself.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.GuideAppearances">
      <summary>
        <para>Provides access to four sets of appearance settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> objects owned by this manager.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.GuidesAppearances collection that stores sets of appearance settings, applied to guides in their corresponding visual states.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.GuideProperties">
      <summary>
        <para>Provides access to behavior settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> objects owned by this manager.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.GuideProperties"/> collection that stores behavior settings, applied to all guides owned by this manager.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Hide">
      <summary>
        <para>Hides all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s owned by this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Invalidate">
      <summary>
        <para>Invalidates the region occupied by this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.IsUpdateLocked">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> has been locked for updating.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> has been locked for updating; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Owner">
      <summary>
        <para>Gets or sets the control that owns this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>A ContainerControl that owns this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.QueryGuideFlyoutControl">
      <summary>
        <para>Occurs when a <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> is activated and allows you to populate a flyout panel associated with this guide.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Refresh">
      <summary>
        <para>Redraws all <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> elements.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectedElement">
      <summary>
        <para>Returns the currently selected adorner element.</para>
      </summary>
      <value>A currently selected <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.</value>
    </member>
    <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectedElementChanged">
      <summary>
        <para>Occurs when a currently selected <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> element changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectElement(DevExpress.Utils.VisualEffects.AdornerElement)">
      <summary>
        <para>Selects the specific <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> element.</para>
      </summary>
      <param name="element">An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to be selected.</param>
      <returns>true if the specific element was successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectNext">
      <summary>
        <para>Activates the item within the <see cref="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Elements">AdornerUIManager.Elements</see> collection that follows the currently selected item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectPrev">
      <summary>
        <para>Activates the item within the <see cref="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Elements">AdornerUIManager.Elements</see> collection that precedes the currently selected item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Show">
      <summary>
        <para>Forces the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> to display all its child <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s whose visibility is currently set to true.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.ShowGuides">
      <summary>
        <para>Gets or sets whether or not <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">adorner guides</see> should be displayed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">adorner guides</see> should be displayed.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Update">
      <summary>
        <para>Updates the region occupied by this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.ValidationHintAppearances">
      <summary>
        <para>Provides access to three sets of appearance settings, applied to child <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects in corresponding validation states.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.ValidationHintsAppearances collection that stores appearance setting for valid, invalid and indeterminate hint states.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.ValidationHintProperties">
      <summary>
        <para>Provides access to behavior settings common to all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects owned by this manager.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintProperties"/> collection that stores behavior settings, applied to all hints owned by this manager.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.Badge">
      <summary>
        <para>A simple element within the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.Badge.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.Badge.Appearance">
      <summary>
        <para>Provides access to the appearance settings that affect this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that stores <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.Badge.Properties">
      <summary>
        <para>Provides access to advanced <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.BadgeDefaultProperties"/> object that stores advanced badge settings.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.BadgeDefaultProperties">
      <summary>
        <para>Provides members that specify the appearance and behavior of the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.BadgeProperties)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.BadgeDefaultProperties"/> class and inherits its property values from the parent object.</para>
      </summary>
      <param name="parentProperties">A BadgeProperties object whose property values are copied to the newly created <see cref="T:DevExpress.Utils.VisualEffects.BadgeDefaultProperties"/> object.</param>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualImage">
      <summary>
        <para>Gets the current image displayed by this badge.</para>
      </summary>
      <value>An Image, currently displayed by this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualImageStretchMargins">
      <summary>
        <para>Returns the current stretch margins applied to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>‘s image.</para>
      </summary>
      <value>A Padding structure that is the current image stretch margins of this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualLocation">
      <summary>
        <para>Returns the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> alignment relative to its target element.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.ContentAlignment"/> enumerator value that specifies the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> alignment relative to its target element.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualOffset">
      <summary>
        <para>Returns the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> offset.</para>
      </summary>
      <value>A Point structure that is the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> offset.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualPaintStyle">
      <summary>
        <para>Returns the paint style currently applied to this badge.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.BadgePaintStyle enumerator value that is the paint style currently applied to this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualText">
      <summary>
        <para>Returns the text currently displayed in this badge.</para>
      </summary>
      <value>A String value that is the currently displayed badge text.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualTextMargin">
      <summary>
        <para>Returns margins currently applied to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>‘s text.</para>
      </summary>
      <value>A Padding structure that specifies margins currently applied to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>‘s text.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualTrimByParent">
      <summary>
        <para>Gets whether or not this badge will be trimmed if it goes beyond its target element’s parent.</para>
      </summary>
      <value>true if the badge should be trimmed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.AllowGlyphSkinning">
      <summary>
        <para>Gets or sets whether or not the glyph skinning feature is applied to this badge.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether or not the glyph skinning feature is applied to this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.AllowHtmDrawText">
      <summary>
        <para>Gets or sets whether or not this badge recognizes HTML tags in its text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not this badge recognizes HTML tags in its text.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.AllowImage">
      <summary>
        <para>Gets or sets whether or not this badge should display its image.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not this badge should display its image.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.CanHtmDrawText">
      <summary>
        <para>Returns whether or not this badge can recognize HTML tags in its caption string.</para>
      </summary>
      <value>true if this badge can recognize HTML tags in its caption string; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.CanStretchImage">
      <summary>
        <para>Gets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> image can be stretched.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>‘s image can be stretched; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.CanUseImage">
      <summary>
        <para>Gets whether or not an image, assigned to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> will be displayed.</para>
      </summary>
      <value>true if an image, assigned to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> will be displayed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Image">
      <summary>
        <para>Gets or sets an image, used by this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.</para>
      </summary>
      <value>An Image displayed within this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ImageOptions">
      <summary>
        <para>Provides access to settings that allow you to assign both raster and vector images to a badge.</para>
      </summary>
      <value>Provides access to badge image properties.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ImageStretchMargins">
      <summary>
        <para>Gets or sets the image region that can be stretched.</para>
      </summary>
      <value>A Padding structure that is the image stretch region.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.IsGlyphSkinningEnabled">
      <summary>
        <para>Gets whether or not this badge should colorize its glyph.</para>
      </summary>
      <value>true if this badge should colorize its glyph; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Location">
      <summary>
        <para>Gets or sets the relative position for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.</para>
      </summary>
      <value>A ContentAlignment enumerator value that specifies the relative position for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Offset">
      <summary>
        <para>Gets or sets this badge’s offset from its relative position.</para>
      </summary>
      <value>A Point structure that specifies this badge’s offset from its relative position.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.PaintStyle">
      <summary>
        <para>Gets or sets the paint style applied to this badge.</para>
      </summary>
      <value>A <see cref="T:System.Nullable`1"/>&lt;DevExpress.Utils.VisualEffects.BadgePaintStyle,&gt; enumerator value that specifies the paint style currently applied to this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.StretchImage">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> should stretch its image to fit the text block.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> should stretch its image to fit the text block.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Text">
      <summary>
        <para>Gets or sets the text string, displayed by this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.</para>
      </summary>
      <value>A String value that is the <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> text.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.TextMargin">
      <summary>
        <para>Gets or sets margins for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>‘s text.</para>
      </summary>
      <value>A Padding structure that specifies margins for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>‘s text.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.TrimByParent">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> should be trimmed to match its target element’s parent.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether or not this badge should be trimmed to match its target element’s parent.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.BadgeProperties">
      <summary>
        <para>Provides members that specify the appearance and behavior of all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this adorner manager.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.BadgeProperties.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.BadgeProperties"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.AllowGlyphSkinning">
      <summary>
        <para>Gets or sets whether or not all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should colorize their images using background colors.</para>
      </summary>
      <value>true if all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should colorize their images using background colors; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.AllowHtmDrawText">
      <summary>
        <para>Gets or sets whether or not any badge owned by this manager should use HTML tags to format its caption string.</para>
      </summary>
      <value>true if any badge owned by this manager should use HTML tags to format its caption string; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.AllowImage">
      <summary>
        <para>Gets or sets whether or not badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should display their icons.</para>
      </summary>
      <value>true if badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should display their icons; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Image">
      <summary>
        <para>Gets or sets the default image, displayed by all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>An Image object that is the default image, displayed by all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.ImageStretchMargins">
      <summary>
        <para>Gets or sets the image region that can be stretched.</para>
      </summary>
      <value>A Padding structure that is the image region that can be stretched.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.ImageUri">
      <summary>
        <para>Gets or sets the <see href="https://docs.devexpress.com/WindowsForms/16864/whats-installed/image-gallery-and-context-dependent-images">URI</see> that specifies an image from the DevExpress Image Gallery assigned to this badge.</para>
      </summary>
      <value>Specifies an image from the DevExpress Image Gallery assigned to this badge.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Location">
      <summary>
        <para>Gets or sets the relative position, based on which all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> are aligned.</para>
      </summary>
      <value>A ConenteAlignment enumerator value that specifies the relative position shared by all badges.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Offset">
      <summary>
        <para>Gets or sets the offset, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>A Point structure that is the offset, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.PaintStyle">
      <summary>
        <para>Gets or sets the paint style common to all badges owned by this manager.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.BadgePaintStyle enumerator value that specifies the paint style common to all badges owned by this manager.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.StretchImage">
      <summary>
        <para>Gets or sets whether all badges should stretch their images according to the displayed text.</para>
      </summary>
      <value>true if all badges should stretch their images according to the displayed text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.SvgImage">
      <summary>
        <para>Gets or sets the <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector image</see> assigned to a badge.</para>
      </summary>
      <value>The badge image.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.SvgImageSize">
      <summary>
        <para>Gets or sets the size of the <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector image</see> assigned to a badge.</para>
      </summary>
      <value>The vector image size.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Text">
      <summary>
        <para>Gets or sets the default text, displayed by all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>A String value that is the default text, displayed by all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.TextMargin">
      <summary>
        <para>Gets or sets the global text margin, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</para>
      </summary>
      <value>A Padding structure that is the global text margin, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.TrimByParent">
      <summary>
        <para>Gets or sets whether or not the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should trim any <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> that is bigger than its target element’s parent.</para>
      </summary>
      <value>true, to trim badges; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.Guide">
      <summary>
        <para>A child <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see> element that highlights specific form regions. Provides a built-in flyout panel for displaying additional information and/or actions related to the highlighted region.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.Guide.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.Guide.Appearances">
      <summary>
        <para>Provides access to a group of <see cref="T:DevExpress.Utils.AppearanceObject"/>s that store appearance settings for this <see cref="T:DevExpress.Utils.VisualEffects.Guide"/>.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.GuideAppearances object that stores guide appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.Guide.Properties">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties"/> object that stores settings for this <see cref="T:DevExpress.Utils.VisualEffects.Guide"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties"/> object that stores guide settings.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties">
      <summary>
        <para>Contains properties that affect invidual <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">adorner guides</see> only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.GuideDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.GuideProperties)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties"/> class with the specified settings.</para>
      </summary>
      <param name="parentProperties">A <see cref="T:DevExpress.Utils.VisualEffects.GuideProperties"/> object that stores global guide settings. These settings will be inherited by the newly created <see cref="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties"/> object.</param>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualBorderThickness">
      <summary>
        <para>Returns the current flyout border thickness of an adorner guide.</para>
      </summary>
      <value>The flyout border thickness of an adorner guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutBackColor">
      <summary>
        <para>Returns the current flyout’s background color for this guide.</para>
      </summary>
      <value>A Color that is the current flyout’s background color for this guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutBorderColor">
      <summary>
        <para>Returns the current flyout border color for this guide.</para>
      </summary>
      <value>A Color that is the current flyout border color for this guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutLocation">
      <summary>
        <para>Returns the current flyout location for this guide.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.GuideFlyoutLocation"/> enumeration value that is the current flyout location for this guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutOffset">
      <summary>
        <para>Returns the current offset of a flyout panel associated with this adorner guide.</para>
      </summary>
      <value>The current flyout panel offset.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutOpacity">
      <summary>
        <para>Returns the current flyout opacity for this guide.</para>
      </summary>
      <value>A Double value that is the current flyout opacity for this guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.AllowFlyoutPanel">
      <summary>
        <para>Gets or sets whether or not this guide should display its flyout panel.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not this guide should display its flyout panel.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutBackColor">
      <summary>
        <para>Gets or sets the flyout’s background color for the current guide.</para>
      </summary>
      <value>A Color applied to a flyout background of the current guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutBorderColor">
      <summary>
        <para>Gets or sets the color applied to flyout borders of the current guide.</para>
      </summary>
      <value>A Color applied to flyout borders of this guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutBorderThickness">
      <summary>
        <para>Gets or sets the border thickness of a flyout panel associated with this adorner guide.</para>
      </summary>
      <value>The border thickness of a flyout panel.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutLocation">
      <summary>
        <para>Gets or sets the flyout position relative to the current guide.</para>
      </summary>
      <value>A <see cref="T:System.Nullable`1"/>&lt;<see cref="T:DevExpress.Utils.VisualEffects.GuideFlyoutLocation"/>,&gt; enumerator value that specifies the flyout position relative to the current guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutOffset">
      <summary>
        <para>Gets or sets the offset for a flyout panel displayed by this adorner guide.</para>
      </summary>
      <value>The flyout panel offset.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutOpacity">
      <summary>
        <para>Gets or sets the flyout opacity for this guide.</para>
      </summary>
      <value>A <see cref="T:System.Nullable`1"/>&lt;<see cref="T:System.Double"/>,&gt; value that is the flyout opacity for this guide.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.IsFlyoutPanelEnabled">
      <summary>
        <para>Returns whether or not this guide will show its flyout panel when selected.</para>
      </summary>
      <value>true if this guide will show its flyout panel when selected; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.GuideFlyoutLocation">
      <summary>
        <para>Provides flags that can be passed to the <see cref="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutLocation">GuideDefaultProperties.FlyoutLocation</see> and <see cref="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutLocation">GuideProperties.FlyoutLocation</see> properties to specify the flyout panel position relative to it’s parent <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">adorner guides</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Bottom">
      <summary>
        <para>The flyout panel is displayed below its parent guide.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Default">
      <summary>
        <para>A default setting equal to the <see cref="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Bottom">GuideFlyoutLocation.Bottom</see> value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Left">
      <summary>
        <para>The flyout panel is displayed to the left of its parent guide.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Right">
      <summary>
        <para>The flyout panel is displayed to the right of its parent guide.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Top">
      <summary>
        <para>The flyout panel is displayed above its parent guide.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.GuideProperties">
      <summary>
        <para>Provides properties that affect all <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">adorner guides</see> owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.GuideProperties.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.GuideProperties"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.AllowFlyoutPanel">
      <summary>
        <para>Gets or sets whether any <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guide</see> owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see> can display flyout panels.</para>
      </summary>
      <value>true, to enable flyout panels for all guides; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutBackColor">
      <summary>
        <para>Gets or sets the background flyout panel color for any <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guide</see> owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
      <value>A Color applied to the flyout panel background.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutBorderColor">
      <summary>
        <para>Gets or sets the flyout panel border color for any <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guide</see> owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutBorderThickness">
      <summary>
        <para>Gets or sets the border thickness of all flyout panels displayed by adorner guides.</para>
      </summary>
      <value>The border thickness of flyout panels.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutLocation">
      <summary>
        <para>Gets or sets the flyout panel relative position for any <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guide</see> owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutOffset">
      <summary>
        <para>Gets or sets the offset for all flyout panels displayed by adorner guides.</para>
      </summary>
      <value>The flyout panel offset.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutOpacity">
      <summary>
        <para>Gets or sets the flyout panel opacity for any <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guide</see> owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.KeepFlyoutWithinScreenBounds">
      <summary>
        <para>Specifies whether guide flyouts should always stay within the current screen bounds.</para>
      </summary>
      <value>true if guide flyouts should always stay within the current screen bounds; false if guide flyouts can stretch beyond them.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.ShowGuidesShortcut">
      <summary>
        <para>Gets or sets a keyboard shortcut that can be pressed at runtime to display <see href="https://docs.devexpress.com/WindowsForms/116064/controls-and-libraries/forms-and-user-controls/adorner-ui-manager/adorner-guides">guides</see>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.KeyShortcut"/> enumerator value that is the keyboard shortcut that invokes guides.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHint">
      <summary>
        <para>An object used by an <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see> component to apply visual effects to controls based on these controls’ validation states.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHint.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHint.Appearances">
      <summary>
        <para>Provides access to appearance settings for the current validation hint.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintAppearances"/> object that stores appearance settings for this hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHint.Properties">
      <summary>
        <para>Provides access to base validation hint properties.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties"/> object that stores properties applied to this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintAppearances">
      <summary>
        <para>Provides three property groups that store the appearance settings for all possible validation states of a target control, related to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHintAppearances.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintAppearances"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintAppearances.IndeterminateState">
      <summary>
        <para>Provides access to appearance settings used by a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> when its target control is in the indeterminate state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> that stores appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintAppearances.InvalidState">
      <summary>
        <para>Provides access to appearance settings used by a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> when its target control is in the invalid state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> that stores appearance settings.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintAppearances.ValidState">
      <summary>
        <para>Provides access to appearance settings used by a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> when its target control is in the valid state.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> that stores appearance settings.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties">
      <summary>
        <para>Provides access to base validation hint properties. Objects of this type affect individual <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">validation hints</see> only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.ValidationHintBaseProperties)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties"/> class with the specified settings.</para>
      </summary>
      <param name="parentProperties">A  object that stores base validation hint settings. These settings will be inherited by the newly created <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties"/> object.</param>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualBackgroundMode">
      <summary>
        <para>Returns which <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> regions will be painted with this hint’s background color.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.ValidationHintBackgroundMode enumeration value.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualBorderToHintDistance">
      <summary>
        <para>Returns the current text-to-border indent for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.</para>
      </summary>
      <value>An Int32 value that is the distance between a border and a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualHintLocation">
      <summary>
        <para>Returns the current hint position for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintLocation"/> enumerator value that specifies the current hint position for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualHintPadding">
      <summary>
        <para>Returns the current hint padding for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
      <value>A Padding structure applied to a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualIcon">
      <summary>
        <para>Returns the icon currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>An Image currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualIconToTextDistance">
      <summary>
        <para>Returns the image-to-text indent for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>An Int32 value that is the image-to-text indent for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualIconType">
      <summary>
        <para>Returns the predefined icon displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintIconType"/> enumerator value that specifies which predefined icon is displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualImageUri">
      <summary>
        <para>Returns the unified resource identifier (URI) that specifies the image displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
      <value>A String value that is the URI of the displayed image.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualText">
      <summary>
        <para>Returns the text currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>A String value that is the text currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.AllowHtmlDrawText">
      <summary>
        <para>Gets or sets whether or not HTML tags in this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint text should be used to format this text string.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should recognize HTML tags in its hint text.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.BorderToHintDistance">
      <summary>
        <para>Gets or sets the indent between a border and a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Nullable`1"/>&lt;<see cref="T:System.Int32"/>,&gt; object that specifies the indent between a border and a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanHtmlDrawText">
      <summary>
        <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can format its hint text using HTML tags.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can format its hint text using HTML tags; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanShowBorder">
      <summary>
        <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a border around its target UI element.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a border; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanShowHint">
      <summary>
        <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint next to its target UI element.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanShowIcon">
      <summary>
        <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can currently display a glyph within its hint.</para>
      </summary>
      <value>true if this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can currently display a glyph within its hint; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintAlignment">
      <summary>
        <para>Gets or sets the alignment of this hint.</para>
      </summary>
      <value>Specifies the hint alignment.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintLocation">
      <summary>
        <para>Gets or sets the position of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint relative to its target UI element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintLocation"/> enumeration value that specifies the relative hint position.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintPadding">
      <summary>
        <para>Gets or sets the padding for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>A Padding structure that is the padding for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.Icon">
      <summary>
        <para>Gets or sets the image displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>An Image object displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.IconToTextDistance">
      <summary>
        <para>Gets or sets the distance between text and image within a hint, displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
      <value>An Int32 value that is the distance between text and image within a hint, displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.IconType">
      <summary>
        <para>Gets or sets one of the predefined images to be displayed within the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>A ValidationHintIconType enumeration value that specifies one of predefined images to be displayed within the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ImageOptions">
      <summary>
        <para>Provides access to settings that allow you to assign raster and vector images to validation hints.</para>
      </summary>
      <value>Stores validation hint image settings.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ImageUri">
      <summary>
        <para>Gets or sets the image displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint. The required image will be taken from the <see href="https://docs.devexpress.com/WindowsForms/16864/whats-installed/image-gallery-and-context-dependent-images">DevExpress Image Gallery</see>.</para>
      </summary>
      <value>A String value that specifies the image displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowBackgroundMode">
      <summary>
        <para>Gets or sets what <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s regions should be painted using this object’s background color.</para>
      </summary>
      <value>A <see cref="T:System.Nullable`1"/>&lt;DevExpress.Utils.VisualEffects.ValidationHintBackgroundMode,&gt; object that specifies what <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s regions should be painted using this object’s background color.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowBorder">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should draw a border around its target UI element.</para>
      </summary>
      <value>A DefaultBoolean enumeration value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should draw a border around its target UI element.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowHint">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint next to its target UI element.</para>
      </summary>
      <value>A DefaultBoolearn enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint next to its target UI element.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowIcon">
      <summary>
        <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.Text">
      <summary>
        <para>Gets or sets a text string displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</para>
      </summary>
      <value>A String displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties">
      <summary>
        <para>Provides access to base validation hint properties. Objects of this type affect all validation hints owned by an <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.AllowHtmlDrawText">
      <summary>
        <para>Gets or sets whether or not any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> owned by this manager should recognize HTML tags in its hint text.</para>
      </summary>
      <value>true if <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects should recognize HTML tags in their hint texts; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.BorderToHintDistance">
      <summary>
        <para>Gets or sets the indent between the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s border and hint. This setting is common to all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>s owned by this manager.</para>
      </summary>
      <value>An Int32 value that is the indent between the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s border and hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintAlignment">
      <summary>
        <para>Gets or sets the alignment of all validation hints owned by this Adorner Manager.</para>
      </summary>
      <value>The validation hint alignment.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintLocation">
      <summary>
        <para>Gets or sets the relative hint position for any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this Adorner UI Manager.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintLocation"/> enumeration value that specifies the relative hint position for any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this Adorner UI Manager.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintPadding">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> padding. This setting affects all validation hints owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
      <value>A Padding structure applied to all hints owned by this manager.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.Icon">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> icon. This icon will be displayed for all validation hints owned by the <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
      <value>An Image displayed by any validation hint owned by this manager.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.IconToTextDistance">
      <summary>
        <para>Gets or sets the indent between text and icon within a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s hint. This setting is applied to all child validation hints for the current <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
      <value>An Int32 value that is the default distance between hint text and image.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.IconType">
      <summary>
        <para>Gets or sets one of predefined icons to be displayed within <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object hints. This setting affects all validation hints owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintIconType"/> enumerator value that specifies a default validation hint icon.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ImageUri">
      <summary>
        <para>Gets or sets the image displayed within a hint of any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this manager. The required image will be taken from the <see href="https://docs.devexpress.com/WindowsForms/16864/whats-installed/image-gallery-and-context-dependent-images">DevExpress Image Gallery</see>.</para>
      </summary>
      <value>A String value that specifies the image displayed within a hint of any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this manager.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowBackgroundMode">
      <summary>
        <para>Gets or sets <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> elements that will be colorized using the background color. This setting is applied to all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects owned by this manager.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.ValidationHintBackgroundMode enumerator value that specifies <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> elements that will be colorized using the background color.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowBorder">
      <summary>
        <para>Gets or sets whether or not any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see> should display borders around its target UI element.</para>
      </summary>
      <value>true if validation hints should display borders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowHint">
      <summary>
        <para>Gets or sets whether or not any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this <see href="https://docs.devexpress.com/WindowsForms/114584/controls-and-libraries/forms-and-user-controls/adorner-ui-manager">Adorner UI Manager</see> should display hints next to its target UI element.</para>
      </summary>
      <value>true if validation hints should display hints; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowIcon">
      <summary>
        <para>Gets or sets whether or not a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint. This setting is applied to all validation hints owned by this manager.</para>
      </summary>
      <value>true if a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.SvgImage">
      <summary>
        <para>Gets or sets a <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector</see> images assigned to a validation hint.</para>
      </summary>
      <value>The vector image assigned to a hint.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.SvgImageSize">
      <summary>
        <para>Gets or sets the size of vector images assigned to validation hints.</para>
      </summary>
      <value>The vector image size.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.Text">
      <summary>
        <para>Gets or sets the default <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> text.</para>
      </summary>
      <value>A String value that is the default validation hint text.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties">
      <summary>
        <para>An object that stores individual validation hint properties for all three control validation states.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.ValidationHintProperties)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties"/> class with the specified settings.</para>
      </summary>
      <param name="parentProperties">A ValidationHintProperties object whose settings should be inherited by the newly created <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties"/> object.</param>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.ActualState">
      <summary>
        <para>Returns the current validation state of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.ValidationHintState enumerator value that returns the current validation state.</value>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.EnsureParentProperties(DevExpress.Utils.VisualEffects.AdornerElementProperties)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.IndeterminateState">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> behavior settings applied when its target UI element is not yet validated.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties"/> object that stores behavior settings applied when the target UI element that is yet to be validated.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.InvalidState">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> behavior settings applied when its target UI element fails validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties"/> object that stores behavior settings applied when the target UI element fails validation.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.State">
      <summary>
        <para>Gets or sets the current validation state of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.</para>
      </summary>
      <value>A ValidationHintState enumerator value that is the current validation state of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.ValidState">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> behavior settings applied when its target UI element successfully passes validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties"/> object that stores behavior settings applied when the target UI element passes validation.</value>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintIconType">
      <summary>
        <para>This enumeration’s values can be passed to the <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.IconType">ValidationHintBaseDefaultProperties.IconType</see> and <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.IconType">ValidationHintBaseProperties.IconType</see> properties to choose a predefined image for individual or all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Application">
      <summary>
        <para>An application icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Error">
      <summary>
        <para>An error icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Information">
      <summary>
        <para>An information icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.None">
      <summary>
        <para>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> will not display any icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Question">
      <summary>
        <para>A question icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Warning">
      <summary>
        <para>A warning icon.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintLocation">
      <summary>
        <para>Provides flags that can be passed to the <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintLocation">ValidationHintBaseDefaultProperties.HintLocation</see> and <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintLocation">ValidationHintBaseProperties.HintLocation</see> properties to set hint locations relative to their parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Bottom">
      <summary>
        <para>The hint will be displayed below the target UI element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Default">
      <summary>
        <para>A default location. This value is equal to <see cref="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Bottom">ValidationHintLocation.Bottom</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Left">
      <summary>
        <para>The hint will be displayed to the target UI element’s left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Right">
      <summary>
        <para>The hint will be displayed to the target UI element’s right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Top">
      <summary>
        <para>The hint will be displayed above the target UI element.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.VisualEffects.ValidationHintProperties">
      <summary>
        <para>An object that stores global validation hint properties for all three control validation states.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.VisualEffects.ValidationHintProperties.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintProperties"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.IndeterminateState">
      <summary>
        <para>Provides access to settings that will be in effect only when the parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> is in the indeterminate state.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties"/> object that stores settings for the indeterminate <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object state.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.InvalidState">
      <summary>
        <para>Provides access to settings that will be in effect only when the parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> is in the invalid state.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties"/> object that stores settings for the invalid <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object state.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.State">
      <summary>
        <para>Gets or sets this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s current state.</para>
      </summary>
      <value>A DevExpress.Utils.VisualEffects.ValidationHintState enumerator value that specifies this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object’s current state.</value>
    </member>
    <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.ValidState">
      <summary>
        <para>Provides access to settings that will be in effect only when the parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> is in the valid state.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties"/> object that stores settings for the valid <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object state.</value>
    </member>
    <member name="N:DevExpress.Utils.Win">
      <summary>
        <para>Contains classes supporting the functionality of the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Win.PopupToolWindowAnchor">
      <summary>
        <para>Contains values that specify the position at which a <see cref="T:DevExpress.Utils.FlyoutPanel"/> is displayed relative to its owner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Bottom">
      <summary>
        <para>The panel, when displayed, is stretched along the owner’s bottom edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Center">
      <summary>
        <para>The panel is displayed at the center of the owner. The display size is specified by the panel’s Size property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Left">
      <summary>
        <para>The panel, when displayed, is stretched along the owner’s left edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Manual">
      <summary>
        <para>The panel is displayed at the position specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.Location">FlyoutPanelOptions.Location</see> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Right">
      <summary>
        <para>The panel, when displayed, is stretched along the owner’s right edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Top">
      <summary>
        <para>The panel, when displayed, is stretched along the owner’s top edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.TopLeft">
      <summary>
        <para>The panel is displayed at the owner’s top left corner in the original size specified by the Size property. When using the <see cref="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Slide">PopupToolWindowAnimation.Slide</see> animation effect, the panel slides from top to bottom.</para>
        <para>Use the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent">FlyoutPanelOptions.HorzIndent</see> and <see cref="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent">FlyoutPanelOptions.VertIndent</see> properties to shift the display position inward from the top left corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.TopRight">
      <summary>
        <para>The panel is displayed at the owner’s top right corner in the original size specified by the Size property. When using the <see cref="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Slide">PopupToolWindowAnimation.Slide</see> animation effect, the panel slides from top to bottom.</para>
        <para>Use the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent">FlyoutPanelOptions.HorzIndent</see> and <see cref="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent">FlyoutPanelOptions.VertIndent</see> properties to shift the display position inward from the top right corner.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Win.PopupToolWindowAnimation">
      <summary>
        <para>Enumerates animation modes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Fade">
      <summary>
        <para>A fade animation effect.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Slide">
      <summary>
        <para>A slide-in animation effect.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.WorkspaceEventArgs">
      <summary>
        <para>Provides arguments for the <see cref="E:DevExpress.Utils.WorkspaceManager.BeforeApplyWorkspace"/>, <see cref="E:DevExpress.Utils.WorkspaceManager.AfterApplyWorkspace"/>, <see cref="E:DevExpress.Utils.WorkspaceManager.WorkspaceSaved"/>, <see cref="E:DevExpress.Utils.WorkspaceManager.WorkspaceAdded"/>, and <see cref="E:DevExpress.Utils.WorkspaceManager.WorkspaceRemoved"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceEventArgs.#ctor(DevExpress.Utils.IWorkspace)">
      <summary>
        <para>Initializes a new WorkspaceEventArgs class instance.</para>
      </summary>
      <param name="workspace">An IWorkspace object that specifies the processed workspace. This parameter is assigned to the <see cref="P:DevExpress.Utils.WorkspaceEventArgs.Workspace"/> property.</param>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceEventArgs.Tag">
      <summary>
        <para>Gets or sets a unique ID for the current workspace.</para>
      </summary>
      <value>Any Object that serves as a unique workspace ID.</value>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceEventArgs.Workspace">
      <summary>
        <para>Gets the processed workspace.</para>
      </summary>
      <value>An IWorkspace object that specifies the processed workspace.</value>
    </member>
    <member name="T:DevExpress.Utils.WorkspaceManager">
      <summary>
        <para>Manages layouts of all DevExpress controls in the application as one global <see href="https://docs.devexpress.com/WindowsForms/17674/controls-and-libraries/form-layout-managers/workspace-manager">workspace</see>. Workspaces can be saved and restored to (from) a local storage or stream.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.WorkspaceManager"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.WorkspaceManager"/> class with the specified settings.</para>
      </summary>
      <param name="container">An IContainer that is the target control of the newly created <see cref="T:DevExpress.Utils.WorkspaceManager"/> object.</param>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.AfterApplyWorkspace">
      <summary>
        <para>Occurs after a workspace was applied.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.AllowTransitionAnimation">
      <summary>
        <para>Gets or sets whether or not changing workspaces within this <see cref="T:DevExpress.Utils.WorkspaceManager"/> should be followed by animation effects.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether or not changing workspaces within this <see cref="T:DevExpress.Utils.WorkspaceManager"/> should be followed by animation effects.</value>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.ApplyWorkspace(System.String)">
      <summary>
        <para>Locates a workspace with the target name within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection and applies it to the application.</para>
      </summary>
      <param name="name">A String value that is the workspace name within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.BeforeApplyWorkspace">
      <summary>
        <para>Fires before the Workspace Manager applies a new workspace.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.CaptureWorkspace(System.String,System.Boolean)">
      <summary>
        <para>Captures the current form layout and places it to the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection under the specific name.</para>
      </summary>
      <param name="name">A String value that is the name of the captured workspaces.</param>
      <param name="acceptNestedObjects">true if the workspace should include the layout of child controls hosted within controls on the current form (user control); otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.CloseStreamOnWorkspaceLoading">
      <summary>
        <para>Gets or sets whether this <see cref="T:DevExpress.Utils.WorkspaceManager"/> should automatically close streams opened when loading workspaces.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether this <see cref="T:DevExpress.Utils.WorkspaceManager"/> should automatically close streams opened when loading workspaces.</value>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.CloseStreamOnWorkspaceSaving">
      <summary>
        <para>Gets or sets whether this <see cref="T:DevExpress.Utils.WorkspaceManager"/> should automatically close streams opened when saving workspaces.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether this <see cref="T:DevExpress.Utils.WorkspaceManager"/> should automatically close streams opened when saving workspaces.</value>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.FromControl(System.Windows.Forms.Control)">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Utils.WorkspaceManager"/> stored within the target control.</para>
      </summary>
      <param name="control">A Control from which a <see cref="T:DevExpress.Utils.WorkspaceManager"/> is extracted.</param>
      <returns>A <see cref="T:DevExpress.Utils.WorkspaceManager"/> stored within the target control.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.GetWorkspace(System.Int32)">
      <summary>
        <para>Returns a workspace with a specific index from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
      <param name="index">An Int32 value that is the index of a workspace to be obtained.</param>
      <returns>An IWorkspace object that is the workspace with the target index.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.GetWorkspace(System.String)">
      <summary>
        <para>Returns a workspace with a specific name from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
      <param name="name">A String value that is the name of a workspace to be obtained.</param>
      <returns>An IWorkspace object that is the workspace with the target name.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.IO.Stream,System.Boolean)">
      <summary>
        <para>Loads a workspace from the target stream and places this workspace in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection under the specific name.</para>
      </summary>
      <param name="name">A String value that is the name this workspace will have in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="stream">A Stream that contains the desired workspace.</param>
      <param name="getNameFromData">true if the workspace name written in a stream has a priority over the name parameter of this method; otherwise, false.</param>
      <returns>true if the workspace was successfully loaded; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.IO.Stream)">
      <summary>
        <para>Loads a workspace from the target stream and places it in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection under the specific name.</para>
      </summary>
      <param name="name">A String value that is the name of the loaded workspace within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="stream">A Stream that contains the required workspace.</param>
      <returns>true if the workspace was successfully loaded; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.Object,System.Boolean)">
      <summary>
        <para>Loads a workspace from the target file and places this workspace in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection under the specific name.</para>
      </summary>
      <param name="name">A String value that is the name this workspace will have in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="path">A String value that is the path to a local storage file, which contains the required workspace.</param>
      <param name="getNameFromData">true if the workspace name written in a file has a priority over the name parameter of this method; otherwise, false.</param>
      <returns>true if the workspace was successfully loaded; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.Object)">
      <summary>
        <para>Loads a workspace from the target local file and places it in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection under the specific name.</para>
      </summary>
      <param name="name">A String value that is the name under which the loaded workspace is kept in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="path">An Object that is the location of the file that stores a workspace.</param>
      <returns>true if the workspace was successfully loaded; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspaces(System.IO.Stream)">
      <summary>
        <para>Loads all workspaces in the target stream into the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
      <param name="stream">A Stream that stores workspaces to be loaded.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspaces(System.Object)">
      <summary>
        <para>Loads all workspaces in the target file into the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
      <param name="path">A String value that specifies the path to a file that stores workspaces.</param>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.PropertyDeserializing">
      <summary>
        <para>Occurs whenever a property is about to be restored from a workspace.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.PropertySerializing">
      <summary>
        <para>Occurs whenever a property is about to be written into a workspace.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.RecentWorkspaces">
      <summary>
        <para>Provides access to the recently used workspaces collection.</para>
      </summary>
      <value>A List object containing the recently used workspaces collection.</value>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.RemoveWorkspace(System.String)">
      <summary>
        <para>Removes a workspace with the target name from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
      <param name="name">A String value that is the name under which the workspace is stored within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.RenameWorkspace(System.String,System.String)">
      <summary>
        <para>Renames the target workspace.</para>
      </summary>
      <param name="oldName">A String value that is the name under which the workspace is currently stored in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="newName">A String value that is the new name for the workspace.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.RestoreLayout(System.Collections.Generic.IEnumerable{System.ComponentModel.IComponent},System.IO.Stream,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Loads the layouts of specified controls from a stream.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="targetComponents">A collection of controls whose layouts are to be loaded.</param>
      <param name="stream">A Stream with layouts of specified controls.</param>
      <param name="propertyDeserializing">The method that defines a set of criteria and allows you to filter deserialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.RestoreLayout(System.Collections.Generic.IEnumerable{System.ComponentModel.IComponent},System.String,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Loads the layouts of specified controls from a file.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="targetComponents">A collection of controls whose layouts are to be loaded.</param>
      <param name="path">The path to a file that stores the layout.</param>
      <param name="propertyDeserializing">The method that defines a set of criteria and allows you to filter deserialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.RestoreLayout(System.Windows.Forms.Control,System.IO.Stream,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Loads the layout of the specified control from a stream.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="targetControl">A control whose layout is to be loaded.</param>
      <param name="stream">A Stream with the control’s layout.</param>
      <param name="propertyDeserializing">The method that defines a set of criteria and allows you to filter deserialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.RestoreLayout(System.Windows.Forms.Control,System.String,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Loads the layout of the specified control from a file.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="targetControl">A control whose layout is to be loaded.</param>
      <param name="path">The path to a file that stores layouts of controls.</param>
      <param name="propertyDeserializing">The method that defines a set of criteria and allows you to filter deserialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveLayout(System.Collections.Generic.IEnumerable{System.ComponentModel.IComponent},System.IO.Stream,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Saves the layouts of specified controls to a stream.</para>
      </summary>
      <param name="targetComponents">A collection of controls whose layouts are to be saved.</param>
      <param name="stream">A Stream with layouts of specified controls.</param>
      <param name="propertySerializing">The method that defines a set of criteria and allows you to filter serialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveLayout(System.Collections.Generic.IEnumerable{System.ComponentModel.IComponent},System.String,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Saves the layouts of specified controls to a file.</para>
      </summary>
      <param name="targetComponents">A collection of controls whose layouts are to be saved.</param>
      <param name="path">The path to a file that stores layouts of controls.</param>
      <param name="propertySerializing">The method that defines a set of criteria and allows you to filter serialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveLayout(System.Windows.Forms.Control,System.IO.Stream,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Saves the layout of the specified control to a stream.</para>
      </summary>
      <param name="targetControl">A control whose layout is to be saved.</param>
      <param name="stream">A Stream with the control’s layout.</param>
      <param name="propertySerializing">The method that defines a set of criteria and allows you to filter serialized properties.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveLayout(System.Windows.Forms.Control,System.String,System.Predicate{DevExpress.Utils.IComponentProperty})">
      <summary>
        <para>Saves the layout of the specified control to a file.</para>
      </summary>
      <param name="targetControl">A control whose layout is to be saved.</param>
      <param name="path">The path to a file that stores the control’s layout.</param>
      <param name="propertySerializing">The method that defines a set of criteria and allows you to filter serialized properties.</param>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.SaveTargetControlSettings">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.Utils.WorkspaceManager"/> should store settings like “Bounds” or “State” for the form assigned to the <see cref="P:DevExpress.Utils.WorkspaceManager.TargetControl">WorkspaceManager.TargetControl</see> property.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.Utils.WorkspaceManager"/> should save parent form settings; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveWorkspace(System.String,System.IO.Stream,System.Boolean)">
      <summary>
        <para>Saves a workspace from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection to a stream.</para>
      </summary>
      <param name="name">The name of the target workspace in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="stream">The stream to which the target workspace is to be saved.</param>
      <param name="createIfNotExisting">true to capture and then save the current controls’ layouts to a stream if the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection does not contain a workspace with the specified name.false to interrupt the workspace saving if the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection does not contain a workspace with the specified name.</param>
      <returns>true if the workspace was successfully saved; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveWorkspace(System.String,System.Object,System.Boolean)">
      <summary>
        <para>Saves a workspace from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection to a local file.</para>
      </summary>
      <param name="name">The name of the target workspace in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</param>
      <param name="path">The path to which the target workspace is to be saved.</param>
      <param name="createIfNotExisting">true to capture and then save the current controls’ layouts to a file if the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection does not contain a workspace with the specified name.false to interrupt the workspace saving if the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection does not contain a workspace with the specified name.</param>
      <returns>true if saving was successful; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveWorkspaces(System.IO.Stream)">
      <summary>
        <para>Saves all workspaces in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection to the target stream.</para>
      </summary>
      <param name="stream">A Stream to which <see cref="T:DevExpress.Utils.WorkspaceManager"/> workspaces should be saved.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SaveWorkspaces(System.Object)">
      <summary>
        <para>Saves all workspaces in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection to the target file.</para>
      </summary>
      <param name="path">A String value that specifies the path to a file.</param>
    </member>
    <member name="M:DevExpress.Utils.WorkspaceManager.SetSerializationEnabled(System.ComponentModel.IComponent,System.Boolean,System.Boolean)">
      <summary>
        <para>Allows you to exclude a specific control from the global application workspace.</para>
      </summary>
      <param name="component">A Component that is the target control.</param>
      <param name="enabled">false to force the WorkspaceManager to ignore the target control; otherwise, true.</param>
      <param name="excludeChildren">true to ingore child controls of the target control; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.ShowPathColumnInWorkspacesDialog">
      <summary>
        <para>Gets or sets whether the “Workspaces” dialog should display the column that shows paths to workspace files.</para>
      </summary>
      <value>true if the “Workspaces” dialog should display the column that shows paths to workspace files; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.TargetControl">
      <summary>
        <para>Gets or sets a control whose layout is managed by this <see cref="T:DevExpress.Utils.WorkspaceManager"/>.</para>
      </summary>
      <value>A Control whose layout is managed by this <see cref="T:DevExpress.Utils.WorkspaceManager"/>.</value>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.ThrowOnWorkspaceError">
      <summary>
        <para>Gets or sets whether the application should throw the <see cref="T:System.Xml.XmlException"/> when a user attempts to apply a corrupt workspace. Regardless of this setting, the Workspace Manager also fires the <see cref="E:DevExpress.Utils.WorkspaceManager.WorkspaceError">WorkspaceError</see> event that notifies you about the issue.</para>
      </summary>
      <value>Specifies whether or not invalid workspaces should trigger the <see cref="T:System.Xml.XmlException"/> when applied. The Default value is equal to False.</value>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.TransitionType">
      <summary>
        <para>Gets or sets the transition animation that follows applying workspaces.</para>
      </summary>
      <value>An ITransitionAnimator object that is the transition animation with its parameters.</value>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceAdded">
      <summary>
        <para>Occurs whenever a new workspace was added to the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceCollectionChanged">
      <summary>
        <para>Occurs whenever the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection of the current <see href="https://docs.devexpress.com/WindowsForms/17674/controls-and-libraries/form-layout-managers/workspace-manager">Workspace Manager</see> component changes.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceError">
      <summary>
        <para>Occurs when a corrupt workspace is activated. Allows you to read the “args” parameter to identify the issue found in this layout. This event is followed by the <see cref="T:System.Xml.XmlException"/> if the <see cref="P:DevExpress.Utils.WorkspaceManager.ThrowOnWorkspaceError">WorkspaceManager.ThrowOnWorkspaceError</see> property is enabled.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceRemoved">
      <summary>
        <para>Fires when a workspace was removed from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces">WorkspaceManager.Workspaces</see> collection.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.WorkspaceManager.Workspaces">
      <summary>
        <para>Provides access to all currently active workspaces.</para>
      </summary>
      <value>A List structure that stores all currently active workspaces.</value>
    </member>
    <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceSaved">
      <summary>
        <para>Occurs after the WorkspaceManager.SaveWorkspace method was called.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.XPThemeSupport">
      <summary>
        <para>Contains values specifying whether bound controls is drawn using XP style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.XPThemeSupport.Default">
      <summary>
        <para>If bound control can display or edit data using inplace editors, latter are painted in the same style as its container. Otherwise it is drawn in XP style, if it is supported by a user’s system.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.XPThemeSupport.Disabled">
      <summary>
        <para>An editor is drawn in Windows Classic style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.XPThemeSupport.Enabled">
      <summary>
        <para>An editor is drawn in XP style if it is supported by user’s system.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraBars.Docking2010">
      <summary>
        <para>Contains classes that are used to emulate the UI found in Visual Studio 2010.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraBars.Docking2010.ButtonStyle">
      <summary>
        <para>Provides members that specify whether a button is a regular (push button) or check-button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraBars.Docking2010.ButtonStyle.CheckButton">
      <summary>
        <para>Specifies whether a <see href="https://docs.devexpress.com/WindowsForms/11409/controls-and-libraries/docking-library/header-buttons">custom header button</see> is a check or a group radio button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraBars.Docking2010.ButtonStyle.PushButton">
      <summary>
        <para>Specifies a <see href="https://docs.devexpress.com/WindowsForms/11409/controls-and-libraries/docking-library/header-buttons">custom header button</see> is a regular (push) button.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraEditors">
      <summary>
        <para>Contains editor classes that implement the functionality for corresponding controls.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraEditors.ButtonPanel">
      <summary>
        <para>Contains classes that provide the base button functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.ButtonPanel.IButtonProperties">
      <summary>
        <para>Contains properties for <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> objects.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Appearance">
      <summary>
        <para>Provides access to the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s appearance settings.</para>
      </summary>
      <value>An AppearanceObject that stores the current IButton object’s appearance settings.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> by preventing visual updates of the object and its elements until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object and its elements without immediate visual update.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption">
      <summary>
        <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s caption.</para>
      </summary>
      <value>A String value that is the current IButton object’s caption.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Checked">
      <summary>
        <para>Gets or sets if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> is checked.</para>
      </summary>
      <value>A Boolean value specifying whether the current IButton is checked.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Enabled">
      <summary>
        <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is enabled.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.EndUpdate">
      <summary>
        <para>Unlocks an <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> causing immediate visual update of the object and all its elements.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Glyphs">
      <summary>
        <para>Gets or sets a collection of glyphs for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object.</para>
      </summary>
      <value>An Object that is the glyphs collection for the current IButton object.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.GroupIndex">
      <summary>
        <para>Gets or sets a group index for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object.</para>
      </summary>
      <value>An Int32 value that is the group index for the current IButton object. The default value is -1.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Image">
      <summary>
        <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s icon.</para>
      </summary>
      <value>An Image object that is the current IButton object’s icon.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageIndex">
      <summary>
        <para>Gets or sets an <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Images">IButtonProperties.Images</see> collection member used as the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s glyph.</para>
      </summary>
      <value>An Int32 value that points to an <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Images">IButtonProperties.Images</see> collection member used as the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s glyph.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageLocation">
      <summary>
        <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s icon location relative to its <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption">IButtonProperties.Caption</see>.</para>
      </summary>
      <value>An ImageLocation enumerator value specifying the current IButton object’s icon location relative to its <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption">IButtonProperties.Caption</see>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageOptions">
      <summary>
        <para>Provides access to all properties that allow you to assign and customize an icon for this <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.</para>
      </summary>
      <value>A DevExpress.XtraEditors.ButtonPanel.BaseButtonImageOptions object that stores all properties that allow you to assign and customize an icon for this <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Images">
      <summary>
        <para>Gets a collection of images that can be used as the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s icon.</para>
      </summary>
      <value>The Object that is the source of images assigned to the parent dock panel’s <see cref="P:DevExpress.XtraBars.Docking.DockPanel.Images">DockPanel.Images</see> property.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageUri">
      <summary>
        <para>Gets or sets the uniform resource identifier of the image in the DX Image Gallery displayed in the button.</para>
        <para>A specific version of the addressed image is automatically chosen based on the app context (the current skin and required image size).</para>
      </summary>
      <value>A string value that specifies the uniform resource identifier of the image to be displayed in the button.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.IsUpdateLocked">
      <summary>
        <para>Gets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> is locked for any visual update.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> is locked for any visual update; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Style">
      <summary>
        <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s type.</para>
      </summary>
      <value>A ButtonStyle enumerator value that specifies the current IButton object’s type.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.SuperTip">
      <summary>
        <para>Gets or sets a super tool-tip for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Tag">
      <summary>
        <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s tag.</para>
      </summary>
      <value>An Object that is the current IButton object’s tag.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ToolTip">
      <summary>
        <para>Gets or sets a tool-tip for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.</para>
      </summary>
      <value>A String value that is the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>‘s tool-tip.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.UseCaption">
      <summary>
        <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption">IButtonProperties.Caption</see> is visible.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption">IButtonProperties.Caption</see> is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.UseImage">
      <summary>
        <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s icon is visible.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s icon is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Visible">
      <summary>
        <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is visible.</para>
      </summary>
      <value>true if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.VisibleIndex">
      <summary>
        <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object’s relative position.</para>
      </summary>
      <value>An Int32 value specifying the current IButton object’s relative position.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.ColumnFilterPopupMode">
      <summary>
        <para>Contains values that specify whether Data Grid and Tree List columns should display Excel-style or classic <see href="https://docs.devexpress.com/WindowsForms/114635/controls-and-libraries/data-grid/filter-and-search">filter menus</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Classic">
      <summary>
        <para>Grid and TreeList columns display <see href="https://docs.devexpress.com/WindowsForms/114635/controls-and-libraries/data-grid/filter-and-search">classic drop-down filter menus</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Default">
      <summary>
        <para>Equivalent to the <see cref="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Excel">ColumnFilterPopupMode.Excel</see> setting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Excel">
      <summary>
        <para>Grid and TreeList columns display <see href="https://docs.devexpress.com/WindowsForms/114635/controls-and-libraries/data-grid/filter-and-search">Excel-style filter menus</see>.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraEditors.Controls">
      <summary>
        <para>Contains classes that provide editor functionality and specify editor appearance.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.Controls.BorderSide">
      <summary>
        <para>Contains values specifying border sides.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderSide.All">
      <summary>
        <para>All border sides are painted. Enabling this flag results in enabling the Left, Top, Right and Bottom flags and disabling the None flag.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Bottom">
      <summary>
        <para>Bottom border side is painted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Left">
      <summary>
        <para>Left border side is painted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderSide.None">
      <summary>
        <para>None of border sides is painted. Enabling this option results in disabling all other options.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Right">
      <summary>
        <para>Right border side is painted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Top">
      <summary>
        <para>Top border side is painted.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.Controls.BorderStyles">
      <summary>
        <para>Enumerates border and button styles for editors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Default">
      <summary>
        <para>The default border style depends on the application <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">skin</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Flat">
      <summary>
        <para>Deprecated. Borders are flat.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.HotFlat">
      <summary>
        <para>Deprecated. Flat border. The border and the client area are highlighted when the cursor hovers the editor.</para>
        <para />
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.NoBorder">
      <summary>
        <para>No border.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Office2003">
      <summary>
        <para>Deprecated. Office 2003-style border.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Simple">
      <summary>
        <para>Flat border.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Style3D">
      <summary>
        <para>Deprecated. Three-dimensional border.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat">
      <summary>
        <para>Deprecated. Flat border in the Office XP style. Border and the client area are highlighted when the mouse pointer hovers the editor; otherwise, no border.</para>
        <para />
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.Controls.ButtonPredefines">
      <summary>
        <para>Specifies the surface image of a button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Clear">
      <summary>
        <para>A Clear symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Close">
      <summary>
        <para>A Close symbol is displayed on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Combo">
      <summary>
        <para>A Down-arrow for a combo box is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Delete">
      <summary>
        <para>A Delete symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Down">
      <summary>
        <para>A Down-arrow is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.DropDown">
      <summary>
        <para>A Down-arrow is drawn on the button’s surface. Unlike, the Down button, this kind of button allows text to be displayed next to the down-arrow.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Ellipsis">
      <summary>
        <para>An Ellipsis symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph">
      <summary>
        <para>A custom bitmap is drawn on the button’s surface.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Left">
      <summary>
        <para>A Left-arrow symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Minus">
      <summary>
        <para>A Minus sign is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.OK">
      <summary>
        <para>An OK sign is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Plus">
      <summary>
        <para>A Plus sign is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Redo">
      <summary>
        <para>A Redo symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Right">
      <summary>
        <para>A Right-arrow is drawn the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Search">
      <summary>
        <para>A Search symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Separator">
      <summary>
        <para>A Separator.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinDown">
      <summary>
        <para>A down-arrow for a spin editor is displayed on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinLeft">
      <summary>
        <para>A left-arrow for a spin editor is displayed on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinRight">
      <summary>
        <para>A right-arrow for a spin editor is displayed on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinUp">
      <summary>
        <para>An up-arrow for a spin editor is displayed on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Undo">
      <summary>
        <para>An Undo symbol is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Up">
      <summary>
        <para>An Up-arrow is drawn on the button’s surface.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.Controls.ButtonStates">
      <summary>
        <para>Specifies the state of an <see cref="T:DevExpress.XtraEditors.Controls.EditorButton"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.DeepPush">
      <summary>
        <para>A button is highlighted when mouse crosses the entire button boundaries.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Disabled">
      <summary>
        <para>A button is disabled and does not respond to end-user actions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Hottrack">
      <summary>
        <para>A button is highlighted when the mouse enters its boundaries.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.None">
      <summary>
        <para>A button is drawn using its default look and feel.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Push">
      <summary>
        <para>A button is drawn to reflect a pressed state.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.Controls.CheckStyles">
      <summary>
        <para>Contains values specifying the look of the check box within a <see cref="T:DevExpress.XtraEditors.CheckEdit"/> control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Radio">
      <summary>
        <para>A radio button (the appearance depends on the control’s look-and-feel):</para>
        <para>In the Skin, Office 2003 and WindowsXP paint schemes, the Indeterminate and Unchecked check styles look the same.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Standard">
      <summary>
        <para>The default mode (the appearance depends on the control’s look-and-feel) :</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style1">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style10">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style11">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style12">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style13">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style14">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style15">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style16">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style2">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style3">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style4">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style5">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style6">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style7">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style8">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style9">
      <summary>
        <para>Predefined custom style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.UserDefined">
      <summary>
        <para>Allows you to customize the check box glyph using the <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.ImageOptions">RepositoryItemCheckEdit.ImageOptions</see> property.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.Controls.StyleIndeterminate">
      <summary>
        <para>Contains check box paint styles applied in the indeterminate state.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.Inactive">
      <summary>
        <para>A check box is drawn grayed. In skin paint themes, the Inactive option is equivalent to InactiveChecked.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.InactiveChecked">
      <summary>
        <para>A check box is drawn grayed. An additional gray tick mark is displayed in the Flat, UltraFlat and Style3D paint themes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.Unchecked">
      <summary>
        <para>A check box is drawn unchecked.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.DirectXFormBase">
      <summary>
        <para>Exposes core <see cref="T:DevExpress.XtraEditors.DirectXForm"/> properties.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.DirectXFormBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.DirectXFormBase"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.DirectXFormBase.AddControl(System.Windows.Forms.Control)">
      <summary>
        <para>Adds the target control to this DirectXForm.</para>
      </summary>
      <param name="control">The control to be owned by this DirectXForm.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.DirectXFormBase.AllowMove">
      <summary>
        <para>Gets or sets whether users can drag-and-drop the form’s title bar to move this form.</para>
      </summary>
      <value>true, if users are allowed to move this form; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.DirectXFormBase.ContainerControl">
      <summary>
        <para>Returns the client area container that hosts form’s child controls.</para>
      </summary>
      <value>The client area container of this form.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.DirectXFormBase.ForceDirectX">
      <summary>
        <para>Gets or sets whether the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see> should be enabled for this form and its child controls.</para>
      </summary>
      <value>Specifies whether this form should utilize the DirectX Hardware Accelleration. The DefaultBoolean.Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.HtmlElementMouseClick">
      <summary>
        <para>Occurs when a user clicks any element within an HTML template.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.HtmlElementMouseDown">
      <summary>
        <para>Occurs when a mouse button is pressed, and the mouse pointer is over an HTML element.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.HtmlElementMouseMove">
      <summary>
        <para>Occurs when a mouse pointer moves while over an element of an HTML-CSS template.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.HtmlElementMouseOut">
      <summary>
        <para>Occurs when a mouse pointer leaves the bounds of an element within an HTML-CSS template.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.HtmlElementMouseOver">
      <summary>
        <para>Occurs when a mouse pointer enters the bounds of an element within an HTML-CSS template.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.HtmlElementMouseUp">
      <summary>
        <para>Occurs when a mouse button pressed over an element of an HTML-CSS template is released.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.DirectXFormBase.HtmlImages">
      <summary>
        <para>Gets or sets the collection of images that elements of an HTML template can use.</para>
      </summary>
      <value>The collection of images used by HTML template elements.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.DirectXFormBase.HtmlTemplate">
      <summary>
        <para>Returns an <see href="https://docs.devexpress.com/WindowsForms/403397/common-features/html-css-based-desktop-ui">HTML Template</see> for this form.</para>
      </summary>
      <value>An HTML template for this form.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.DirectXFormBase.PaintEx">
      <summary>
        <para>A <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX</see>-compatible event that replaces the standard Control.Paint event. Occurs when the form is redrawn.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.ExpressionEditorMode">
      <summary>
        <para>Lists modes that specify the <see href="https://docs.devexpress.com/WindowsForms/6212/common-features/expressions/expression-editor">Expression Editor</see> version.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ExpressionEditorMode.AutoComplete">
      <summary>
        <para>Specifies a new version of the Expression editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ExpressionEditorMode.Default">
      <summary>
        <para>Editor version depends on the <see cref="F:DevExpress.XtraEditors.WindowsFormsSettings.DefaultSettingsCompatibilityMode">WindowsFormsSettings.DefaultSettingsCompatibilityMode</see> value. If its value is v16 or less, it is the legacy version; otherwise, the new version is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ExpressionEditorMode.Standard">
      <summary>
        <para>Specifies a legacy version of the Expression editor.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.FilterCriteriaDisplayStyle">
      <summary>
        <para>Enumerates display styles of filter criteria in a control’s Filter Panel, MRU Filter List, and Filter Editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterCriteriaDisplayStyle.Default">
      <summary>
        <para>When a control’s FilterCriteriaDisplayStyle property is set to Default, the actual display style is specified by the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.FilterCriteriaDisplayStyle">WindowsFormsSettings.FilterCriteriaDisplayStyle</see> property.</para>
        <para>For the Report Designer and Dashboard Designer, the default display style is Visual.</para>
        <para>For other controls, the default display style is Visual starting from v21.1; in older versions, the default display style is Text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterCriteriaDisplayStyle.Text">
      <summary>
        <para>Renders filter criteria in a text-based format.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterCriteriaDisplayStyle.Visual">
      <summary>
        <para>Renders filter criteria in an easy-to-read format and uses skin-based colored highlights to differentiate between column names, functions, and values. In the Filter Panel, the ‘x’ button is displayed when you hover over a condition. This button allows users to remove individual conditions from the filter.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.FindPanelBehavior">
      <summary>
        <para>Enumerates values that specify whether the <see href="https://docs.devexpress.com/WindowsForms/8869/controls-and-libraries/data-grid/visual-elements/grid-control-elements/find-panel">find panel</see> displays the found records only or displays all records and highlights the found records.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FindPanelBehavior.Default">
      <summary>
        <para>The behavior depends on the static (Shared in VB) <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.FindPanelBehavior">WindowsFormsSettings.FindPanelBehavior</see> property. If the latter property is also set to <see cref="F:DevExpress.XtraEditors.FindPanelBehavior.Default"/>, the <see cref="F:DevExpress.XtraEditors.FindPanelBehavior.Filter"/> mode is applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FindPanelBehavior.Filter">
      <summary>
        <para>Hide records that do not match a query. Highlight search results in cells.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FindPanelBehavior.Search">
      <summary>
        <para>Highlight search results in cells and on the scrollbar. A search behavior is not supported in <see href="https://docs.devexpress.com/WindowsForms/8398/controls-and-libraries/data-grid/data-binding/large-data-sources-server-and-instant-feedback-modes">server mode</see>.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.FormBorderEffect">
      <summary>
        <para>Enumerates border effects for forms and dialogs.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FormBorderEffect.Default">
      <summary>
        <para>The default border adorning effect, applied as follows:</para>
        <para>For the <see cref="T:DevExpress.XtraEditors.XtraForm"/>, a shadow is displayed in the “McSkin” skin. No adorning effect is applied in other skins.</para>
        <para>For the <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>, a shadow is displayed in the following skins: “Office 2013”, “Office 2013 Dark Gray”, “Office 2013 Light Gray”, and “McSkin”. No adorning effect is applied in other skins.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FormBorderEffect.Glow">
      <summary>
        <para>A glow effect. The default colors can be changed via the <see cref="P:DevExpress.XtraEditors.XtraForm.ActiveGlowColor">XtraForm.ActiveGlowColor</see> and <see cref="P:DevExpress.XtraEditors.XtraForm.InactiveGlowColor">XtraForm.InactiveGlowColor</see> properties.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FormBorderEffect.None">
      <summary>
        <para>No adorning effect.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FormBorderEffect.Shadow">
      <summary>
        <para>Displays a shadow around the form.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs">
      <summary>
        <para>Supplies data for the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption">GroupControl.CustomDrawCaption</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.#ctor(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.Drawing.ObjectPainter,DevExpress.Utils.Drawing.ObjectInfoArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> class.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most  used pens, fonts and brushes. This value is assigned to the Cache property.</param>
      <param name="painter">An DevExpress.Utils.Drawing.ObjectPainter object that provides facilities for painting an element using the default mechanism. This value is assigned to the Painter property.</param>
      <param name="info">A DevExpress.Utils.Drawing.ObjectInfoArgs object that contains information about the element being painted. This value is assigned to the <see cref="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.Info">GroupCaptionCustomDrawEventArgs.Info</see> property.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.#ctor(DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="args">A GroupCaptionCustomDrawEventArgs object whose settings should be copied.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.CaptionBounds">
      <summary>
        <para>Gets the painted caption’s bounding rectangle.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the painted caption’s bounding rectangle.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.DefaultDrawBackground">
      <summary>
        <para>Performs default painting of the control’s caption background.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.DefaultDrawButtons">
      <summary>
        <para>Performs default painting of the buttons embedded in the control’s caption.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.DefaultDrawImage">
      <summary>
        <para>Performs default painting of the control’s caption image.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.DefaultDrawText">
      <summary>
        <para>Performs default painting of the text in the control’s caption.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.Info">
      <summary>
        <para>Gets information on the painted group.</para>
      </summary>
      <value>A DevExpress.Utils.Drawing.GroupObjectInfoArgs object which provides information about the painted group.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventHandler">
      <summary>
        <para>A method that handles the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption">GroupControl.CustomDrawCaption</see> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the group control that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraEditors.GroupControl">
      <summary>
        <para>The panel with a title which can be aligned along the top, bottom, left or right edge.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.AllowBorderColorBlending">
      <summary>
        <para>Gets or sets whether to colorize the group caption and border with the BorderColor setting in skinning paint schemes. This property is ignored by default starting from v18.2.</para>
      </summary>
      <value>true, to apply a custom color to the group control’s border and caption background in skinning paint schemes; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.AllowGlyphSkinning">
      <summary>
        <para>Gets or sets whether an image within the <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s caption should be painted using the control’s foreground color.</para>
      </summary>
      <value>true if an image within the <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s caption should be painted using the control’s foreground color; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.AllowHtmlText">
      <summary>
        <para>Gets or sets whether HTML tags can be used to format the control’s <see cref="P:DevExpress.XtraEditors.GroupControl.Text">GroupControl.Text</see>.</para>
      </summary>
      <value>true if HTML tags can be used to format the control’s <see cref="P:DevExpress.XtraEditors.GroupControl.Text">GroupControl.Text</see>; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.AppearanceCaption">
      <summary>
        <para>Gets the appearance settings used to paint the group’s caption and border.</para>
      </summary>
      <value>The group control’s caption and border appearance settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.ButtonInterval">
      <summary>
        <para>Gets or sets the distance, in pixels, between <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see>.</para>
      </summary>
      <value>An integer value that specifies the distance, in pixels, between <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImage">
      <summary>
        <para>Gets or sets the image to display within the group’s caption area.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object that specifies the group’s caption image.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImageLocation">
      <summary>
        <para>Gets or sets the relative position of an image within the group caption.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.GroupElementLocation"/> value that specifies the image’s position.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImageOptions">
      <summary>
        <para>Provides access to properties that affect this <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s caption image.</para>
      </summary>
      <value>A DevExpress.XtraEditors.GroupCaptionImageOptions object that stores properties that affect this <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s caption image.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImagePadding">
      <summary>
        <para>Gets or sets the outer indents for the image within the group caption, in pixels.</para>
      </summary>
      <value>A System.Windows.Forms.Padding object that specifies padding information for the image.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImageUri">
      <summary>
        <para>Gets or sets the uniform resource identifier (URI) that specifies the image assigned for this <see cref="T:DevExpress.XtraEditors.GroupControl"/>.</para>
      </summary>
      <value>A DevExpress.Utils.DxImageUri object that is the uniform resource identifier (URI) for this <see cref="T:DevExpress.XtraEditors.GroupControl"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CaptionLocation">
      <summary>
        <para>Gets or sets the location of the group control’s caption.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Locations"/> enumeration member which specifies the group caption’s location.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.GroupControl.CustomButtonChecked">
      <summary>
        <para>Occurs whenever a check button from the <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see> collection is checked.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.GroupControl.CustomButtonClick">
      <summary>
        <para>Occurs whenever a push button from the <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see> collection is clicked.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.GroupControl.CustomButtonUnchecked">
      <summary>
        <para>Occurs whenever a check button from the <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see> collection is unchecked.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption">
      <summary>
        <para>Allows you to custom paint the caption region.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.GroupControl.CustomDrawHeaderButton">
      <summary>
        <para>Allows you to custom paint header buttons (<see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see>).</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">
      <summary>
        <para>Specifies a collection of custom header buttons.</para>
      </summary>
      <value>A <see cref="T:System.Collections.CollectionBase"/> descendant that stores custom header buttons for this <see cref="T:DevExpress.XtraEditors.GroupControl"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtonsLocation">
      <summary>
        <para>Gets or sets the position of <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.GroupElementLocation"/> enumerator value that specifies the position of <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">GroupControl.CustomHeaderButtons</see> within this <see cref="T:DevExpress.XtraEditors.GroupControl"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.DisplayRectangle">
      <summary>
        <para>Gets the bounds of the control’s client region.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the control’s client region.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.GetObjectInfo(System.Drawing.Point)">
      <summary>
        <para>Retrieves detailed information about a tool-tip located at the specific position.</para>
      </summary>
      <param name="point">A Point structure to check whether it belongs to a tool-tip. Coordinates are referenced from the <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s top left corner.</param>
      <returns>A ToolTipControlInfo object that stores the tool-tip’s information.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.GetTextBottomLine">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.GetTextLeftLine">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.GetTextRightLine">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.GetTextTopLine">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.GroupStyle">
      <summary>
        <para>Gets or sets the style of this <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s borders and header.</para>
      </summary>
      <value>A DevExpress.Utils.GroupStyle object enumeration value that specifies the style of this <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s borders and header.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.HtmlImages">
      <summary>
        <para>Gets or sets a collection of images that can be inserted into the control’s caption (<see cref="P:DevExpress.XtraEditors.GroupControl.Text">GroupControl.Text</see>) using the image tag.</para>
      </summary>
      <value>An image collection (DevExpress.Utils.ImageCollection or DevExpress.Utils.SvgImageCollection).</value>
    </member>
    <member name="E:DevExpress.XtraEditors.GroupControl.HyperlinkClick">
      <summary>
        <para>Occurs each time a user clicks a hyperlink within the control’s caption.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.Images">
      <summary>
        <para>Gets or sets a collection that stores <see cref="T:DevExpress.XtraEditors.GroupControl"/> caption images.</para>
      </summary>
      <value>An Object that stores <see cref="T:DevExpress.XtraEditors.GroupControl"/> caption images.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.GroupControl.LayoutChanged">
      <summary>
        <para>Invalidates the entire surface of the control and causes the control to be redrawn.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.ShowCaption">
      <summary>
        <para>Gets or sets whether the group’s caption is displayed.</para>
      </summary>
      <value>true to display the group’s caption; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.Text">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.XtraEditors.GroupControl"/>‘s text.</para>
      </summary>
      <value>A string that specifies the control’s text.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.GroupControl.ToolTipController">
      <summary>
        <para>Gets or sets the tooltip controller component that controls the appearance, position and content of tooltips displayed by custom header buttons.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which controls the appearance and behavior of tooltips displayed by custom header buttons.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.HScrollBar">
      <summary>
        <para>The horizontal scrollbar.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.HScrollBar.#ctor">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.XtraEditors.HScrollBar"/> object.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.HScrollBarBase">
      <summary>
        <para>Serves as the base for the <see cref="T:DevExpress.XtraEditors.HScrollBar"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.HScrollBarBase.ScrollBarType">
      <summary>
        <para>Gets the value indicating whether the scroll bar is horizontal or vertical.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying the scroll bar’s orientation.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.ObjectCustomDrawEventArgs">
      <summary>
        <para>Supplies data for events that allow you to draw visual elements manually.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.#ctor(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.Drawing.ObjectPainter,DevExpress.Utils.Drawing.ObjectInfoArgs)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.ObjectCustomDrawEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="cache">An object that provides access to the drawing surface and a cache of pens, fonts, and brushes.</param>
      <param name="painter">An object that performs paint operations.</param>
      <param name="info">An object that contains information about the visual element being drawn.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Cache">
      <summary>
        <para>Provides access to the drawing surface and a cache of pens, fonts, and brushes.</para>
      </summary>
      <value>An object that provides access to the drawing surface and a cache of pens, fonts, and brushes.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.DrawHtml(DevExpress.Utils.Html.HtmlTemplate,DevExpress.Utils.Html.DxHtmlPainterContext,System.Action{DevExpress.Utils.Html.DxHtmlPainterArgs})">
      <summary>
        <para>Paints the required <see href="https://docs.devexpress.com/WindowsForms/403397/common-features/html-css-based-desktop-ui">HTML template</see> inside an element that raised this event. The context parameter allows you to assign an object that transfers mouse events to template elements.</para>
      </summary>
      <param name="template">A template to draw.</param>
      <param name="context">The object that transfers mouse events from a control to a template instance. This allows you to switch visual states (regular, hovered, pressed, and others) of template elements.</param>
      <param name="setupArgs">Sets up required properties of the DxHtmlPainterArgs object.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.DrawHtml(DevExpress.Utils.Html.HtmlTemplate,System.Action{DevExpress.Utils.Html.DxHtmlPainterArgs})">
      <summary>
        <para>Paints the required <see href="https://docs.devexpress.com/WindowsForms/403397/common-features/html-css-based-desktop-ui">HTML template</see> inside an element that raised this event.</para>
      </summary>
      <param name="template">A template to draw.</param>
      <param name="setupArgs">Sets up required properties of the DxHtmlPainterArgs object.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Graphics">
      <summary>
        <para>Provides access to the drawing surface.</para>
      </summary>
      <value>An object that provides access to the drawing surface.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Handled">
      <summary>
        <para>Gets or sets whether the event is handled and prevents the default draw operation from being performed.</para>
      </summary>
      <value>true, to prevent the default draw operation from being performed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Info">
      <summary>
        <para>Provides access to the object that contains information about the visual element being drawn.</para>
      </summary>
      <value>An object that contains information about the visual element being drawn.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Painter">
      <summary>
        <para>Provides access to the object that performs paint operations.</para>
      </summary>
      <value>An object that performs paint operations.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.PanelControl">
      <summary>
        <para>The panel with or without a border.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.PanelControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.PanelControl"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.Appearance">
      <summary>
        <para>Gets the appearance settings used to paint the panel.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the panel’s appearance settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.AutoScroll">
      <summary>
        <para>Not supported.</para>
      </summary>
      <value>A Boolean value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.AutoScrollMargin">
      <summary>
        <para>Not supported.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> object that represents the height and width of the auto-scroll margin, in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.AutoScrollMinSize">
      <summary>
        <para>Not supported.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> object that represents the minimum height and width of the control’s scrollbars, in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.BackColor">
      <summary>
        <para>Gets or sets the panel’s background color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the panel’s background color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.BackgroundImage">
      <summary>
        <para>Gets or sets the control’s background image. This member is not supported by the <see cref="T:DevExpress.XtraEditors.PanelControl"/> class. Use the Appearance.Image property instead.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.BackgroundImageLayout">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.PanelControl"/> class.</para>
      </summary>
      <value>An <see cref="T:System.Windows.Forms.ImageLayout"/> value that specifies the position of an image on the control.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.PanelControl.BeginInit">
      <summary>
        <para>Starts the panel’s initialization. Initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.BorderStyle">
      <summary>
        <para>Gets or sets the panel’s border style.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration value that specifies the panel’s border style.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.PanelControl.CalcBoundsByClient(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
        <para>Returns the panel’s bounding rectangle, calculated from the bounds of its client region.</para>
      </summary>
      <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> object.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the panel’s client region.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the panel’s bounding rectangle, calculated from the bounds of its client region.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.ContentImage">
      <summary>
        <para>Gets or sets the group’s background image that is displayed “as is”, and can be aligned to any panel’s edge.</para>
      </summary>
      <value>An <see cref="T:System.Drawing.Image"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.ContentImageAlignement">
      <summary>
        <para>Gets or sets the content image’s alignment within the panel.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.ContentAlignment"/> value that specifies the content image’s alignment.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.ContentImageAlignment">
      <summary>
        <para>Gets or sets the content image’s alignment within the panel.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.ContentAlignment"/> value that specifies the content image’s alignment.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.DisplayRectangle">
      <summary>
        <para>Gets the bounds of the panel’s client region.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the panel’s client region.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.PanelControl.EndInit">
      <summary>
        <para>Ends the <see cref="T:DevExpress.XtraEditors.PanelControl"/>‘s initialization.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.Font">
      <summary>
        <para>Gets or sets the panel’s font.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object which specifies the panel’s font.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.ForeColor">
      <summary>
        <para>Gets or sets the panel’s foreground color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the panel’s foreground color.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.PanelControl.ResetBackColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraEditors.PanelControl.BackColor">PanelControl.BackColor</see> property back to its default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.PanelControl.ResetForeColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraEditors.PanelControl.ForeColor">PanelControl.ForeColor</see> property back to its default value.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.Text">
      <summary>
        <para>Gets or sets the text associated with the panel control.</para>
      </summary>
      <value>A string value specifying the text associated with the panel.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.UseCompatibleDrawingMode">
      <summary>
        <para>Gets or sets whether the PanelControl should use the non-default painting mode.</para>
      </summary>
      <value>true if the PanelControl control uses the non-default painting mode; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.PanelControl.UseDisabledStatePainter">
      <summary>
        <para>Gets or sets whether to stress the control’s disabled state with a semi-transparent gray layer that overlaps the control.</para>
      </summary>
      <value>true, to paint a semi-transparent gray layer above the control in the disabled state; otherwise, false</value>
    </member>
    <member name="T:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs">
      <summary>
        <para>Contains data for the <see cref="E:DevExpress.XtraEditors.SvgImageBox.QueryUniqueItemId">SvgImageBox.QueryUniqueItemId</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="id">An element’s Id. This value is assigned to the <see cref="P:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.Id">QueryUniqueItemIdEventArgs.Id</see> property.</param>
      <param name="originId">The Id of the use element. This value is assigned to the <see cref="P:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.UseElementId">QueryUniqueItemIdEventArgs.UseElementId</see> property.</param>
      <param name="itemIds">A collection of existing item Ids. This value is assigned to the <see cref="P:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.ItemIds">QueryUniqueItemIdEventArgs.ItemId</see> property.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.Id">
      <summary>
        <para>Gets or sets the Id of the currently processed element.</para>
      </summary>
      <value>The item’s Id.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.ItemIds">
      <summary>
        <para>Gets the current collection of item Ids.</para>
      </summary>
      <value>The current collection of item Ids.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.QueryUniqueItemIdEventArgs.UseElementId">
      <summary>
        <para>Gets the use element’s Id.</para>
      </summary>
      <value>The use element’s Id.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.ScrollBarBase">
      <summary>
        <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.HScrollBarBase"/>, <see cref="T:DevExpress.XtraEditors.HScrollBar"/>, <see cref="T:DevExpress.XtraEditors.VScrollBarBase"/>, and <see cref="T:DevExpress.XtraEditors.VScrollBar"/> classes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.#ctor">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.ActualVisible">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ApplyUIMode(DevExpress.XtraEditors.ScrollBarBase,DevExpress.XtraEditors.ScrollUIMode)">
      <summary>
        <para>Applies the specified UI mode to the specified scroll bar.</para>
      </summary>
      <param name="scroll">A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control to which the specified UI mode should be applied.</param>
      <param name="controlMode">A <see cref="T:DevExpress.XtraEditors.ScrollUIMode"/> enumeration value specifying the UI mode to be applied.</param>
      <returns>A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control whose UI mode has been set.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ApplyUIMode(DevExpress.XtraEditors.ScrollBarBase)">
      <summary>
        <para>Applies the default scroll mode to the specified scroll bar.</para>
      </summary>
      <param name="scroll">A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control to which the default UI mode should be applied.</param>
      <returns>A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control whose UI mode has been set.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.AutoSize">
      <summary>
        <para>Gets or sets a value specifying whether the scroll bar is autosized.</para>
      </summary>
      <value>true if auto size is applied; otherwise false.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate">
      <summary>
        <para>Prevents the control from being updated until the <see cref="M:DevExpress.XtraEditors.ScrollBarBase.EndUpdate">ScrollBarBase.EndUpdate</see> or <see cref="M:DevExpress.XtraEditors.ScrollBarBase.CancelUpdate">ScrollBarBase.CancelUpdate</see> method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.CancelUpdate">
      <summary>
        <para>Unlocks the control after a <see cref="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate">ScrollBarBase.BeginUpdate</see> method call without causing immediate repainting.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.ScrollBarBase.CustomDraw">
      <summary>
        <para>Occurs before the scroll bar is shown on-screen and allows you to manually re-paint it.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.DrawMode">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.EndUpdate">
      <summary>
        <para>Unlocks the control after a <see cref="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate">ScrollBarBase.BeginUpdate</see> method call and causes its immediate repainting.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetAccessible">
      <summary>
        <para>Returns an object which implements the accessibility information.</para>
      </summary>
      <returns>A BaseAccessibility object.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetDefaultHorizontalScrollBarHeight">
      <summary>
        <para>Returns the default height, in pixels, of horizontal scroll bars displayed in the current scroll UI mode.</para>
      </summary>
      <returns>A <see cref="T:System.Int32"/> value that indicates the default height, in pixels, of a horizontal scroll bar.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetDefaultVerticalScrollBarWidth">
      <summary>
        <para>Returns the default width, in pixels, of vertical scroll bars displayed in the current scroll UI mode.</para>
      </summary>
      <returns>A <see cref="T:System.Int32"/> value that indicates the default width, in pixels, of a vertical scroll bar.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetEnabled">
      <summary>
        <para>Returns the value of the control’s Enabled property.</para>
      </summary>
      <returns>The value of the Enabled property.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHeight">
      <summary>
        <para>Returns the value of the control’s Height property.</para>
      </summary>
      <returns>The value of the Height property.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHorizontalScrollBarHeight(DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="scaleDPI" />
      <returns />
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHorizontalScrollBarHeight(DevExpress.XtraEditors.ScrollUIMode,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="controlMode" />
      <param name="scaleDPI" />
      <returns />
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetUIMode(DevExpress.XtraEditors.ScrollBarBase)">
      <summary>
        <para>Returns the UI mode in which the specified scroll bar is displayed.</para>
      </summary>
      <param name="scroll">A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> object whose UI mode should be returned.</param>
      <returns>The scroll bar’s UI mode.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetUIMode(DevExpress.XtraEditors.ScrollUIMode)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetVerticalScrollBarWidth(DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="scaleDPI" />
      <returns />
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetVerticalScrollBarWidth(DevExpress.XtraEditors.ScrollUIMode,DevExpress.Utils.DPI.ScaleHelper)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="controlMode" />
      <param name="scaleDPI" />
      <returns />
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetWidth">
      <summary>
        <para>Returns the value of the control’s Width property.</para>
      </summary>
      <returns>The value of the Width property.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.IsOverlapScrollBar">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.LargeChange">
      <summary>
        <para>Gets or sets the increment applied to the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value">ScrollBarBase.Value</see> property when the scroll box is moved by a ‘page’.</para>
      </summary>
      <value>An integer value representing the increment applied when the scroll box is moved by a ‘page’.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.LookAndFeel">
      <summary>
        <para>Gets a value providing access to settings controlling the control’s look and feel.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the control’s look and feel.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.Maximum">
      <summary>
        <para>Gets or sets the upper limit of values of the scrollable range.</para>
      </summary>
      <value>An integer value representing the value’s upper limit.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.Minimum">
      <summary>
        <para>Gets or sets the lower limit of the scrollable range.</para>
      </summary>
      <value>An integer value representing a lower limit.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.OnAction(DevExpress.XtraEditors.ScrollNotifyAction)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="action">A ScrollNotifyAction enumeration value.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.Opacity">
      <summary>
        <para>Gets or sets the opacity level of the control.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the opacity level of the control. The default is 1.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.ScrollBarBase.PositionRestoreHelper">
      <summary>
        <para>This class supports internal infrastructure and is not intended for use in code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.ScrollBarBase.Scroll">
      <summary>
        <para>Fires when the scroll thumb has been moved either by a mouse or keyboard action.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSize">
      <summary>
        <para>Gets or sets a value specifying whether the scroll bar is automatically sized.</para>
      </summary>
      <value>true if the auto sizing feature is enabled; otherwise false.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSizeChanged">
      <summary>
        <para>Fires after the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSize">ScrollBarBase.ScrollBarAutoSize</see> property’s value has been changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarType">
      <summary>
        <para>Gets the value indicating whether the scroll bar is horizontal or vertical.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying the scroll bar type.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.SecondScrollInterval">
      <summary>
        <para>Gets or sets the time interval, in milliseconds, between scroll box steps while a scroll bar button or scroll bar track is clicked and held.</para>
      </summary>
      <value>An integer value that specifies the time interval, in milliseconds, between scroll box steps while the scroll bar button or scroll bar track is clicked and held.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.ScrollBarBase.SetVisibility(System.Boolean)">
      <summary>
        <para>Sets the visibility of the current <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control. This method is not in effect if the scroll bar is displayed in the touch UI mode.</para>
      </summary>
      <param name="visible">true to display the control; false to hide the control.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.SmallChange">
      <summary>
        <para>Gets or sets the value by which the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value">ScrollBarBase.Value</see> property changes when the user presses one of the arrow keys or clicks one of the scroll-bar buttons.</para>
      </summary>
      <value>An integer value by which the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value">ScrollBarBase.Value</see> property changes.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.State">
      <summary>
        <para>Gets whether the scroll bar is in normal state, or the increase/decrease/thumb button/area is pressed/hot-tracked.</para>
      </summary>
      <value>A DevExpress.XtraEditors.ViewInfo.ScrollBarState enumeration value that specifies the scroll bar state.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.SupportAnnotations">
      <summary>
        <para>Returns whether this scroll bar can display <see href="https://docs.devexpress.com/WindowsForms/120556/controls-and-libraries/data-grid/scrolling/scrollbar-annotations">Scrollbar Annotations</see>.</para>
      </summary>
      <value>true if this scroll bar can display annotations; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.TabStop">
      <summary>
        <para>Gets or sets a value indicating whether a user can focus the scroll bar control using the TAB key.</para>
      </summary>
      <value>true if a user can  focus the scroll bar using the TAB key; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.UIMode">
      <summary>
        <para>Gets or sets whether scroll bars are optimized for desktop or touch applications. This is a static (Shared in VB.NET) property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.ScrollUIMode"/> enumeration value that specifies how scroll bars are displayed.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.ScrollBarBase.Value">
      <summary>
        <para>Gets or sets a value specifying the scroll box’s current position.</para>
      </summary>
      <value>An integer value representing the scroll box’s current position.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.ScrollBarBase.ValueChanged">
      <summary>
        <para>Fires immediately after the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value">ScrollBarBase.Value</see> property has been changed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.ScrollBarType">
      <summary>
        <para>Contains values specifying the type of ScrollBar control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollBarType.Horizontal">
      <summary>
        <para>Corresponds to the horizontal orientation of the scroll bar.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollBarType.Vertical">
      <summary>
        <para>Corresponds to the vertical orientation of the scroll bar.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.ScrollOrientation">
      <summary>
        <para>Lists values that specify the scrollbar orientation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollOrientation.HorizontalScroll">
      <summary>
        <para>The horizontal scroll bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollOrientation.VerticalScroll">
      <summary>
        <para>The vertical scroll bar.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.ScrollUIMode">
      <summary>
        <para>Enumerates modes that specify the appearance and behavior of scroll bars.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollUIMode.Default">
      <summary>
        <para>The mode is not specified explicitly. Enables <see cref="F:DevExpress.XtraEditors.ScrollUIMode.Desktop"/> mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollUIMode.Desktop">
      <summary>
        <para>Scroll bars optimized for desktop applications. Auto-hide and auto-expand functionality are not supported.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollUIMode.Fluent">
      <summary>
        <para>Scroll bars optimized for <see href="https://docs.devexpress.com/WindowsForms/120214/controls-and-libraries/forms-and-user-controls/fluent-design-form">Fluent Design Forms</see>. They are expanded when a user flicks scrollable content (or the mouse cursor moves over the control) and collapsed to a thin stripe if the control is not scrolled (or the mouse cursor does not move) for some time. The arrow buttons are never displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ScrollUIMode.Touch">
      <summary>
        <para>Scroll bars optimized for touch applications. They are shown when a user flicks the scrollable content (or the mouse pointer moves over the control), and hidden when the control is not scrolled (or the mouse pointer does not move) for some time. The arrow buttons are never displayed. This style is outdated, use the Fluent style instead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.SeparatorControl">
      <summary>
        <para>Allows you to delimit controls within the layout.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SeparatorControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.AutoSizeMode">
      <summary>
        <para>Gets or sets whether the control client area size is automatically calculated based on the separating line thickness and paddings.</para>
      </summary>
      <value>true if the control client area size is automatically calculated based on the separating line thickness and paddings; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.Font">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.ForeColor">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.LayoutChanged">
      <summary>
        <para>Invalidates the entire surface of the control and causes the control to be redrawn.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.LineAlignment">
      <summary>
        <para>Gets or sets the alignment of the separating line within the control client area.</para>
      </summary>
      <value>A DevExpress.XtraEditors.Alignment enumeration value that specifies the alignment of the separating line within the control client area.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.LineColor">
      <summary>
        <para>Gets or sets the color of the separating line.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the color of the separating line.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.LineOrientation">
      <summary>
        <para>Gets or sets the orientation of the separating line.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.Orientation"/> enumeration value that specifies the orientation of the separating line.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.LineStyle">
      <summary>
        <para>Gets or sets the dash style of the separating line. This property is in effect when the control is painted using any paint theme, except skins.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Drawing2D.DashStyle"/> enumeration value that specifies the dash style of the separating line.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.LineThickness">
      <summary>
        <para>Gets or sets the width, in pixels, of the separating line. This property is in effect when the control is painted using any paint theme, except skins.</para>
      </summary>
      <value>An integer value that specifies the width, in pixels, of the separating line.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.LookAndFeel">
      <summary>
        <para>Provides access to settings controlling the look and feel of the control.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the look and feel of the control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.Padding">
      <summary>
        <para>Gets or sets the amount of space around the separating line.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.Padding"/> structure that specifies the amount of space around the separating line.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.ResetLineColor">
      <summary>
        <para>Sets the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineColor">SeparatorControl.LineColor</see> property to Color.Empty.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.ResetLineThickness">
      <summary>
        <para>Sets the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineThickness">SeparatorControl.LineThickness</see> property to the default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.ResetPadding">
      <summary>
        <para>Sets the <see cref="P:DevExpress.XtraEditors.SeparatorControl.Padding">SeparatorControl.Padding</see> property to the default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.ShouldSerializeLineColor">
      <summary>
        <para>Returns whether the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineColor">SeparatorControl.LineColor</see> property should be serialized.</para>
      </summary>
      <returns>true if the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineColor">SeparatorControl.LineColor</see> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.ShouldSerializeLineThickness">
      <summary>
        <para>Returns whether the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineThickness">SeparatorControl.LineThickness</see> property should be serialized.</para>
      </summary>
      <returns>true if the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineThickness">SeparatorControl.LineThickness</see> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SeparatorControl.ShouldSerializePadding">
      <summary>
        <para>Returns whether the <see cref="P:DevExpress.XtraEditors.SeparatorControl.Padding">SeparatorControl.Padding</see> property should be serialized.</para>
      </summary>
      <returns>true if the <see cref="P:DevExpress.XtraEditors.SeparatorControl.Padding">SeparatorControl.Padding</see> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.SeparatorControl.Text">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.SidePanel">
      <summary>
        <para>A panel with one-pixel borders that supports panel snapping and the overlay resize feature.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SidePanel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SidePanel"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.AllowResize">
      <summary>
        <para>Gets or sets whether or not end-users can resize this <see cref="T:DevExpress.XtraEditors.SidePanel"/> by dragging its border.</para>
      </summary>
      <value>true if end-users can resize this <see cref="T:DevExpress.XtraEditors.SidePanel"/> by dragging its border; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.AllowSnap">
      <summary>
        <para>Gets or sets whether or not borders of this <see cref="T:DevExpress.XtraEditors.SidePanel"/> are allowed to snap to borders of other panels at runtime.</para>
      </summary>
      <value>true if borders of this panel can snap to other panels’ borders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.Appearance">
      <summary>
        <para>Provides access to this panel’s appearance settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.AppearanceObject"/> object that stores appearance settings applied to this <see cref="T:DevExpress.XtraEditors.SidePanel"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.BackColor">
      <summary>
        <para>Gets or sets this panel’s background color.</para>
      </summary>
      <value>A Color that is this panel’s background color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.BorderThickness">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.XtraEditors.SidePanel"/> border thickness.</para>
      </summary>
      <value>An Int32 value that specifies the <see cref="T:DevExpress.XtraEditors.SidePanel"/> border thickness.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.DisplayRectangle">
      <summary>
        <para>Returns the rectangle structure that specifies the position and size of this <see cref="T:DevExpress.XtraEditors.SidePanel"/>.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> structure that stores this <see cref="T:DevExpress.XtraEditors.SidePanel"/>‘s position and size.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.Dock">
      <summary>
        <para>Gets or sets the parent container side to which this <see cref="T:DevExpress.XtraEditors.SidePanel"/> is docked.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.DockStyle"/> enumeration value that specifies the parent container side to which this <see cref="T:DevExpress.XtraEditors.SidePanel"/> is docked.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.ForeColor">
      <summary>
        <para>Gets or sets the fore color of this <see cref="T:DevExpress.XtraEditors.SidePanel"/> and its child controls.</para>
      </summary>
      <value>A Color that is the fore color of this <see cref="T:DevExpress.XtraEditors.SidePanel"/> and its child controls.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SidePanel.GetBorderThickness">
      <summary>
        <para>Gets or sets the actual <see cref="T:DevExpress.XtraEditors.SidePanel"/> border thickness scaled according to the current DPI settings.</para>
      </summary>
      <returns>An Int32 value that specifies the <see cref="T:DevExpress.XtraEditors.SidePanel"/> border thickness.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.LookAndFeel">
      <summary>
        <para>Provides access to <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">Look and Feel</see> settings of this <see cref="T:DevExpress.XtraEditors.SidePanel"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel"/> object that stores look&amp;feel settings of this <see cref="T:DevExpress.XtraEditors.SidePanel"/>.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SidePanel.OverlayResizeEnter">
      <summary>
        <para>Occurs when a mouse pointer enters the overlay resize zone of this panel.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.OverlayResizeZoneThickness">
      <summary>
        <para>Gets or sets the width of a <see cref="T:DevExpress.XtraEditors.SidePanel"/>‘s overlay resize zone.</para>
      </summary>
      <value>An Int32 value that specifies the width of a <see cref="T:DevExpress.XtraEditors.SidePanel"/>‘s overlay resize zone.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SidePanel.PaintEx">
      <summary>
        <para>A <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX</see>-compatible event that replaces the standard Control.Paint event. Occurs when the panel is redrawn.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SidePanel.ResetBackColor">
      <summary>
        <para>Resets this panel’s <see cref="P:DevExpress.XtraEditors.SidePanel.BackColor">SidePanel.BackColor</see> property to its default value.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SidePanel.SnapThreshold">
      <summary>
        <para>Gets or sets the distance from the border of this <see cref="T:DevExpress.XtraEditors.SidePanel"/> to the border of another panel, starting from which the panel snapping feature activates.</para>
      </summary>
      <value>An Int32 value that is the distance between panel borders, starting from which the panel snapping feature activates.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SimpleControl">
      <summary>
        <para>The base class for controls that support the DevExpress <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">look and feel mechanism</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SimpleControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SimpleControl"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SimpleControl.BorderStyle">
      <summary>
        <para>Gets or sets the style used to draw the control’s border.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration member specifying the border style of the control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SimpleControl.LookAndFeel">
      <summary>
        <para>Gets an object containing the control’s look and feel settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object containing the control’s look and feel settings.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SplitContainerControl">
      <summary>
        <para>A control that consists of two panels separated by a splitter, which can be dragged by an end user to resize the panels.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowBorderColorBlending">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowGlyphSkinning">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowHtmlText">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowSuspendRedraw">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A Boolean value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowTouchScroll">
      <summary>
        <para>Gets or sets if end-users can scroll the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> by dragging its content.</para>
      </summary>
      <value>true if end-users can scroll the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> by dragging its content; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AppearanceCaption">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AutoSize">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.AutoSizeMode">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.BeginInit">
      <summary>
        <para>Starts the split container’s initialization. Initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.BeginSplitterMoving">
      <summary>
        <para>Occurs after an end-user clicks the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s splitter.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.ButtonInterval">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.CaptionImageOptions">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.CaptionLocation">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Collapsed">
      <summary>
        <para>Gets or sets a value indicating whether the panel referred to by the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel">SplitContainerControl.CollapsePanel</see> property is collapsed.</para>
      </summary>
      <value>true if the panel is collapsed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel">
      <summary>
        <para>Gets or sets the panel that is automatically collapsed when clicking on a splitter.</para>
      </summary>
      <value>A SplitCollapsePanel enumeration value that specifies the panel automatically collapsed when clicking on a splitter.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Controls">
      <summary>
        <para>Gets the collection of controls contained within the split container control.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.Control.ControlCollection"/> object which represents the collection of controls contained within the split container control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Cursor">
      <summary>
        <para>Gets or sets the cursor that is displayed when the mouse pointer is over the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>.</para>
      </summary>
      <value>A  System.Windows.Forms.Cursor object that represents the cursor to display when the mouse pointer is over the control.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.CustomButtonChecked">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.CustomButtonClick">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.CustomButtonUnchecked">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.CustomDrawCaption">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.CustomDrawHeaderButton">
      <summary>
        <para>Not supported for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.CustomHeaderButtons">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.CustomHeaderButtonsLocation">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.EndInit">
      <summary>
        <para>Ends the split container’s initialization.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.FixedPanel">
      <summary>
        <para>Gets or sets a panel that remains static when the split container size changes.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.SplitFixedPanel"/> enumeration value which specifies the fixed panel.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.GroupStyle">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Horizontal">
      <summary>
        <para>Gets or sets whether the panels are arranged horizontally or vertically.</para>
      </summary>
      <value>true if the panels are arranged horizontally; false if the panels are vertically.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.HtmlImages">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Images">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.IsPanelCollapsed">
      <summary>
        <para>Gets whether the panel specified by the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel">SplitContainerControl.CollapsePanel</see> property is collapsed.</para>
      </summary>
      <value>true if this panel is collapsed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.IsSplitterFixed">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s splitter is locked at the current position.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s splitter is locked at the current position; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Panel1">
      <summary>
        <para>Gets the left (or top) panel.</para>
      </summary>
      <value>A DevExpress.XtraEditors.SplitGroupPanel object which represents the left (or top) panel.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Panel2">
      <summary>
        <para>Gets the right (or bottom) panel.</para>
      </summary>
      <value>A DevExpress.XtraEditors.SplitGroupPanel object which represents the right (or bottom) panel.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.PanelVisibility">
      <summary>
        <para>Gets or sets the visibility of the panels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.SplitPanelVisibility"/> enumeration value which specifies the visibility of panels.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.RestoreLayoutFromRegistry(System.String)">
      <summary>
        <para>Loads the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout from the system registry.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="path">A String value which specifies the system registry path. If the specified path doesn’t exist, this method does nothing.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.RestoreLayoutFromStream(System.IO.Stream)">
      <summary>
        <para>Loads the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout from the specific stream.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="stream">The Stream from which the  the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout should be restored.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.RestoreLayoutFromXml(System.String)">
      <summary>
        <para>Loads the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout from the specific XML file.</para>
        <para />
        <para><strong>Security note: </strong>Deserializing layout settings from untrusted resources may create security issues. Review the following help topic for additional information: <see href="https://docs.devexpress.com/GeneralInformation/404441/security/safe-deserialization">Safe Deserialization</see>.</para>
      </summary>
      <param name="xmlFile">A String value that is the path to an XML file where the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout should be restored from.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.SaveLayoutToRegistry(System.String)">
      <summary>
        <para>Saves the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout to the system registry.</para>
      </summary>
      <param name="path">A String value that is the system registry path to which  the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout should be saved.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.SaveLayoutToStream(System.IO.Stream)">
      <summary>
        <para>Saves the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout to a stream.</para>
      </summary>
      <param name="stream">A stream where the layout should be stored.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.SaveLayoutToXml(System.String)">
      <summary>
        <para>Saves the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout to the specific XML file.</para>
      </summary>
      <param name="xmlFile">A String value that is the path to an XML file where the current <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/>‘s layout should be saved.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.SerializableRatio">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.SetPanelBorderStyle(DevExpress.XtraEditors.Controls.BorderStyles)">
      <summary>
        <para>Specifies the border style of the panels.</para>
      </summary>
      <param name="border">A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration value specifying the border style of the panels.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.SetPanelCollapsed(System.Boolean)">
      <summary>
        <para>Collapses or restores the panel referred to by the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel">SplitContainerControl.CollapsePanel</see> property.</para>
      </summary>
      <param name="collapsed">true to collapse the panel; false to restore the panel.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.ShowCaption">
      <summary>
        <para>Gets or sets whether the split container’s caption is displayed.</para>
      </summary>
      <value>true to display the split container’s caption; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.ShowSplitGlyph">
      <summary>
        <para>Gets or sets whether to display the split glyph.</para>
      </summary>
      <value>A value that specifies the spit glyph’s visibility. The DefaultBoolean.Default value, if the paint theme (skin) controls the split glyph visibility.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitGroupPanelCollapsed">
      <summary>
        <para>Allows you to respond to collapsing/restoring a panel.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitGroupPanelCollapsing">
      <summary>
        <para>Allows you to prevent a panel from being collapsed/restored.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.SplitterBounds">
      <summary>
        <para>Gets the splitter’s size and location.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the size and location of the splitter.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterMoved">
      <summary>
        <para>Occurs after the splitter’s position has been changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterMoving">
      <summary>
        <para>Occurs when the splitter’s position is being changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.SplitterPosition">
      <summary>
        <para>Gets or sets the splitter’s location.</para>
      </summary>
      <value>An integer value specifying the splitter’s current location in pixels, from the side of the fixed panel.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterPositionChanged">
      <summary>
        <para>Occurs after the splitter’s position has been changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitContainerControl.SwapPanels">
      <summary>
        <para>Swaps the contents of the first and second panels.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.Text">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitContainerControl.ToolTipController">
      <summary>
        <para>This property is not relevant for this class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.SplitFixedPanel">
      <summary>
        <para>Lists values that specify which panel within the split container is fixed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SplitFixedPanel.None">
      <summary>
        <para>The panels’ widths (or heights) are proportionally changed when a split container is being resized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SplitFixedPanel.Panel1">
      <summary>
        <para>The width (height if the panels are displayed one above another) of the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.Panel1">SplitContainerControl.Panel1</see> isn’t changed when the split container is resized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SplitFixedPanel.Panel2">
      <summary>
        <para>The width (height if the panels are displayed one above another) of the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.Panel2">SplitContainerControl.Panel2</see> isn’t changed when the split container is resized.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.SplitPanelVisibility">
      <summary>
        <para>Lists values that specify the visibility of the panels within a split container.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Both">
      <summary>
        <para>Both Panel1 and Panel2 are visible.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Panel1">
      <summary>
        <para>Panel2 is hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Panel2">
      <summary>
        <para>Panel1 is hidden.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.SplitterControl">
      <summary>
        <para>Allows end users to resize controls that are docked to the splitter’s edges.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitterControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SplitterControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitterControl.Appearance">
      <summary>
        <para>Gets the appearance settings used to paint the splitter.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the splitter’s appearance settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitterControl.BackColor">
      <summary>
        <para>Gets or sets the splitter’s background color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the splitter’s background color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitterControl.LookAndFeel">
      <summary>
        <para>Provides access to the settings which control the splitter’s look and feel.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the splitter’s look and feel.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitterControl.OnEndDeserializing(System.String)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitterControl.OnEndSerializing">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitterControl.OnStartDeserializing(DevExpress.Utils.LayoutAllowEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SplitterControl.OnStartSerializing">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SplitterControl.ShowSplitGlyph">
      <summary>
        <para>Gets or sets whether to display the split glyph.</para>
      </summary>
      <value>A value that specifies the spit glyph’s visibility. The DefaultBoolean.Default value, if the paint theme (skin) controls the split glyph visibility.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageBox">
      <summary>
        <para>Allows you to customize and display an SVG image and enables end-user interaction with individual image elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.#ctor">
      <summary>
        <para>Initializes a new instance of the class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.BeginUpdate">
      <summary>
        <para>Locks the object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.ContextButtonClick">
      <summary>
        <para>Fires when a context button is clicked.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ContextButtonOptions">
      <summary>
        <para>Provides access to the settings that control the display of context buttons.</para>
      </summary>
      <value>The object that contain settings to customize the display of context buttons.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ContextButtons">
      <summary>
        <para>Provides access to the collection of context buttons displayed in the <see cref="T:DevExpress.XtraEditors.SvgImageBox"/> control.</para>
      </summary>
      <value>The collection of context buttons displayed in the <see cref="T:DevExpress.XtraEditors.SvgImageBox"/> control.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.CustomContextButtonToolTip">
      <summary>
        <para>Allows you to specify a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">tooltip</see> shown when the mouse pointer hovers over a context button. This event is only raised for <see cref="T:DevExpress.Utils.RatingContextButton"></see> and <see cref="T:DevExpress.Utils.TrackBarContextButton"></see> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.EndUpdate">
      <summary>
        <para>Unlocks the object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.ExportSvgImage(DevExpress.XtraEditors.SvgImageBoxOptionsExport)">
      <summary>
        <para>Returns the current image as an <see cref="T:DevExpress.Utils.Svg.SvgImage"/> object.</para>
      </summary>
      <param name="exportOptions">An optional object that contains export options.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.ExportSvgImage(System.IO.Stream,DevExpress.XtraEditors.SvgImageBoxOptionsExport)">
      <summary>
        <para>Saves the current image to the specified stream in SVG format.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which data is exported.</param>
      <param name="exportOptions">An optional object that contains export options.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.ExportSvgImage(System.String,DevExpress.XtraEditors.SvgImageBoxOptionsExport)">
      <summary>
        <para>Saves the current image to the specified file in SVG format.</para>
      </summary>
      <param name="path">The path to the file to which the image is exported.</param>
      <param name="exportOptions">An optional object that contains export options.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.FindItem(System.Predicate{DevExpress.XtraEditors.SvgImageItem})">
      <summary>
        <para>Returns an item that matches the specified condition.</para>
      </summary>
      <param name="predicate">The search condition.</param>
      <returns>The found item. Null, if no item matches the specified condition.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.FindItemById(System.String)">
      <summary>
        <para>Returns the item with the specified <see cref="P:DevExpress.XtraEditors.SvgImageItem.Id">Id</see>.</para>
      </summary>
      <param name="id">The <see cref="P:DevExpress.XtraEditors.SvgImageItem.Id">Id</see> property value of the target item.</param>
      <returns>The found item. Null, if no item with the specified ID is found.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.FindItemByTag(System.Object)">
      <summary>
        <para>Returns the item with the specified <see cref="P:DevExpress.XtraEditors.SvgImageItem.Tag">Tag</see>.</para>
      </summary>
      <param name="tag">The <see cref="P:DevExpress.XtraEditors.SvgImageItem.Tag">Tag</see> property value of the target item.</param>
      <returns>The found item. Null, if no item with the specified Tag is found.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.FindItems(System.Predicate{DevExpress.XtraEditors.SvgImageItem})">
      <summary>
        <para>Returns a list of items that match the specified condition.</para>
      </summary>
      <param name="predicate">The search condition.</param>
      <returns>The list that contains found items.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.GetItemsAt(System.Drawing.Point)">
      <summary>
        <para>Returns hidden and visible image items displayed at the specified point.</para>
      </summary>
      <param name="point">The target point, in client coordinates.</param>
      <returns>A array of items located at the specified point. An empty array, if no item is positioned at this point.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.GetItemsInside(System.Drawing.Rectangle)">
      <summary>
        <para>Returns hidden and visible items that are entirely or partially positioned within the specified bounds.</para>
      </summary>
      <param name="rectangle">The bounds, in client coordinates.</param>
      <returns>An array of items located within the specified coordinates. An empty array, if no item is positioned at this point.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.GetVisibleItemsAt(System.Drawing.Point)">
      <summary>
        <para>Returns visible image items displayed at the specified point.</para>
      </summary>
      <param name="point">The target point, in client coordinates.</param>
      <returns>A array of visible items located at the specified point. An empty array, if no item is positioned at this point.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.GetVisibleItemsInside(System.Drawing.Rectangle)">
      <summary>
        <para>Returns visible items that are entirely or partially positioned within the specified bounds.</para>
      </summary>
      <param name="rectangle">The bounds, in client coordinates.</param>
      <returns>An array of items located within the specified coordinates. An empty array, if no item is positioned at this point.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.HoveredItem">
      <summary>
        <para>Gets the hovered image item.</para>
      </summary>
      <value>The hovered item.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ImageAlignment">
      <summary>
        <para>Gets or sets how the image is aligned within the control’s bounds.</para>
      </summary>
      <value>A value that specifies how the image is aligned within the control’s bounds.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ItemAppearance">
      <summary>
        <para>Provides access to the default item appearance settings.</para>
      </summary>
      <value>The default item appearance settings.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.ItemClick">
      <summary>
        <para>Occurs when a user clicks an <see cref="T:DevExpress.XtraEditors.SvgImageItem"/> in the <see cref="T:DevExpress.XtraEditors.SvgImageBox"/>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.ItemEnter">
      <summary>
        <para>Fires when the mouse cursor enters the item’s graphical path or bounding rectangle.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ItemHitTestType">
      <summary>
        <para>Gets or sets the item hit-test type.</para>
      </summary>
      <value>The item detection type.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.ItemLeave">
      <summary>
        <para>Fires when the mouse cursor leaves the item’s graphical path or bounding rectangle.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.ItemPress">
      <summary>
        <para>Occurs when a user presses the left mouse button on an <see cref="T:DevExpress.XtraEditors.SvgImageItem"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.LookAndFeel">
      <summary>
        <para>Gets or sets the control’s look-and-feel.</para>
      </summary>
      <value>The control’s look-and-feel settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.OptionsExport">
      <summary>
        <para>Contains settings to customize export output from the SvgImageBox.ExportSvgImage methods.</para>
      </summary>
      <value>An object that contains export options.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.OptionsSelection">
      <summary>
        <para>Contains item selection options.</para>
      </summary>
      <value>The item selection options.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.PaintEx">
      <summary>
        <para>A <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX</see>-compatible event that replaces the standard Control.Paint event.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.PopupMenuShowing">
      <summary>
        <para>Fires when a user right-clicks with the mouse. Allows you to display a context menu for image items.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.PressedItem">
      <summary>
        <para>Gets the currently pressed item.</para>
      </summary>
      <value>The currently pressed item. null if no item is currently pressed.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.QueryHoveredItem">
      <summary>
        <para>Allows you to specify a custom item as “hovered” when you move the mouse cursor over items, regardless of their visibility. For instance, you can specify a group as “hovered” when you hover over the group’s item.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.QueryUniqueItemId">
      <summary>
        <para>Allows you to assign unique Ids to cloned elements that the control creates when the SVG file contains use elements.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.RootItems">
      <summary>
        <para>Provides access to a collection of root (bottommost) SVG items.</para>
      </summary>
      <value>A root item collection.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.Select(DevExpress.XtraEditors.SvgImageItem)">
      <summary>
        <para>Selects the specified item.</para>
      </summary>
      <param name="item">The item to select.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.Selection">
      <summary>
        <para>Provides access to the currently selected items.</para>
      </summary>
      <value>A collection of selected items.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.SelectionChanged">
      <summary>
        <para>A notification event, which is raised after the item selection has been changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageBox.SelectionChanging">
      <summary>
        <para>Fires when the item selection is about to be changed. Allows you to cancel the current operation.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ShowToolTips">
      <summary>
        <para>Gets or sets whether <see cref="T:DevExpress.XtraEditors.SvgImageItem"/> objects owned by this control can show tooltips when users hover over these items.</para>
      </summary>
      <value>Specifies whether items can show super tooltips and regular hints.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.SizeMode">
      <summary>
        <para>Gets or sets whether and how the image is stretched.</para>
      </summary>
      <value>A value that specifies whether the image is stretched, and how.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.SuperTip">
      <summary>
        <para>Gets or sets a super tooltip displayed when a user hovers over an empty space, and over items without explicitly assigned tooltips.</para>
      </summary>
      <value>A super tooltip displayed when a user hovers over an empty space, and over items without explicitly assigned tooltips.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.SvgImage">
      <summary>
        <para>Gets or sets the SVG image.</para>
      </summary>
      <value>The displayed SVG image.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.SvgImageColorizationMode">
      <summary>
        <para>Gets or sets the colorization mode for the <see cref="T:DevExpress.XtraEditors.SvgImageBox"/> object’s SVG image.</para>
      </summary>
      <value>Colorization mode.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ToolTip">
      <summary>
        <para>Gets or sets a regular tooltip displayed when a user hovers over an empty space, and over items without explicitly assigned tooltips.</para>
      </summary>
      <value>A regular tooltip displayed when a user hovers over an empty space, and over items without explicitly assigned tooltips.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ToolTipAnchor">
      <summary>
        <para>Gets or sets whether the tooltip is anchored relative to the mouse pointer or the hovered item.</para>
      </summary>
      <value>A value that specifies whether the tooltip is anchored relative to the mouse pointer or the hovered item. In Default mode, the behavior depends on the <see cref="P:DevExpress.Utils.ToolTipController.ToolTipAnchor">ToolTipController.ToolTipAnchor</see> property.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ToolTipController">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.Utils.ToolTipController"/> that allows items to show tooltips.</para>
      </summary>
      <value>Manages tooltips for SvgImageBox items.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ToolTipIconType">
      <summary>
        <para>Gets or sets a regular tooltip’s icon type.</para>
      </summary>
      <value>A regular tooltip’s icon type.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.ToolTipTitle">
      <summary>
        <para>Gets or sets a regular tooltip’s title.</para>
      </summary>
      <value>A regular tooltip’s title.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBox.Unselect(DevExpress.XtraEditors.SvgImageItem)">
      <summary>
        <para>Deselects the specified item.</para>
      </summary>
      <param name="item">The item to deselect.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBox.UseDirectXPaint">
      <summary>
        <para>Gets or sets whether the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see> is enabled for the current <see cref="T:DevExpress.XtraEditors.SvgImageBox"/>.</para>
      </summary>
      <value>A DefaultBoolean enum value that specifies whether this control employs the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see>.
The DefaultBoolean.Default value is equivalent to DefaultBoolean.True if the static <see cref="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceDirectXPaint">WindowsFormsSettings.ForceDirectXPaint</see> method was called, or to DefaultBoolean.False otherwise.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageBoxOptionsExport">
      <summary>
        <para>Contains settings that customize export output from the SvgImageBox.ExportSvgImage methods.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBoxOptionsExport.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageBoxOptionsExport"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBoxOptionsExport.#ctor(DevExpress.XtraEditors.SvgImageBox)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageBoxOptionsExport"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBoxOptionsExport.Assign(DevExpress.XtraEditors.SvgImageBoxOptionsExport)">
      <summary>
        <para>Copies all settings from the options object passed as the parameter and assigns them to the current object.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraEditors.SvgImageBoxOptionsExport"/> descendant whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBoxOptionsExport.StoreAppearance">
      <summary>
        <para>Gets or sets whether the ExportSvgImage method saves item appearance settings. The property allows you to choose which appearance settings to save.</para>
      </summary>
      <value>A combination of flags that specify which item appearance settings to save.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageBoxOptionsSelection">
      <summary>
        <para>Contains item selection options for the <see cref="T:DevExpress.XtraEditors.SvgImageBox"/> control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBoxOptionsSelection.#ctor(DevExpress.XtraEditors.SvgImageBox)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageBoxOptionsSelection"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageBoxOptionsSelection.Assign(DevExpress.XtraEditors.SvgImageBoxOptionsSelection)">
      <summary>
        <para>Copies settings from the specified object to the current object.</para>
      </summary>
      <param name="options">The object whose settings are copied to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBoxOptionsSelection.SelectionMode">
      <summary>
        <para>Gets or sets item selection mode.</para>
      </summary>
      <value>Item selection mode. The Default value is equivalent to Multiple.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageBoxOptionsSelection.UseCtrlToMultiSelect">
      <summary>
        <para>Gets or sets whether a user needs to press the CTRL key to select image items by clicking them  with the mouse cursor.  This property is in effect in Multiple selection mode.</para>
      </summary>
      <value>True if a user needs to press the CTRL key to select image items by clicking them with the mouse cursor; otherwise, False or Default.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageItem">
      <summary>
        <para>An item within an SVG image.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.#ctor(System.Int32[])">
      <summary>
        <para>Initializes a new instance of the class. For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the class. For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.ActualEnabled">
      <summary>
        <para>Returns whether the item is actually enabled.</para>
      </summary>
      <value>true if the item is actually enabled; otherwise, false</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.ActualVisible">
      <summary>
        <para>Returns whether the item is actually visible.</para>
      </summary>
      <value>true if the item is actually visible; otherwise, false</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Appearance">
      <summary>
        <para>Allows you to customize the item’s appearance.</para>
      </summary>
      <value>The appearance settings applied to the current item.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Bounds">
      <summary>
        <para>Gets the <see cref="T:DevExpress.XtraEditors.SvgImageItem"/>‘s bounds.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.RectangleF"/> structure that stores <see cref="T:DevExpress.XtraEditors.SvgImageItem"/>‘s bounds.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.Clone">
      <summary>
        <para>Creates a copy of the current item.</para>
      </summary>
      <returns>A copy of the current item.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Descendants">
      <summary>
        <para>Returns a linear list of the item’s descendants.</para>
      </summary>
      <value>The linear list of the item’s descendants.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Enabled">
      <summary>
        <para>Gets or sets whether the item is enabled.</para>
      </summary>
      <value>true if the item is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindAncestor(System.Predicate{DevExpress.XtraEditors.SvgImageItem})">
      <summary>
        <para>Returns the item’s ancestor that matches the specified condition.</para>
      </summary>
      <param name="predicate">The search condition.</param>
      <returns>The found item. Null, if no ancestor matches the specified condition.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindAncestorById(System.String)">
      <summary>
        <para>Returns the item’s ancestor with the specified <see cref="P:DevExpress.XtraEditors.SvgImageItem.Id">Id</see>.</para>
      </summary>
      <param name="id">The <see cref="P:DevExpress.XtraEditors.SvgImageItem.Id">Id</see> property value of the target ancestor.</param>
      <returns>The found item. Null, if no item with the specified ID is found.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindAncestorByTag(System.Object)">
      <summary>
        <para>Returns the item’s ancestor with the specified <see cref="P:DevExpress.XtraEditors.SvgImageItem.Tag">Tag</see>.</para>
      </summary>
      <param name="tag">The <see cref="P:DevExpress.XtraEditors.SvgImageItem.Tag">Tag</see> property value of the target ancestor.</param>
      <returns>The found item. Null, if no item with the specified Tag is found.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindAncestors(System.Predicate{DevExpress.XtraEditors.SvgImageItem})">
      <summary>
        <para>Returns a list of the item’s ancestors that match the specified condition.</para>
      </summary>
      <param name="predicate">The search condition.</param>
      <returns>The list that contains found items.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindDescendant(System.Predicate{DevExpress.XtraEditors.SvgImageItem})">
      <summary>
        <para>Returns the item’s descendant that matches the specified condition.</para>
      </summary>
      <param name="predicate">The search condition.</param>
      <returns>The found item. Null, if no descendant matches the specified condition.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindDescendantById(System.String)">
      <summary>
        <para>Returns the item’s descendant with the specified <see cref="P:DevExpress.XtraEditors.SvgImageItem.Id">Id</see>.</para>
      </summary>
      <param name="id">The <see cref="P:DevExpress.XtraEditors.SvgImageItem.Id">Id</see> property value of the target descendant.</param>
      <returns>The found item. Null, if no item with the specified ID is found.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindDescendantByTag(System.Object)">
      <summary>
        <para>Returns the item’s descendant with the specified <see cref="P:DevExpress.XtraEditors.SvgImageItem.Tag">Tag</see>.</para>
      </summary>
      <param name="tag">The <see cref="P:DevExpress.XtraEditors.SvgImageItem.Tag">Tag</see> property value of the target descendant.</param>
      <returns>The found item. Null, if no item with the specified Tag is found.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItem.FindDescendants(System.Predicate{DevExpress.XtraEditors.SvgImageItem})">
      <summary>
        <para>Returns a list of the item’s descendants that match the specified condition.</para>
      </summary>
      <param name="predicate">The search condition.</param>
      <returns>The list that contains found items.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.HasBackground">
      <summary>
        <para>Gets whether the item has a background.</para>
      </summary>
      <value>true if the item has a background; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.HasBorder">
      <summary>
        <para>Gets whether the item has a border.</para>
      </summary>
      <value>true if the item has a border; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Hovered">
      <summary>
        <para>Gets whether the item is hovered.</para>
      </summary>
      <value>true if the item is hovered; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Id">
      <summary>
        <para>Gets or sets the item’s unique identifier. The SVG image format allows IDs to be assigned to items via the id attribute.</para>
      </summary>
      <value>The item’s ID.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.IsGroup">
      <summary>
        <para>Gets whether the current item is a group.</para>
      </summary>
      <value>true if the current item is a group; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.IsRoot">
      <summary>
        <para>Gets whether the current item is the root item.</para>
      </summary>
      <value>true if the current item is the root item; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.IsSimpleTextItem">
      <summary>
        <para>Gets whether the current item only has text content.</para>
      </summary>
      <value>true if the item’s content is text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Items">
      <summary>
        <para>Gets the current group’s children.</para>
      </summary>
      <value>A child item collection.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.OutlinePen">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen"/> that draws the current <see cref="T:DevExpress.XtraEditors.SvgImageItem"/>.</para>
      </summary>
      <value>A Pen that draws the current SvgImageItem.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Parent">
      <summary>
        <para>Returns the item’s immediate parent.</para>
      </summary>
      <value>The item’s parent.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Path">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that outlines the current <see cref="T:DevExpress.XtraEditors.SvgImageItem"/>.</para>
      </summary>
      <value>A GraphicsPath that outlines the current SvgImageItem.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageItem.PropertyChanged">
      <summary>
        <para>Fires when the item’s properties are changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Root">
      <summary>
        <para>Gets the item’s root ancestor.</para>
      </summary>
      <value>The item’s root parent.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Selected">
      <summary>
        <para>Gets or sets whether the item is selected.</para>
      </summary>
      <value>true if the item is selected; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.SuperTip">
      <summary>
        <para>Gets or sets a <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">super tooltip</see> for this item.</para>
      </summary>
      <value>A super tooltip shown when a user hovers overs this item.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Tag">
      <summary>
        <para>Use this property to associate custom data with the item.</para>
      </summary>
      <value>An object associated with the item.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Text">
      <summary>
        <para>Gets or sets the item’s text. This property is supported for items that only have text content in the source SVG file.</para>
      </summary>
      <value>The item’s text.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.ToolTip">
      <summary>
        <para>Gets or sets the item’s <see href="https://docs.devexpress.com/WindowsForms/2398/common-features/tooltips">regular tooltip</see>.</para>
      </summary>
      <value>A hint shown when a user hovers over this item.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.ToolTipAnchor">
      <summary>
        <para>Gets or sets whether the tooltip is anchored relative to the mouse pointer or the hovered item.</para>
      </summary>
      <value>A value that specifies whether the tooltip is anchored relative to the mouse pointer or the hovered item. In Default mode, the behavior depends on the <see cref="P:DevExpress.Utils.ToolTipController.ToolTipAnchor">ToolTipController.ToolTipAnchor</see> property.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.ToolTipIconType">
      <summary>
        <para>Gets or sets a regular tooltip’s icon type.</para>
      </summary>
      <value>A regular tooltip’s icon type.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.ToolTipTitle">
      <summary>
        <para>Gets or sets a regular tooltip’s title.</para>
      </summary>
      <value>A regular tooltip’s title.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Transform">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A Matrix object.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItem.Visible">
      <summary>
        <para>Gets or sets the item’s visibility. An item can still be hidden if any parent group of the item is hidden.</para>
      </summary>
      <value>true if item item is visible; otherwise, false</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageItemAppearance">
      <summary>
        <para>Contains appearance settings to paint image items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearance.#ctor(DevExpress.XtraEditors.SvgImageBox)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageItemAppearance"/> class with specified settings.</para>
      </summary>
      <param name="owner">The owner of the created SvgImageItemAppearance object.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearance.#ctor(DevExpress.XtraEditors.SvgImageItem)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageItemAppearance"/> class with specified settings.</para>
      </summary>
      <param name="owner">The owner of the created SvgImageItemAppearance object.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearance.Assign(DevExpress.XtraEditors.SvgImageItemAppearance)">
      <summary>
        <para>Copies settings from the specified object to the current object.</para>
      </summary>
      <param name="appearance">The object whose settings are copied to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearance.BorderColor">
      <summary>
        <para>Gets or sets a custom border color applied to an image item.</para>
      </summary>
      <value>A custom border color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearance.BorderThickness">
      <summary>
        <para>Gets or sets the custom border’s thickness, in pixels. When the image is scaled based on the <see cref="P:DevExpress.XtraEditors.SvgImageBox.SizeMode">SvgImageBox.SizeMode</see> setting, the custom borders are scaled as well.</para>
      </summary>
      <value>The border’s thickness, in pixels. If the value is zero or negative, no custom border is painted.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearance.FillColor">
      <summary>
        <para>Gets or sets a custom background color applied to an image item.</para>
      </summary>
      <value>A custom background color.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageItemAppearanceCollection">
      <summary>
        <para>Contains appearance settings for SVG image items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.#ctor(DevExpress.XtraEditors.SvgImageBox)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageItemAppearanceCollection"/> class with specified settings.</para>
      </summary>
      <param name="owner">The control that will own the created collection.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.#ctor(DevExpress.XtraEditors.SvgImageItem)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageItemAppearanceCollection"/> class with specified settings.</para>
      </summary>
      <param name="owner">The item that will own the created collection.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Assign(DevExpress.XtraEditors.SvgImageItemAppearanceCollection)">
      <summary>
        <para>Copies settings from the specified object to the current object.</para>
      </summary>
      <param name="appearanceCollection">The object whose settings are copied to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Disabled">
      <summary>
        <para>Gets the appearance settings applied in the disabled state.</para>
      </summary>
      <value>The appearance settings applied in the disabled state.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Hovered">
      <summary>
        <para>Gets the appearance settings applied in the hovered state.</para>
      </summary>
      <value>The appearance settings applied in the hovered state.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Normal">
      <summary>
        <para>Gets the appearance settings applied in the normal state.</para>
      </summary>
      <value>The appearance settings applied in the normal state.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Pressed">
      <summary>
        <para>Gets the appearance settings applied in the pressed state.</para>
      </summary>
      <value>The appearance settings applied in the pressed state.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.PropertyChanged">
      <summary>
        <para>Fires when the object’s properties are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Reset">
      <summary>
        <para>Resets all <see cref="T:DevExpress.XtraEditors.SvgImageItemAppearanceCollection"/> settings to their default values.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.Selected">
      <summary>
        <para>Gets the appearance settings applied in the selected state.</para>
      </summary>
      <value>The appearance settings applied in the selected state.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemAppearanceCollection.ToString">
      <summary>
        <para>Gets the object’s textual representation.</para>
      </summary>
      <returns>The object’s textual representation.</returns>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageItemCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.XtraEditors.SvgImageItem"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemCollection.#ctor(DevExpress.XtraEditors.SvgImageItem)">
      <summary>
        <para>Initializes a new instance of the class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemCollection.Dispose">
      <summary>
        <para>Disposes of the current collection.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemCollection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to items in the current collection.</para>
      </summary>
      <param name="index">A zero-based item position within the collection. If it’s negative or exceeds the last available index, an exception is raised.</param>
      <value>An item at the specified position.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageItemEventArgs">
      <summary>
        <para>Supplies data for image item-related events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageItemEventArgs.#ctor(DevExpress.XtraEditors.SvgImageItem)">
      <summary>
        <para>Initializes a new instance of the class.</para>
      </summary>
      <param name="item">The object to initialize the SvgImageItemEventArgs.Item property.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemEventArgs.Item">
      <summary>
        <para>Gets the currently processed item.</para>
      </summary>
      <value>The currently processed item.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageItemMouseEventArgs">
      <summary>
        <para>Contains data for the <see cref="E:DevExpress.XtraEditors.SvgImageBox.ItemClick"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemMouseEventArgs.Button">
      <summary>
        <para>Gets the pressed mouse button.</para>
      </summary>
      <value>The pressed mouse button.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemMouseEventArgs.Handled">
      <summary>
        <para>Gets or sets whether to manually process item clicks.</para>
      </summary>
      <value>true to manually process item clicks; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemMouseEventArgs.Location">
      <summary>
        <para>Gets the mouse location relative to the control’s top left corner.</para>
      </summary>
      <value>The mouse location.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemMouseEventArgs.X">
      <summary>
        <para>Gets the mouse x-coordinate relative to the control’s top left corner.</para>
      </summary>
      <value>The mouse x-coordinate.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageItemMouseEventArgs.Y">
      <summary>
        <para>Gets the mouse y-coordinate relative to the control’s top left corner.</para>
      </summary>
      <value>The mouse y-coordinate.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImagePopupMenuShowingEventArgs">
      <summary>
        <para>Supplies data for the PopupMenuShowing event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImagePopupMenuShowingEventArgs.#ctor(DevExpress.Utils.Menu.DXPopupMenu,DevExpress.XtraEditors.SvgImageItem,System.Drawing.Point,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the class.</para>
      </summary>
      <param name="menu">The object to initialize the Menu property.</param>
      <param name="item">The object to initialize the Item property.</param>
      <param name="point">The object to initialize the Point property.</param>
      <param name="allow">The object to initialize the Allow property.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImagePopupMenuShowingEventArgs.Allow">
      <summary>
        <para>Gets or sets whether to allow the menu to be displayed.</para>
      </summary>
      <value>true, to allow the menu to be displayed; otherwise, false</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImagePopupMenuShowingEventArgs.Item">
      <summary>
        <para>Gets the clicked item.</para>
      </summary>
      <value>The clicked item.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImagePopupMenuShowingEventArgs.Menu">
      <summary>
        <para>Gets or sets the popup menu that is about to be displayed</para>
      </summary>
      <value>Gets or sets the popup menu that is about to be displayed</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImagePopupMenuShowingEventArgs.Point">
      <summary>
        <para>Gets the position where the menu is to be invoked.</para>
      </summary>
      <value>The position where the menu is to be invoked.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageSelection">
      <summary>
        <para>Stores selected image items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageSelection.#ctor(DevExpress.XtraEditors.SvgImageBox)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SvgImageSelection"/> class with specified settings.</para>
      </summary>
      <param name="owner">The control that will own the created collection.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageSelection.AddRange(System.Collections.ICollection)">
      <summary>
        <para>Adds the specified items to the collection, and thus selects these items.</para>
      </summary>
      <param name="collection">The items to be selected.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageSelection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to items in the current collection.</para>
      </summary>
      <param name="index">A zero-based item position within the collection. If it’s negative or exceeds the last available index, an exception is raised.</param>
      <value>An item at the specified position.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageSelectionChangingEventArgs">
      <summary>
        <para>Supplies data for the <see cref="E:DevExpress.XtraEditors.SvgImageBox.SelectionChanging">SvgImageBox.SelectionChanging</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.SvgImageSelectionChangingEventArgs.#ctor(DevExpress.XtraEditors.SvgImageItem,DevExpress.XtraEditors.SvgImageSelectionChangeAction)">
      <summary>
        <para>Initializes a new instance of the class.</para>
      </summary>
      <param name="item">The object to initialize the Item property.</param>
      <param name="action">The object to initialize the Action property.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageSelectionChangingEventArgs.Action">
      <summary>
        <para>Gets or sets how the selected item collection has been changed.</para>
      </summary>
      <value>A value that specifies how the selected item collection has been changed.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.SvgImageSelectionChangingEventArgs.Item">
      <summary>
        <para>Gets or sets the currently processed item.</para>
      </summary>
      <value>The currently processed item.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.SvgImageSizeMode">
      <summary>
        <para>Specifies size mode for images within the SvgImageBox control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SvgImageSizeMode.Clip">
      <summary>
        <para>An image is not stretched.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SvgImageSizeMode.Squeeze">
      <summary>
        <para>An image is displayed as is if its actual size is smaller than the size of the container. If the image size is larger than the container’s size, the image is shrunk proportionally to fit the container’s bounds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SvgImageSizeMode.Stretch">
      <summary>
        <para>An image is stretched to fit in the control’s area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.SvgImageSizeMode.Zoom">
      <summary>
        <para>An image is stretched proportionally. The image fits within the area of the container in at least one direction.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraEditors.ViewInfo">
      <summary>
        <para>Contains classes that support the internal infrastructure of DevExpress editors and controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.ViewInfo.ScrollBarVisibility">
      <summary>
        <para>Lists the available scroll bar visibility modes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ViewInfo.ScrollBarVisibility.Hidden">
      <summary>
        <para>The scroll bar is hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.ViewInfo.ScrollBarVisibility.Visible">
      <summary>
        <para>The scroll bar is visible.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.VScrollBar">
      <summary>
        <para>The vertical scrollbar.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.VScrollBar.#ctor">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.XtraEditors.VScrollBar"/> object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.VScrollBar.RightToLeft">
      <summary>
        <para>This member overrides Control.RightToLeft.</para>
      </summary>
      <value>One of the System.Windows.Forms.RightToLeft values.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.VScrollBar.SetVisibility(System.Boolean)">
      <summary>
        <para>Sets the visibility of the current <see cref="T:DevExpress.XtraEditors.VScrollBar"/> control.</para>
      </summary>
      <param name="visible">true to display the control; false to hide the control.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.VScrollBar.SupportAnnotations">
      <summary>
        <para>Returns whether this scroll bar can display <see href="https://docs.devexpress.com/WindowsForms/120556/controls-and-libraries/data-grid/scrolling/scrollbar-annotations">Scrollbar Annotations</see>.</para>
      </summary>
      <value>true if this scroll bar can display annotations; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.VScrollBarBase">
      <summary>
        <para>Serves as the base for the <see cref="T:DevExpress.XtraEditors.VScrollBar"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.VScrollBarBase.ScrollBarType">
      <summary>
        <para>Gets the value indicating whether the scroll bar is horizontal or vertical.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying scroll bar orientation.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.WindowsFormsSettings">
      <summary>
        <para>Exposes appearance and behavior settings common to all DevExpress controls.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowArrowDragIndicators">
      <summary>
        <para>Gets or sets whether dragging-and-dropping columns/fields is indicated using arrow indicators. This is a static property.</para>
      </summary>
      <value>true if dragging-and-dropping columns is indicated using arrow indicators; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowAutoFilterConditionChange">
      <summary>
        <para>Gets or sets whether or not <see href="https://docs.devexpress.com/WindowsForms/114635/controls-and-libraries/data-grid/filter-and-search">Data Grid</see> and <see href="https://docs.devexpress.com/WindowsForms/10623/controls-and-libraries/tree-list/visual-elements/automatic-filtering-row">TreeList</see> automatic filtering rows should display buttons that allow end-users to change the filtering condition.</para>
      </summary>
      <value>A DefaultBoolean value that specifies whether or not <see href="https://docs.devexpress.com/WindowsForms/114635/controls-and-libraries/data-grid/filter-and-search">DataGrid</see> and <see href="https://docs.devexpress.com/WindowsForms/10623/controls-and-libraries/tree-list/visual-elements/automatic-filtering-row">TreeList</see> automatic filtering rows should display buttons that allow end-users to change the filtering condition.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowDefaultSvgImages">
      <summary>
        <para>Gets or sets whether or not automatically generated UI elements (e.g., Grid context menu items) should display <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector icons</see>.</para>
      </summary>
      <value>DefaultBoolean.True if UI elements should display vector icons; DefaultBoolean.False to display raster icons instead.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowDpiScale">
      <summary>
        <para>Gets or sets whether or not DevExpress <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Skins</see> can be scaled on high-DPI devices.</para>
      </summary>
      <value>true if DevExpress <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Skins</see> can be scaled on high-DPI devices; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowFormSkins">
      <summary>
        <para>Gets whether the form title bar skinning feature is enabled. This is a static property.</para>
      </summary>
      <value>true if the form title bar skinning feature is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowHoverAnimation">
      <summary>
        <para>Gets or sets whether animation on hovering objects is enabled. This is a static property.</para>
      </summary>
      <value>A value that specifies whether animation on hovering objects is enabled.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowOverpanApplicationWindow">
      <summary>
        <para>Gets or sets whether the window bounce (panning feedback) is enabled when an end-user tries to pan (scroll with the finger) beyond a control’s pannable area. This is a static property.</para>
      </summary>
      <value>Default or True if the window panning feedback is enabled; False if this visual effect is disabled.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowPixelScrolling">
      <summary>
        <para>Gets or sets whether smooth pixel-based scrolling is enabled for controls. This is a static property.</para>
      </summary>
      <value>A DefaultBoolean value that specifies whether smooth pixel-based scrolling is enabled for controls.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowRibbonFormGlass">
      <summary>
        <para>Gets or sets whether or not all <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>s used within this app should use the Windows 7 Aero effect.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumerator value that specifies whether or not all <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>s used within this app should use the Windows 7 Aero effect.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowRoundedWindowCorners">
      <summary>
        <para>Specifies whether forms, dialogs, panels and tooltips have rounded corners. When this option is enabled, the form’s borders, including shadows, are drawn by the operating system. This option is only in effect in Windows 11.</para>
      </summary>
      <value>DefaultBoolean.Default or DefaultBoolean.False to display square corners; DefaultBoolean.True to display rounded corners.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowSkinEditorAttach">
      <summary>
        <para>Gets or sets whether or not you can use this application to preview custom skins in <see href="https://docs.devexpress.com/SkinEditor/1630/winforms-skin-editor">WinForms Skin Editor</see>.</para>
      </summary>
      <value>true if this application can be used to preview custom skins; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowWindowGhosting">
      <summary>
        <para>Gets or sets whether the window ghosting feature is enabled for skinned XtraForm objects. This is a static property.</para>
      </summary>
      <value>A Boolean value that specifies whether the window ghosting feature is enabled. The default value is false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AnimationMode">
      <summary>
        <para>Gets or sets whether DevExpress controls animate end-user operations (expand/collapse, tab switch, sorting, etc.). This is a static (shared in VB) property.</para>
      </summary>
      <value>An DevExpress.XtraEditors.AnimationMode enumeration value that specifies whether DevExpress controls use animation effects. The default is DevExpress.XtraEditors.AnimationMode.Default.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ApplyDemoSettings">
      <summary>
        <para>This method is called by DevExpress demos to apply specific settings. This is a static method.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AutoCorrectForeColor">
      <summary>
        <para>Gets or sets whether UI elements should automatically adjust their foreground colors when these elements use <see href="https://docs.devexpress.com/WindowsForms/114444/common-features/application-appearance-and-skin-colors">DX Skin Colors</see> for backgrounds. This behavior ensures the foreground color has enough contrast against the background to improve readability.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether background/border DX Skin Colors should adjust foreground colors as well.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.BackgroundSkinningMode">
      <summary>
        <para>Gets or sets whether colors assigned to <see cref="P:DevExpress.Utils.AppearanceObject.BackColor">AppearanceObject.BackColor</see> or <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor">AppearanceObject.BorderColor</see> properties can blend with skin element bitmaps.</para>
      </summary>
      <value>A DevExpress.XtraEditors.BackgroundSkinningMode object enumerator value that specifies what appearance colors can blend with skin element bitmaps.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ColumnAutoFilterMode">
      <summary>
        <para>Allows you to restore default filtering conditions for all Data Grid <see href="https://docs.devexpress.com/WindowsForms/114635/controls-and-libraries/data-grid/filter-and-search">auto-filter rows</see> to their 16.2 versions.</para>
      </summary>
      <value>A DevExpress.XtraEditors.ColumnAutoFilterMode enumerator value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ColumnFilterPopupMode">
      <summary>
        <para>Gets or sets the default display mode of column filter dropdowns in all <see cref="T:DevExpress.XtraGrid.GridControl"/>s, <see cref="T:DevExpress.XtraTreeList.TreeList"/>s and <see cref="T:DevExpress.XtraPivotGrid.PivotGridControl"/>s in the current application.</para>
      </summary>
      <value>A value that specifies the default display mode of column filter dropdowns in all GridControls and TreeLists in the current application.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.CompactUIMode">
      <summary>
        <para>Reduces control paddings and margins to display more information on-screen in data-intensive applications. You can enable this mode at design time in the <see href="https://docs.devexpress.com/WindowsForms/120180/whats-installed/project-settings-page">Project Settings Page</see>.</para>
      </summary>
      <value>Specifies whether the Compact UI mode is enabled. The Default value is equal to False.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.CustomizationFormSnapMode">
      <summary>
        <para>Gets or sets whether or not customization forms can stick to each other, parent forms or screen edges.</para>
      </summary>
      <value>A SnapMode enumerator value that specifies whether or not dock panels can stick to each other, parent forms or screen edges.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultAllowHtmlDraw">
      <summary>
        <para>Indicates whether HTML text formatting is enabled for controls by default. This is a static property.</para>
      </summary>
      <value>true if HTML text formatting is enabled for controls by default; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultFont">
      <summary>
        <para>Gets or sets the default font for DevExpress controls (except menus and toolbars). This is a static property.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for controls. The default value is the Tahoma font.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultLookAndFeel">
      <summary>
        <para>Gets the default <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object which is used for painting controls. This is a static property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultMenuFont">
      <summary>
        <para>Gets and sets the default font used to display text on menus, toolbars and popup menus (except Ribbon elements). This is a static property.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for menu items. If not set, the property value is specified by the System.Windows.Forms.SystemInformation.MenuFont property.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultPrintFont">
      <summary>
        <para>Gets or sets the default text font for printing. This is a static property.</para>
      </summary>
      <value>A System.Drawing.Font object that defines the default text font for printing.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultRibbonStyle">
      <summary>
        <para>Gets or sets the default style for all <see cref="T:DevExpress.XtraBars.Ribbon.RibbonControl"/>s in the application.</para>
      </summary>
      <value>The <see cref="T:DevExpress.XtraBars.Ribbon.RibbonControl"/>‘s default style.</value>
    </member>
    <member name="F:DevExpress.XtraEditors.WindowsFormsSettings.DefaultSettingsCompatibilityMode">
      <summary>
        <para>Modifies <see href="https://docs.devexpress.com/WindowsForms/118362/common-features/version-compatibility-default-property-values">default values</see> of various properties according to the selected DevExpress installation version.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DisableAccessibility">
      <summary>
        <para>Gets or sets whether the accessibility features (interaction with accessibility tools such as Microsoft Narrator) of DevExpress controls are disabled. This is a static property, and thus it affects all controls in your application.</para>
      </summary>
      <value>DefaultBoolean.True if accessibility features are disabled; otherwise, DefaultBoolean.False.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.DisableFormSkins">
      <summary>
        <para>Disables the title bar skinning feature for <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see> and <see href="https://docs.devexpress.com/WindowsForms/114565/controls-and-libraries/messages-notifications-and-dialogs">message boxes</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.DisableMdiFormSkins">
      <summary>
        <para>Disables the title bar skinning feature for MDI child DevExpress forms.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.DisableWindowShadows">
      <summary>
        <para>Disables window shadows for <see cref="T:DevExpress.XtraEditors.XtraForm"/>, <see cref="T:DevExpress.XtraEditors.XtraMessageBox"/>, and <see cref="T:DevExpress.XtraEditors.XtraDialog"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DockingViewStyle">
      <summary>
        <para>Gets or sets the style for all <see cref="T:DevExpress.XtraBars.Docking.DockManager"/> and <see cref="T:DevExpress.XtraBars.Docking2010.DocumentManager"/> panels in this application.</para>
      </summary>
      <value>A DevExpress.XtraBars.Docking2010.Views.DockingViewStyle enumeration value that specifies the style for all <see cref="T:DevExpress.XtraBars.Docking.DockManager"/> and <see cref="T:DevExpress.XtraBars.Docking2010.DocumentManager"/> panels in this application.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DragScrollThumbBeyondControlMode">
      <summary>
        <para>Gets or sets whether the scroll bar thumb restores its previous position or keeps the terminal position when it is dragged beyond a control. This is a static property.</para>
      </summary>
      <value>A DragScrollThumbBeyondControlMode enumeration value that specifies whether the scroll bar thumb restores its previous position or keeps the terminal position when dragged beyond a control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DragScrollThumbBeyondControlThreshold">
      <summary>
        <para>Gets or sets the threshold, in pixels, beyond which the previous vertical scroll bar thumb position is restored. This property is in effect in the RestoreThumbPosition mode. This is a static property.</para>
      </summary>
      <value>An integer value that specifies the threshold, in pixels, beyond which the previous vertical scroll bar thumb position is restored. The default value is 50 pixels.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.EnableCodedUITestExtension">
      <summary>
        <para>Gets or sets whether to enable the <see href="https://docs.devexpress.com/CodedUIExtension/11028/coded-ui-test-extension">Coded UI Test Extension</see>.</para>
        <para />
        <para><strong>Security note: </strong>We do not recommend enabling this functionality by default. Review all security-related matters and mitigate associated risks before enabling the DevExpress Coded UI Test extension to enhance overall security and maintain application integrity. Learn more</para>
      </summary>
      <value>A value that specifies whether to enable the <see href="https://docs.devexpress.com/CodedUIExtension/11028/coded-ui-test-extension">Coded UI Test Extension</see> (disabled by default).</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableFormSkins">
      <summary>
        <para>Enables the title bar skinning feature for <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see> and <see href="https://docs.devexpress.com/WindowsForms/114565/controls-and-libraries/messages-notifications-and-dialogs">message boxes</see>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableFormSkinsIfXP">
      <summary>
        <para>Enables the title bar skinning feature for <see href="https://docs.devexpress.com/WindowsForms/114561/controls-and-libraries/forms-and-user-controls">DevExpress forms</see> and <see href="https://docs.devexpress.com/WindowsForms/114565/controls-and-libraries/messages-notifications-and-dialogs">message boxes</see>, if the application is running under Microsoft Windows XP.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableMdiFormSkins">
      <summary>
        <para>Enables the title bar skinning feature for MDI child DevExpress forms.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableWindowShadows">
      <summary>
        <para>Re-enables form, message and dialog shadows that have been turned off with the <see cref="M:DevExpress.XtraEditors.WindowsFormsSettings.DisableWindowShadows">WindowsFormsSettings.DisableWindowShadows()</see> method call. Can also be used to display shadows through remote connections when the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.OptimizeRemoteConnectionPerformance">WindowsFormsSettings.OptimizeRemoteConnectionPerformance</see> property is enabled.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FilterCriteriaDisplayStyle">
      <summary>
        <para>Gets or sets the default display style of filter conditions in a control’s Filter Panel, MRU Filter List, and built-in Filter Editor.</para>
      </summary>
      <value>The default display style of filter conditions in a control’s Filter Panel and built-in Filter Editor</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FindPanelBehavior">
      <summary>
        <para>Gets or sets whether records that do not match a query in a find panel are hidden.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.FindPanelBehavior"/> enumeration value that specifies whether records that do not match the query are hidden.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FindPanelCondition">
      <summary>
        <para>Specifies the default comparison operator (Contains, Equals, StartWith, etc.) a control uses to search for words entered in a Find Panel. This setting is applied to all controls that have their OptionsFind.Condition properties set to Default.</para>
      </summary>
      <value>The default comparison operator.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FindPanelParserKind">
      <summary>
        <para>Specifies the default behavior of a control’s Find Panel when it combines entered words to create a search query. This setting is applied to all controls that have their OptionsFind.ParserKind properties set to Default.</para>
      </summary>
      <value>The default <see cref="P:DevExpress.XtraGrid.Views.Base.ColumnViewOptionsFind.ParserKind">ColumnViewOptionsFind.ParserKind</see> property value for all Data Grids in the project.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FocusRectStyle">
      <summary>
        <para>Gets or sets the style of dashed lines to paint focus rectangles. This is a static property.</para>
      </summary>
      <value>A DXDashStyle enumeration value that specifies the style of dashed lines to paint focus rectangles.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FontBehavior">
      <summary>
        <para>Gets or sets the behavior specifying fonts used by DevExpress and standard .Net controls. This is a static property. Setting this property modifies the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultFont">WindowsFormsSettings.DefaultFont</see> property.</para>
      </summary>
      <value>A DevExpress.XtraEditors.WindowsFormsFontBehavior enumeration value that specifies the behavior specifying fonts used by DevExpress and standard .Net controls.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FontIconsStyle">
      <summary>
        <para>Gets or sets the default icon font style.</para>
      </summary>
      <value>The icon form style.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceAPIPaint">
      <summary>
        <para>Enables the mixed use of the DevExpress text rendering library and System.Windows.Forms.TextRenderer class functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceDirectXPaint">
      <summary>
        <para>Turns the <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX Hardware Acceleration</see> on.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceGDIPlusPaint">
      <summary>
        <para>Enables the use of the System.Drawing.Graphics class for text rendering.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForcePaintApiDiagnostics(DevExpress.Utils.Diagnostics.PaintApiDiagnosticsLevel,DevExpress.Utils.Diagnostics.PaintApiTraceLevelResolver)">
      <summary>
        <para>Allows you to trace all outdated APIs that are not recommended for use with DirectX-rendered and Per-Monitor DPI-aware applications. Starting with version 18.2, also traces Appearance.BackColor properties modified for skinned UI elements.</para>
      </summary>
      <param name="level">A  enumerator value that specifies how the application responds to this inadvisable API.</param>
      <param name="resolver">An optional  object that allows you to implement a custom trace behavior.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceTextRenderPaint">
      <summary>
        <para>Enables the use of the System.Windows.Forms.TextRenderer class for rendering text.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FormThickBorder">
      <summary>
        <para>Gets or sets whether all <see cref="T:DevExpress.XtraEditors.XtraForm"/> and <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/> forms in the application should display thick borders.</para>
      </summary>
      <value>true, to display thick borders; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAccentColor">
      <summary>
        <para>Returns a custom accent color.</para>
      </summary>
      <returns>The accent color.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAccentColor2">
      <summary>
        <para>Returns the second accent color.</para>
      </summary>
      <returns>The second accent color. Color.Empty if the second accent color is not specified.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAllowDefaultSvgImages">
      <summary>
        <para>Returns the actual value of the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowDefaultSvgImages">WindowsFormsSettings.AllowDefaultSvgImages</see> property.</para>
      </summary>
      <returns>true if generated UI elements should receive <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector icons</see>; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAllowHoverAnimation(DevExpress.Skins.ISkinProvider)">
      <summary>
        <para>Returns whether animation on hovering objects is enabled. This is a static method.</para>
      </summary>
      <param name="provider">An object that provides information on the current skin.</param>
      <returns>true if animation on hovering objects is enabled; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAllowSkinEditorAttach">
      <summary>
        <para>Returns whether this application can serve as an External Preview Application in <see href="https://docs.devexpress.com/SkinEditor/1630/winforms-skin-editor">WinForms Skin Editor</see>. See the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowSkinEditorAttach">WindowsFormsSettings.AllowSkinEditorAttach</see> property for the details.</para>
      </summary>
      <returns>true if this application can serve as an External Preview Application in <see href="https://docs.devexpress.com/SkinEditor/1630/winforms-skin-editor">WinForms Skin Editor</see>; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAutoCorrectForeColor">
      <summary>
        <para>Returns the current <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.AutoCorrectForeColor">WindowsFormsSettings.AutoCorrectForeColor</see> property setting.</para>
      </summary>
      <returns>true if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.AutoCorrectForeColor">WindowsFormsSettings.AutoCorrectForeColor</see> property equals DefaultBoolean.Default or DefaultBoolean.True; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeft(System.Windows.Forms.Control)">
      <summary>
        <para>Returns a Boolean value that indicates whether the specified control is actually aligned to support locales using right-to-left fonts. This is a static method.</para>
      </summary>
      <param name="control">A Control object.</param>
      <returns>true if the specified control is actually aligned to support locales using right-to-left fonts; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeft(System.Windows.Forms.RightToLeft)">
      <summary>
        <para>Returns a Boolean value that specifies whether DevExpress controls are aligned to support locales using right-to-left fonts. The method parameter allows the default behavior to be specified. This is a static method.</para>
      </summary>
      <param name="rightToLeft">A RightToLeft enumeration value that specifies the default behavior that is used if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeft">WindowsFormsSettings.RightToLeft</see> property equals Default.</param>
      <returns>true if DevExpress controls are aligned to support locales using right-to-left fonts; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeftLayout(System.Boolean)">
      <summary>
        <para>Returns a Boolean value that indicates whether right-to-left mirror placement is turned on. The method parameter allows the default behavior to be specified. This is a static method.</para>
      </summary>
      <param name="rightToLeft">A default Boolean value that is returned if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeftLayout">WindowsFormsSettings.RightToLeftLayout</see> property equals Default.</param>
      <returns>A Boolean value that indicates whether right-to-left mirror placement is turned on.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeftLayout(System.Windows.Forms.Control)">
      <summary>
        <para>Returns a Boolean value that indicates whether right-to-left mirror placement is turned on for the specified control or form. This is a static method.</para>
      </summary>
      <param name="control">A Control object.</param>
      <returns>A Boolean value that indicates whether right-to-left mirror placement is turned on for the specified control or form.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetRightToLeft(System.Windows.Forms.Control)">
      <summary>
        <para>Returns a RightToLeft enumeration value that indicates whether the specified control is actually aligned to support locales using right-to-left fonts. This is a static method.</para>
      </summary>
      <param name="control">A Control object.</param>
      <returns>A System.Windows.Forms.RightToLeft enumeration value that indicates whether the specified control is actually aligned to support locales using right-to-left fonts.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetRightToLeft(System.Windows.Forms.RightToLeft)">
      <summary>
        <para>Returns a RightToLeft enumeration value that specifies whether DevExpress controls are aligned to support locales using right-to-left fonts. The method parameter allows the default behavior to be specified. This is a static method.</para>
      </summary>
      <param name="rightToLeft">A default System.Windows.Forms.RightToLeft enumeration value that is returned if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeft">WindowsFormsSettings.RightToLeft</see> property equals Default.</param>
      <returns>A System.Windows.Forms.RightToLeft enumeration value that specifies whether DevExpress controls are aligned to support locales using right-to-left fonts.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.InplaceEditorUpdateMode">
      <summary>
        <para>Gets or sets edit value update mode for <see cref="T:DevExpress.XtraBars.BarEditItem"/>s which display inplace editors in bars (see <see href="https://docs.devexpress.com/WindowsForms/5361/controls-and-libraries/ribbon-bars-and-menu/bars">Bar Manager</see>) and <see href="https://docs.devexpress.com/WindowsForms/2500/controls-and-libraries/ribbon-bars-and-menu/ribbon">Ribbon</see> controls.</para>
        <para>This property is supported for a limited set of inplace editors. See the Remarks section for more information.</para>
      </summary>
      <value>An DevExpress.XtraEditors.InplaceEditorUpdateMode enumerator value that specifies the edit value update mode for inplace editors.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.IsAllowPixelScrolling">
      <summary>
        <para>Gets whether smooth pixel-based scrolling is enabled for controls.</para>
        <para>This is a static property.</para>
      </summary>
      <value>true if smooth pixel-based scrolling is enabled for controls; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.LoadApplicationSettings">
      <summary>
        <para>Loads application settings and updates the corresponding CLR properties accordingly.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.MdiFormThickBorder">
      <summary>
        <para>Gets or sets whether all child MDI <see cref="T:DevExpress.XtraEditors.XtraForm"/> and <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/> forms in the application should display increased borders.</para>
      </summary>
      <value>true, to display thick borders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.OptimizeRemoteConnectionPerformance">
      <summary>
        <para>Gets or sets whether the application should disable various visual effects to enhance the performance when accessed over slow remote connections.</para>
      </summary>
      <value>Specifies whether the remote connection optimization is on. The Default value is equal to false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PopupAnimation">
      <summary>
        <para>Gets or sets the animation effects that follow expanding and collapsing popup menus.</para>
      </summary>
      <value>A DevExpress.XtraEditors.PopupAnimation enumerator value that specifies animation effects that follow expanding and collapsing popup menus.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PopupMenuStyle">
      <summary>
        <para>Gets or sets whether the DevExpess controls’ built-in context menus are displayed in the classic rectangular or radial style. This is a static property.</para>
      </summary>
      <value>A PopupMenuStyle enumeration value that specifies the style in which built-in context menus are displayed.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PopupShadowStyle">
      <summary>
        <para>Specifies the shadow style applied to all popup menus in this application.</para>
      </summary>
      <value>A DevExpress.XtraEditors.PopupShadowStyle enumerator value that specifies the shadow style applied to all popup menus in this application.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PreferredDateTimeCulture">
      <summary>
        <para>Gets or sets the culture settings used by date-time (calendar, scheduler, etc.) controls for month names, day abbreviations, and the first day of week.</para>
      </summary>
      <value>A DevExpress.XtraEditors.DateTimeCulture enumeration value, such as CurrentCulture and CurrentUICulture, that specifies the culture used by date-time controls.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.RegisterUserSkin(DevExpress.Skins.Info.SkinBlobXmlCreator)">
      <summary>
        <para>Registers the specified skin stored as a BLOB for runtime use. This method replaces the previously used <see cref="M:DevExpress.Skins.SkinManager.RegisterSkin(DevExpress.Skins.SkinCreator)">SkinManager.RegisterSkin(SkinCreator)</see> method that did not affect splash screens and required that you call the additional <see cref="M:DevExpress.XtraSplashScreen.SplashScreenManager.RegisterUserSkins(System.Reflection.Assembly)">SplashScreenManager.RegisterUserSkins(Assembly)</see> method.</para>
      </summary>
      <param name="creator">An object that contains information on the target BLOB skin.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.RegisterUserSkins(System.Reflection.Assembly)">
      <summary>
        <para>Registers all skins from the target assembly, allowing you and your users to apply them. This method replaces the previously used SkinManager.Default.RegisterAssembly method that did not affect splash screens and required that you call the additional <see cref="M:DevExpress.XtraSplashScreen.SplashScreenManager.RegisterUserSkins(System.Reflection.Assembly)">SplashScreenManager.RegisterUserSkins(Assembly)</see> method.</para>
      </summary>
      <param name="assembly">Custom skin storage.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeft">
      <summary>
        <para>Gets or sets whether visual elements of DevExpress controls are aligned to support locales using right-to-left fonts. This is a static property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether visual elements of DevExpress controls are aligned to support locales using right-to-left fonts.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeftLayout">
      <summary>
        <para>Gets or sets whether right-to-left mirror placement is turned on.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether right-to-left mirror placement is turned on.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ScrollUIMode">
      <summary>
        <para>Gets or sets whether scroll bars are optimized for desktop or touch applications. This is a static (Shared in VB.NET) property. Set this property at application startup.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraEditors.ScrollUIMode"/> enumeration value that specifies how scroll bars are displayed.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.SetAccentColor(System.Drawing.Color)">
      <summary>
        <para>Specifies a custom accent color. The custom accent color overrides the accent color setting in Windows OS (if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TrackWindowsAccentColor"/> option is enabled).</para>
      </summary>
      <param name="accentColor">The accent color.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.SetAccentColor2(System.Drawing.Color)">
      <summary>
        <para>Specifies the second accent color. “The Bezier” skin supports the second accent color. Other skins do not support the second accent color.</para>
      </summary>
      <param name="accentColor2">The second accent color.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.SetDPIAware">
      <summary>
        <para>Enables system DPI awareness mode for the current process.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.SetPerMonitorDpiAware">
      <summary>
        <para>Enables “Per-Monitor (v2)” DPI awareness mode for the process if it runs on versions greater than Windows 10 Creators Update (build 1703). On older Windows OS versions, enables system DPI awareness mode.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ShowTouchScrollBarOnMouseMove">
      <summary>
        <para>Gets or sets whether a control’s scroll bars appear on screen when an end-user moves the mouse pointer over the scrollable content. This is a static property.</para>
      </summary>
      <value>true if scroll bars appear on screen when an end-user moves the mouse pointer over the scrollable content; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.SmartMouseWheelProcessing">
      <summary>
        <para>Gets or sets whether the mouse wheel scrolls the control that is currently hovered over with the mouse pointer or the control that is currently focused. This property is in effect for controls that reside within an <see cref="T:DevExpress.XtraEditors.XtraForm"/> or <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>. This is a static property.</para>
      </summary>
      <value>true, if the mouse wheel scrolls the control that is currently hovered with the mouse pointer; false, if the focused control is scrolled with the mouse wheel, regardless of the mouse cursor position.The default is true.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.SuppressExcessiveAccessibilityNotifications">
      <summary>
        <para>Gets or sets whether to suppress accessibility events on mouse hover. This is a static property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.SvgImageRenderingMode">
      <summary>
        <para>Gets or sets the rendering quality of vector images.</para>
      </summary>
      <value>A DevExpress.Utils.Svg.SvgImageRenderingMode enumeration value that specifies the rendering quality, such as HighSpeed or HighQuality, of vector images. Default equals HighQuality.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ThickBorderWidth">
      <summary>
        <para>Gets or sets the width of XtraForm and RibbonForm “thick” borders. Forms use thick borders when you enable the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.FormThickBorder">WindowsFormsSettings.FormThickBorder</see> and\or <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.MdiFormThickBorder">WindowsFormsSettings.MdiFormThickBorder</see> properties.</para>
      </summary>
      <value>The border thickness.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor">
      <summary>
        <para>Gets or sets a scale factor used to calculate the size of controls and distance between their elements in touch UI mode. This is a static (Shared in VB.NET) property.</para>
      </summary>
      <value>A scale factor used to calculate the size of controls and distance between their elements in touch UI mode.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchUIMode">
      <summary>
        <para>Gets or sets whether controls increase their size and the distance between their elements according to a scale factor. This is a static (Shared in VB.NET) property.</para>
      </summary>
      <value><see cref="F:DevExpress.LookAndFeel.TouchUIMode.True"/> if touch mode is enabled; otherwise, <see cref="F:DevExpress.LookAndFeel.TouchUIMode.Default"/> or <see cref="F:DevExpress.LookAndFeel.TouchUIMode.False"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TrackSystemHighContrastMode">
      <summary>
        <para>If this property is enabled, your application automatically applies the DevExpress “High Contrast” skin when Windows high contrast mode is on, and disables UI selectors that allow users to change skins and skin palettes. Otherwise, if this property is disabled, the active application skin does not depend on the actual state of Windows high contrast mode, and users can select any skin or skin palette. Windows high contrast mode is configured in the “Personalize | High contrast settings” screen.</para>
      </summary>
      <value>Specifies whether your application should automatically switch to the “High Contrast” skin when Windows high contrast mode is on. The DefaultBoolean.Default value is identical to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TrackWindowsAccentColor">
      <summary>
        <para>Gets or sets whether to use the Accent Color setting in Windows OS and apply it to all color palettes of vector skins except the High Contrast skin.</para>
      </summary>
      <value>DefaultBoolean.True to use the Accent Color setting in Windows OS and apply it to all color palettes of vector skins; otherwise, DefaultBoolean.False or DefaultBoolean.Default.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TrackWindowsAppMode">
      <summary>
        <para>Gets or sets whether your application tracks the Default App Mode setting in Windows OS and displays only light or dark color palettes in a <see href="https://docs.devexpress.com/WindowsForms/117178/build-an-application/application-skins/add-and-customize-the-ribbon-gallery-skin-selector">Skin gallery</see>. This setting works only in “WXI”, “Basic”, and “The Bezier” skins.</para>
      </summary>
      <value>DefaultBoolean.True to track the Default App Mode setting in Windows OS; otherwise, DefaultBoolean.False or DefaultBoolean.Default.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.UseAdvancedFilterEditorControl">
      <summary>
        <para>Specifies whether WinForms data-aware controls should use the advanced Filter Editor Control that features a single-tab interface and enhanced text criteria builder.</para>
      </summary>
      <value>A DefaultBoolean enumerator value that specifies whether or not WinForms data-aware controls should use the advanced Filter Editor Control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.UseAdvancedTextEdit">
      <summary>
        <para>Switches all TextEdit-based editors (except for <see cref="T:DevExpress.XtraEditors.Repository.RepositoryItemHypertextLabel"/> and <see cref="T:DevExpress.XtraEditors.HyperLinkEdit"/>) to Advanced Mode. See this property for more information about this mode: <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemTextEdit.UseAdvancedMode">RepositoryItemTextEdit.UseAdvancedMode</see>.</para>
      </summary>
      <value>Specifies whether Advanced Mode is enabled.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.UseDXDialogs">
      <summary>
        <para>Gets or sets whether DevExpress controls and components that display Open File, Save File and Folder Browser dialogs should display standard WinForms dialogs or their DevExpress counterparts (<see cref="T:DevExpress.XtraEditors.XtraOpenFileDialog"/>, <see cref="T:DevExpress.XtraEditors.XtraSaveFileDialog"/>, and <see cref="T:DevExpress.XtraEditors.XtraFolderBrowserDialog"/>).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether DevExpress controls and components should replace standard Open File, Save File and Folder Browser dialogs with skinnable DX Dialogs.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.UseEditorTextAsAccessibleName">
      <summary>
        <para>Gets or sets whether to use the editor’s value (text) as accessible name (AccessibilityObject.Name).</para>
      </summary>
      <value>True to use the editor value (text) as accessible name; otherwise, False.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.UseUIAutomation">
      <summary>
        <para>Gets or sets whether DevExpress controls should use legacy Microsoft Active Accessibility (MSAA) or UIAutomation. See this link for more information on both technologies: Microsoft Active Accessibility and UI Automation Compared.</para>
      </summary>
      <value>true if DevExpress controls should use UIAutomation patterns; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.XtraForm">
      <summary>
        <para>A form that supports <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">title bar and border skinning</see>. The appearance settings of the XtraForm affect the <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">look and feel</see> settings of the DevExpress UI controls placed within it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraForm"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.AcrylicAccentTintOpacity">
      <summary>
        <para>Gets or sets the acrylic material’s opacity. The Acrylic effect is applied to an area occupied by the <see cref="T:DevExpress.XtraBars.Navigation.AccordionControl"/>.</para>
      </summary>
      <value>Tint layer’s opacity. 0 for maximum transparency; 255 for no transparency.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.ActiveGlowColor">
      <summary>
        <para>Gets or sets the color of the glow adorning effect applied to the form’s borders when the form is active.</para>
      </summary>
      <value>The color of the glow adorning effect applied to the form’s borders when the form is active.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.AllowFormSkin">
      <summary>
        <para>Gets or sets whether the form’s title bar and borders are painted using the current skin. This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>true if the form’s title bar and borders are painted using the current skin; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.AllowMdiBar">
      <summary>
        <para>Gets or sets whether an MDI bar is allowed for this form. This property is in effect for a parent MDI form, when the title bar skinning feature is enabled.</para>
      </summary>
      <value>true if the MDI bar is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.Appearance">
      <summary>
        <para>Gets the appearance settings used to paint the form.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the form’s appearance settings.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ApplyAcrylicAccent(DevExpress.Utils.DirectXPaint.DirectComposition.ISupportDirectComposition)">
      <summary>
        <para>Applies the Acrylic accent (a semi-partial transparent background) to a control that resides within the current form. The Acrylic accent is only supported for certain controls.</para>
      </summary>
      <param name="control">The target control that supports the Acrylic accent.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.BackColor">
      <summary>
        <para>Gets or sets the background color of the form’s client region.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the background color of the form’s client region.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImage">
      <summary>
        <para>Specifies the background image for the form.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object that represents the background image.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImageLayout">
      <summary>
        <para>Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.ImageLayout"/> value that specifies the background image layout.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImageLayoutStore">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An ImageLayout value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImageStore">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An Image object.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ClearAcrylicAccent(DevExpress.Utils.DirectXPaint.DirectComposition.ISupportDirectComposition)">
      <summary>
        <para>Clears the Acrylic accent (a semi-partial transparent background) for a control that resides within the current form. The Acrylic accent is only supported for certain controls.</para>
      </summary>
      <param name="control">The target control that supports the Acrylic accent.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.CloseBox">
      <summary>
        <para>Gets or sets whether the form’s Close button (x) is visible. This property is in effect when the <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Form Title Bar Skinning</see> feature is enabled.</para>
      </summary>
      <value>true if the form’s Close button (x) is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.ColorizeInactiveFormIcon">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.XtraEditors.XtraForm"/> icon appears grayed out when the form is inactive.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.XtraEditors.XtraForm"/>‘s icon appears grayed out when the form is inactive; false if the form’s icon appears in color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.DeactivatedForm">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.DefaultFormShowMode">
      <summary>
        <para>This property supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.DisableFormShowHelper">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value>A Boolean value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.EnableAcrylicAccent">
      <summary>
        <para>Gets or sets whether the Acrylic accent is enabled for the Accordion Control, Layout Control and Calendar Control when they reside within the current form. The property also enables the Reveal Highlight effect for the Accordion Control and Calendar Control.</para>
      </summary>
      <value>true, to enable the Acrylic effect; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.Font">
      <summary>
        <para>Gets or sets the form’s font.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object which specifies the form’s font.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.ForeColor">
      <summary>
        <para>Gets or sets the foreground color of the form’s client region.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the foreground color of the form’s client region.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.FormBorderEffect">
      <summary>
        <para>Gets or sets the form’s border effect.</para>
      </summary>
      <value>The form’s border adornment effect.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraForm.FormLayoutChanged">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.HtmlImages">
      <summary>
        <para>Gets or sets a collection of images that can be inserted into the form’s caption using the image tag. This property is in effect when the <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Form Title Bar Skinning</see> feature is enabled.</para>
      </summary>
      <value>An image collection (DevExpress.Utils.ImageCollection or DevExpress.Utils.SvgImageCollection).</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.HtmlText">
      <summary>
        <para>Allows you to specify the form’s caption and format it using HTML tags. The property is in effect when the <see href="https://docs.devexpress.com/WindowsForms/2399/build-an-application/skins">Form Title Bar Skinning</see> feature is applied.</para>
      </summary>
      <value>A string that specifies the form’s caption, formatted using HTML tags.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.Icon">
      <summary>
        <para>For internal use. To specify the <see cref="T:DevExpress.XtraEditors.XtraForm"/> icon, use <see cref="P:DevExpress.XtraEditors.XtraForm.IconOptions"/>.</para>
      </summary>
      <value>The <see cref="T:DevExpress.XtraEditors.XtraForm"/> icon.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.IconOptions">
      <summary>
        <para>Provides access to image settings that allow you to assign raster and <see href="https://docs.devexpress.com/WindowsForms/117631/common-features/graphics-performance-and-high-dpi/how-to-draw-and-use-svg-images">vector</see> images to XtraForms (instead of traditional .ico images).</para>
      </summary>
      <value>Provides access to form icon-related settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.InactiveGlowColor">
      <summary>
        <para>Gets or sets the color of the glow adorning effect applied to the form’s borders when the form is not active.</para>
      </summary>
      <value>The color of the glow adorning effect applied to the form’s borders when the form is not active.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.IsAllowSmartMouseWheel(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.IsAllowSmartMouseWheel(System.Windows.Forms.Control)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.IsSuspendRedraw">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.LookAndFeel">
      <summary>
        <para>Contains settings that specify the <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">look and feel</see> of the current form and all DevExpress controls placed on the form.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel"/> object that stores look&amp;feel settings for this <see cref="T:DevExpress.XtraEditors.XtraForm"/>.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.MaximumClientSize">
      <summary>
        <para>Gets or sets the maximum allowed client size for a form.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.MaximumSize">
      <summary>
        <para>Gets or sets the form’s maximum size.</para>
      </summary>
      <value>A Size structure that specifies the form’s maximum size.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.MdiChildCaptionFormatString">
      <summary>
        <para>Gets or sets the composite format string used to format the merged MDI parent and child captions.</para>
      </summary>
      <value>A string value that represents the composite format string used to format the merged MDI parent and child captions.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.MinimumClientSize">
      <summary>
        <para>Gets or sets the minimum allowed client size for a form.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.MinimumSize">
      <summary>
        <para>Gets or sets the form’s minimum size.</para>
      </summary>
      <value>A Size structure that specifies the form’s minimum size.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ProcessSmartMouseWheel(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ResetBackColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraForm.BackColor">XtraForm.BackColor</see> property back to its default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ResetForeColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraForm.ForeColor">XtraForm.ForeColor</see> property back to its default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ResumeLayout">
      <summary>
        <para>Resumes the usual layout logic.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ResumeLayout(System.Boolean)">
      <summary>
        <para>Resumes the usual layout logic, optionally forcing an immediate layout of pending layout requests.</para>
      </summary>
      <param name="performLayout">true to execute pending layout requests; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ResumeRedraw">
      <summary>
        <para>Resumes painting the form whose painting had been suspended.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>
        <para>Shows the form as a modal dialog box with the specified owner.</para>
      </summary>
      <param name="owner">Any object implementing <see cref="T:System.Windows.Forms.IWin32Window"/> that represents the top-level window that will own the modal dialog box.</param>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.ShowIcon">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.XtraEditors.XtraForm"/> shows its icon.</para>
      </summary>
      <value>true if the <see cref="T:DevExpress.XtraEditors.XtraForm"/> shows its icon; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.ShowMdiChildCaptionInParentTitle">
      <summary>
        <para>Gets or sets whether the caption of the currently active multiple-document interface (MDI) child is merged with the MDI parent caption, and shown in the form’s title bar.</para>
      </summary>
      <value>true if the MDI child caption is merged with the MDI parent caption; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.Site">
      <summary>
        <para>Gets or sets the site of the <see cref="T:DevExpress.XtraEditors.XtraForm"/>.</para>
      </summary>
      <value>The ISite associated with the <see cref="T:DevExpress.XtraEditors.XtraForm"/>, if any.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.SuppressDeactivation">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.SuspendLayout">
      <summary>
        <para>Temporarily suspends the layout logic for the control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraForm.SuspendRedraw">
      <summary>
        <para>Suspends painting the form.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.Text">
      <summary>
        <para>Gets or sets the form’s caption.</para>
      </summary>
      <value>A string that specifies the form’s caption.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraForm.TextMdiTab">
      <summary>
        <para>Gets or sets the text displayed within a tab corresponding to the current form. This property is in effect when the current form represents an MDI child within an <see cref="T:DevExpress.XtraTabbedMdi.XtraTabbedMdiManager"/> container.</para>
      </summary>
      <value>A string value.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.XtraPanel">
      <summary>
        <para>The base class for panels.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraPanel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraPanel"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraPanel.AutoScroll">
      <summary>
        <para>Gets or sets a value indicating whether the container enables the user to scroll to any control placed outside its visible boundaries.</para>
      </summary>
      <value>true if the auto-scrolling feature is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraPanel.AutoSize">
      <summary>
        <para>Gets or sets whether the panel is automatically resized according to the value of the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode">XtraPanel.AutoSizeMode</see> property.</para>
      </summary>
      <value>true if the panel’s auto-resizing feature is enabled; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraPanel.AutoSizeChanged">
      <summary>
        <para>Fires when the value of the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSize">XtraPanel.AutoSize</see> property is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode">
      <summary>
        <para>Indicates the automatic sizing behavior of the panel.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.AutoSizeMode"/> value.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraPanel.BorderStyle">
      <summary>
        <para>Gets or sets the panel’s border style.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Forms.BorderStyle"/> value that specifies the panel’s border style.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraPanel.GetPreferredSize(System.Drawing.Size)">
      <summary>
        <para>Retrieves the size of a rectangular area into which the panel can be fitted.</para>
      </summary>
      <param name="proposedSize">A custom-sized area for the panel.</param>
      <returns>A Size value that specifies a rectangle into which the panel can be fit.</returns>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraPanel.KeyDown">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.XtraPanel"/> class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraPanel.KeyPress">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.XtraPanel"/> class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraPanel.KeyUp">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.XtraPanel"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraPanel.ResetAutoSizeMode">
      <summary>
        <para>Resets the  <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode">XtraPanel.AutoSizeMode</see> property to its default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraPanel.ShouldSerializeAutoSizeMode">
      <summary>
        <para>Gets whether the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode">XtraPanel.AutoSizeMode</see> property should be serialized.</para>
      </summary>
      <returns>true if the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode">XtraPanel.AutoSizeMode</see> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraPanel.TabStop">
      <summary>
        <para>Gets or sets a value indicating whether the user can focus this control using the TAB key.</para>
      </summary>
      <value>true if the user can focus this control using the TAB key; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraPanel.Text">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.XtraPanel"/> class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraPanel.TextChanged">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.XtraEditors.XtraPanel"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.XtraScrollableControl">
      <summary>
        <para>The skinnable panel with built-in auto-scroll functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollableControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollableControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AllowTouchScroll">
      <summary>
        <para>Gets or sets if end-users can scroll the <see cref="T:DevExpress.XtraEditors.XtraScrollableControl"/> by dragging its content.</para>
      </summary>
      <value>true if end-users can scroll the <see cref="T:DevExpress.XtraEditors.XtraScrollableControl"/> by dragging its content; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AlwaysScrollActiveControlIntoView">
      <summary>
        <para>Gets or sets whether the XtraScrollableControl‘s view is automatically scrolled to completely display the active control if it is invisible, or partly visible.</para>
      </summary>
      <value>true to automatically scroll the view to completely display the active control if it is invisible, or partly visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.Appearance">
      <summary>
        <para>Gets the control’s appearance settings.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains appearance settings used to paint the control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScroll">
      <summary>
        <para>Gets or sets whether the XtraScrollableControl enables the user to scroll to any controls placed outside its visible boundaries.</para>
      </summary>
      <value>true to enable auto-scrolling; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollMargin">
      <summary>
        <para>Gets or sets the size of the auto-scroll margin.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> object that represents the height and width of the auto-scroll margin, in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollMinSize">
      <summary>
        <para>Gets or sets the minimum size of the auto-scroll.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> object that represents the minimum height and width of the area through which a user can scroll, in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollPosition">
      <summary>
        <para>Gets or sets the location of the auto-scroll position.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Point"/> structure that represents the auto-scroll position, in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.BackColor">
      <summary>
        <para>Gets or sets the control’s background color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> value that specifies the control’s background color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.DisplayRectangle">
      <summary>
        <para>Gets the rectangle that represents the XtraScrollableControl‘s view area.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Rectangle"/> object that represents the control’s view area.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.EnableIXtraResizeableControlInterfaceProxy">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.FireScrollEventOnMouseWheel">
      <summary>
        <para>Gets or sets whether the <see cref="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll">XtraScrollableControl.Scroll</see> event fires when using the mouse wheel.</para>
      </summary>
      <value>true if the <see cref="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll">XtraScrollableControl.Scroll</see> event fires when using the mouse wheel; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.ForeColor">
      <summary>
        <para>Gets or sets the control’s foreground color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> value that specifies the control’s foreground color.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollableControl.GetNonClientManager">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.HorizontalScroll">
      <summary>
        <para>Gets the horizontal scrollbar’s settings.</para>
      </summary>
      <value>A DevExpress.XtraEditors.HorizontalScroll object that represents the horizontal scrollbar.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.InvertTouchScroll">
      <summary>
        <para>Gets or sets whether the scroll direction is inverted when scrolling on touch devices via the pan gesture.</para>
      </summary>
      <value>true if the scroll direction is inverted; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.LookAndFeel">
      <summary>
        <para>Provides access to the <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">Look And Feel and Skinning</see> settings of this <see cref="T:DevExpress.XtraEditors.XtraScrollableControl"/> object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel"/> object that stores look-and-feel settings.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraScrollableControl.PaintEx">
      <summary>
        <para>A <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX</see>-compatible event that replaces the standard Control.Paint event. Occurs when the control is redrawn.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollableControl.ResetBackColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraScrollableControl.BackColor">XtraScrollableControl.BackColor</see> property back to its default value.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll">
      <summary>
        <para>Fires when the control’s view is scrolled.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.ScrollBarSmallChange">
      <summary>
        <para>Gets or sets the distance the XtraScrollableControl‘s view is scrolled when the user clicks one of the scroll buttons.</para>
      </summary>
      <value>An integer value that specifies the distance, in pixels, the control’s view is scrolled when the user clicks one of the scroll buttons.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)">
      <summary>
        <para>Scrolls the XtraScrollableControl‘s view to display the specified control.</para>
      </summary>
      <param name="activeControl">A <see cref="T:System.Windows.Forms.Control"/> descendant that represents the control which is invisible, or partly visible, within the XtraScrollableControl.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)">
      <summary>
        <para>Specifies the size of the auto-scroll margin.</para>
      </summary>
      <param name="x">An integer value that specifies the width of the auto-scroll margin, in pixels.</param>
      <param name="y">An integer value that specifies the height of the auto-scroll margin, in pixels.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.Text">
      <summary>
        <para>Gets or sets the text associated with the control.</para>
      </summary>
      <value>A string value that specifies the text associated with the control.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollableControl.VerticalScroll">
      <summary>
        <para>Gets the vertical scrollbar’s settings.</para>
      </summary>
      <value>A DevExpress.XtraEditors.VerticalScroll object that represents the vertical scrollbar.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.XtraScrollEventArgs">
      <summary>
        <para>Contains data for the <see cref="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollEventArgs.#ctor(System.Windows.Forms.ScrollEventType,System.Int32,DevExpress.XtraEditors.ScrollOrientation)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollEventArgs"/> class with the specified <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.Type"/>, <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue"/>, and <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.ScrollOrientation"/> properties.</para>
      </summary>
      <param name="type">The type of action that raises the event. This value is assigned to the <see cref="P:System.Windows.Forms.ScrollEventArgs.Type"/> property.</param>
      <param name="newValue">An integer value that specifies the new position of the scrollbar. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue">XtraScrollEventArgs.NewValue</see> property.</param>
      <param name="scroll">A value that specifies the scrollbar orientation. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.ScrollOrientation">XtraScrollEventArgs.ScrollOrientation</see> property.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollEventArgs.#ctor(System.Windows.Forms.ScrollEventType,System.Int32,System.Int32,DevExpress.XtraEditors.ScrollOrientation)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollEventArgs"/> class with the specified <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.Type"/>, <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.OldValue"/>, <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue"/>, and <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.ScrollOrientation"/> properties.</para>
      </summary>
      <param name="type">The type of action that raises the event. This value is assigned to the <see cref="P:System.Windows.Forms.ScrollEventArgs.Type"/> property.</param>
      <param name="oldValue">An integer value that specifies the old position of the scrollbar. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.OldValue">XtraScrollEventArgs.OldValue</see> property.</param>
      <param name="newValue">An integer value that specifies the new position of the scrollbar. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue">XtraScrollEventArgs.NewValue</see> property.</param>
      <param name="scroll">A value that specifies the scrollbar orientation. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.ScrollOrientation">XtraScrollEventArgs.ScrollOrientation</see> property.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollEventArgs.#ctor(System.Windows.Forms.ScrollEventType,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollEventArgs"/> class with the specified <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.Type"/>, <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.OldValue"/>, and <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue"/> properties.</para>
      </summary>
      <param name="type">The type of action that raises the event. This value is assigned to the <see cref="P:System.Windows.Forms.ScrollEventArgs.Type"/> property.</param>
      <param name="oldValue">An integer value that specifies the previous position of the scrollbar. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.OldValue">XtraScrollEventArgs.OldValue</see> property.</param>
      <param name="newValue">An integer value that specifies the new position of the scrollbar. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue">XtraScrollEventArgs.NewValue</see> property.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraScrollEventArgs.#ctor(System.Windows.Forms.ScrollEventType,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollEventArgs"/> class with the specified <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.Type"/> and <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue"/> properties.</para>
      </summary>
      <param name="type">The type of action that raises the event. This value is assigned to the <see cref="P:System.Windows.Forms.ScrollEventArgs.Type"/> property.</param>
      <param name="newValue">An integer value that specifies the new position of the scrollbar. This value is assigned to the <see cref="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue">XtraScrollEventArgs.NewValue</see> property.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollEventArgs.NewValue">
      <summary>
        <para>Gets or sets a value that specifies the position of a scrollbar after scrolling.</para>
      </summary>
      <value>An integer value that specifies the position of a scrollbar.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollEventArgs.OldValue">
      <summary>
        <para>Gets the position of a scrollbar before scrolling.</para>
      </summary>
      <value>An integer value that specifies the position of a scrollbar.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollEventArgs.ScrollOrientation">
      <summary>
        <para>Gets the scrollbar orientation.</para>
      </summary>
      <value>A value that specifies the scrollbar orientation.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraScrollEventArgs.Type">
      <summary>
        <para>Gets the scrolling type that raises the event.</para>
      </summary>
      <value>The scrolling type that raises the event.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.XtraUserControl">
      <summary>
        <para>A user control that supports <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">look and feel</see> and skinning technology. The appearance settings of this control affect the look and feel settings of the DevExpress UI controls placed within it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraUserControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraUserControl"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.Appearance">
      <summary>
        <para>Gets the appearance settings used to paint the user control.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the user control’s appearance settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.BackColor">
      <summary>
        <para>Gets or sets the user control’s background color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the user control’s background color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.EnableIXtraResizeableControlInterfaceProxy">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.Font">
      <summary>
        <para>Gets or sets font settings applied to the control.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Font"/> object that contains font settings.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.ForeColor">
      <summary>
        <para>Gets or sets the control’s foreground color.</para>
      </summary>
      <value>A Color structure that specifies the control’s foreground color.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.LookAndFeel">
      <summary>
        <para>Contains settings that specify the <see href="https://docs.devexpress.com/WindowsForms/2397/common-features/application-appearance-and-skin-colors/look-and-feel-and-skinning">look and feel</see> of the current <see cref="T:DevExpress.XtraEditors.XtraUserControl"/> and all DevExpress controls placed on it.</para>
      </summary>
      <value>An object that provides look-and-feel settings.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.XtraUserControl.PaintEx">
      <summary>
        <para>A <see href="https://docs.devexpress.com/WindowsForms/119441/common-features/graphics-performance-and-high-dpi/directx-hardware-acceleration">DirectX</see>-compatible event that replaces the standard Control.Paint event. Occurs when the control is redrawn.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraUserControl.ResetBackColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraUserControl.BackColor">XtraUserControl.BackColor</see> property back to its default value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.XtraUserControl.ResetForeColor">
      <summary>
        <para>Sets the <see cref="P:DevExpress.XtraEditors.XtraUserControl.ForeColor">XtraUserControl.ForeColor</see> property to Color.Empty.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.XtraUserControl.Site">
      <summary>
        <para>Gets or sets the site of the <see cref="T:DevExpress.XtraEditors.XtraUserControl"/>.</para>
      </summary>
      <value>The ISite associated with the <see cref="T:DevExpress.XtraEditors.XtraUserControl"/>, if any.</value>
    </member>
    <member name="N:DevExpress.XtraPrinting">
      <summary>
        <para>Contains classes that provide the basic functionality for the XtraPrinting library (bricks, pages, document).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.IPrintable">
      <summary>
        <para>Defines methods to print different controls using the XtraPrinting Library.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.AcceptChanges">
      <summary>
        <para>If implemented by a class, applies all changes made by the Property editor when implemented by a class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.HasPropertyEditor">
      <summary>
        <para>If implemented by a class, determines whether the class provides the Property editor form.</para>
      </summary>
      <returns>true if the class provides the Property editor; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.IPrintable.PropertyEditorControl">
      <summary>
        <para>If implemented by a class, returns a form which allows a user to set printing properties when implemented by a class.</para>
      </summary>
      <value>The Property editor form that enables users to customize print options of a control.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.RejectChanges">
      <summary>
        <para>If implemented by a class, cancels changes made by a user in the Property editor when implemented by a class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.ShowHelp">
      <summary>
        <para>If implemented by a class, invokes the help system for the Property editor when implemented by a class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.SupportsHelp">
      <summary>
        <para>If implemented by a class, determines whether the help system is available for the Property editor when implemented by a class.</para>
      </summary>
      <returns>true if the help system is available for the Property editor; otherwise, false.</returns>
    </member>
  </members>
</doc>